// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

Base := Rectangle {
    callback blah;
    function private_fn() {}
    public function public_fn() {}
}

export SubElements := Rectangle {
    callback foobar;
    callback foobar;
//           ^error{Duplicated callback declaration}

    callback callback_with_arg(int, string);

    callback invalid_arg(InvalidType);
//                       ^error{Unknown type 'InvalidType'}

    callback return_string() -> string;
    callback return_int() -> int;
    callback return_void();

    callback string_arg(bool, string);
    callback int_arg(bool, int);

    callback abs(int) -> int;
    pure callback cb_pure();

    foo := Base {}

    TouchArea {
        clicked => { foobar() }
    }

    TouchArea {
        clicked => foobar;
    }

    TouchArea {
        clicked => 3 + 3;
//                 ^error{The expression in a callback forwarding must be a callback/function reference}
    }

    TouchArea {
        clicked => foo.public_fn;
    }

    TouchArea {
        clicked => foo.private_fn;
//                     ^error{The function 'private_fn' is private. Annotate it with 'public' to make it accessible from other components}
    }

    TouchArea {
        clicked: 45;
//      ^error{'clicked' is a callback. Use `=>` to connect}
        x => {}
//      ^error{'x' is not a callback in TouchArea}
    }

    TouchArea {
        clicked => { foobar() }
        clicked => { foobar() }
//      ^error{Duplicated callback}
    }

    TouchArea {
        clicked => foobar;
        clicked => foobar;
//      ^error{Duplicated callback}
    }

    TouchArea {
        clicked => { foobar() }
        clicked => foobar;
//      ^error{Duplicated callback}
    }

    does_not_exist => {
//  ^error{'does-not-exist' is not a callback in Rectangle}
        root.does_not_exist();
    }

    foobar() => { foobar() }
    callback_with_arg(a, b, c, d) => { }
//  ^error{'callback-with-arg' only has 2 arguments, but 4 were provided}

    Base {
        callback blah;
//               ^error{Cannot override callback 'blah'}
    }

    property <bool> pressed;
    callback pressed;
//           ^error{Cannot declare callback 'pressed' when a property with the same name exists}

    callback init;
//           ^error{Cannot override callback 'init'}

    callback width;
//           ^error{Cannot declare callback 'width' when a property with the same name exists}

    TouchArea {
        clicked => pressed;
//      ^error{Callbacks can only be forwarded to callbacks and functions}
    }

    return_int => return_string;
//  ^error{Cannot convert string to int}

    return_string => return_int;

    return_void => return_int;

    string_arg => int_arg;
//  ^error{Cannot forward argument 1 of callback because string cannot be converted to int}

    int_arg => string_arg;

    abs => Math.abs;

    cb_pure => foobar;
//  ^warning{Call of impure callback 'foobar'}

} 
