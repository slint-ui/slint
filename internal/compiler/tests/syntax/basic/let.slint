// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

export X := Rectangle {
//       ^warning{':=' to declare a component is deprecated. The new syntax declare components with 'component MyComponent {'. Read the documentation for more info}
    background: {
        let blue: brush = 42;
//      ^error{Local variable declaration conflicts with existing name}

        return blue;
    }

    callback foo();
    foo => {
        let foo = 1;
//      ^error{Local variable declaration conflicts with existing name}
    }

    callback aaa();
    aaa => {
        let foo: string = 42phx;
//      ^error{Local variable declaration conflicts with existing name}
    }

    // redeclaration of local variables in same scope
    callback bbb();
    bbb => {
        let foo = "hello";
//      ^error{Local variable declaration conflicts with existing name}
        let foo = "world";
//      ^error{Local variable declaration conflicts with existing name}
    }

    // redeclaration of local variables in same scope with different types
    callback ccc();
    ccc => {
        let foo = "hello";
//      ^error{Local variable declaration conflicts with existing name}
        let foo = 1;
//      ^error{Local variable declaration conflicts with existing name}
    }

    // redeclaration of local variables in different scopes
    callback ddd();
    ddd => {
        let foo = "hello";
//      ^error{Local variable declaration conflicts with existing name}

        if (true) {
            let foo = "world";
//          ^error{Local variable declaration conflicts with existing name}
        }
    }

    // redeclaration of local variables in different scopes with different types
    callback eee();
    eee => {
        let foo = "hello";
//      ^error{Local variable declaration conflicts with existing name}

        if (true) {
            let foo = 1;
//          ^error{Local variable declaration conflicts with existing name}
        }
    }
}
