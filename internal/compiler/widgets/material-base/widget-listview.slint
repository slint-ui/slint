// Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial


import { ScrollView } from "widget-scrollview.slint";
import { Item } from "widget-item.slint";

// `ListView` is like a `Scrollview` but it should have a for element, and the content are automatically layed out in a list.
export component ListView inherits ScrollView {
    @children
}

component StandardListViewBase inherits ListView {
    in property<[StandardListViewItem]> model;
    in-out property<int> current-item: -1;

    for item[idx] in root.model : Item {
        selected: idx == root.current-item;
        text: item.text;
        clicked => { root.current-item = idx; }
    }
}

// Like `ListView`, but with a default delegate, and a `model` property which is a model of type `StandardListViewItem`.
export component StandardListView inherits StandardListViewBase {
    FocusScope {
        key-pressed(event) => {
            if (event.text == Key.UpArrow && root.current-item > 0) {
                root.current-item -= 1;
                return accept;
            } else if (event.text == Key.DownArrow && root.current-item + 1 < root.model.length) {
                root.current-item += 1;
                return accept;
            }
            reject
        }
    }
}
