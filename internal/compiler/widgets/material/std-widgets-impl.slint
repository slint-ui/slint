// Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial


// theme imports
import { Palette } from "theme-palette.slint";
import { StyleMetrics } from "theme-style-metrics.slint";

// widget imports
import { Button } from "widget-button.slint";

export { Button, Palette, StyleMetrics }


ScrollBar := Rectangle {
    background: Palette.white;
   // border-color: Palette.button-background;
    border-width: 1px;
    property <bool> horizontal;
    property<length> maximum;
    property<length> page-size;
    // this is always negative and bigger than  -maximum
    property<length> value;

    handle := Rectangle {
        width: !horizontal ? parent.width : maximum <= 0phx ? 0phx : parent.width * (page-size / (maximum + page-size));
        height: horizontal ? parent.height : maximum <= 0phx ? 0phx : parent.height * (page-size / (maximum + page-size));

        border-radius: (horizontal ? self.height : self.width) / 2;
        background: touch-area.pressed ? Palette.themePrimary :
            touch-area.has-hover ? Palette.themeSecondary : Palette.neutralTertiary;
        x: !horizontal ? 0phx : (root.width - handle.width) * (-value / maximum);
        y: horizontal ? 0phx : (root.height - handle.height) * (-value / maximum);
    }
    touch-area := TouchArea {
        width: parent.width;
        height: parent.height;
        property <length> pressed-value;
        pointer-event(event) => {
            if (event.button == PointerEventButton.left && event.kind == PointerEventKind.down) {
                pressed-value = -root.value;
            }
        }
        moved => {
            if (enabled && pressed) {
                value = -max(0px, min(root.maximum, pressed-value + (
                    horizontal ? (touch-area.mouse-x - touch-area.pressed-x) * (maximum / (root.width - handle.width))
                               : (touch-area.mouse-y - touch-area.pressed-y) * (maximum / (root.height - handle.height))
                )));
            }
        }
    }
}

export ScrollView := Rectangle {
    property <length> viewport-width <=> fli.viewport-width;
    property <length> viewport-height <=> fli.viewport-height;
    property <length> viewport-x <=> fli.viewport-x;
    property <length> viewport-y <=> fli.viewport-y;
    property <length> visible-width <=> fli.width;
    property <length> visible-height <=> fli.height;
    property <bool> enabled: true;
    property <bool> has-focus;
    min-height: 50px;
    min-width: 50px;
    horizontal-stretch: 1;
    vertical-stretch: 1;

    border-radius: 2px;
    border-width: !enabled ? 0px : has-focus ? 2px : 1px;
    border-color: !enabled ? Palette.neutralLighter
        : has-focus ? Palette.themeSecondary
        : Palette.neutralPrimary;

    fli := Flickable {
        @children
        x: 2px;
        y: 2px;
        interactive: false;
        viewport-y <=> vbar.value;
        viewport-x <=> hbar.value;
        width: parent.width - vbar.width - 4px;
        height: parent.height - hbar.height - 4px;
    }
    vbar := ScrollBar {
        width: 16px;
        x: fli.width + fli.x;
        y: fli.y;
        height: fli.height;
        horizontal: false;
        maximum: fli.viewport-height - fli.height;
        page-size: fli.height;
    }
    hbar := ScrollBar {
        height: 16px;
        y: fli.height + fli.y;
        x: fli.x;
        width: fli.width;
        horizontal: true;
        maximum: fli.viewport-width - fli.width;
        page-size: fli.width;
    }
}
