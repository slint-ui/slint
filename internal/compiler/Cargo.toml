# Copyright Â© SixtyFPS GmbH <info@slint.dev>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

[package]
name = "i-slint-compiler"
description = "Internal Slint Compiler Library"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true
build = "build.rs"

[lib]
path = "lib.rs"

[features]
# Generators
cpp = []
rust = ["quote", "proc-macro2"]

# Support for proc_macro spans in the token (only useful for use within a proc macro)
proc_macro_span = ["quote", "proc-macro2"]

# Feature to print the diagnostics to the console
display-diagnostics = ["codemap", "codemap-diagnostic"]

# Enabled the support to render images and font in the binary
software-renderer = ["image", "dep:resvg", "fontdue", "i-slint-common/shared-fontdb", "dep:rayon"]
embed-glyphs-as-sdf = ["dep:fdsm", "dep:ttf-parser-fdsm", "dep:nalgebra", "dep:image-fdsm", "dep:rayon"]

# Translation bundler
bundle-translations = ["dep:polib"]

default = []

[dependencies]
i-slint-common = { workspace = true, features = ["default"] }

num_enum = "0.7"
strum = { workspace = true }
rowan = { version = "0.15" }
smol_str = { workspace = true }
derive_more = { workspace = true }
codemap-diagnostic = { version = "0.1.1", optional = true }
codemap = { version = "0.1", optional = true }
quote = { version = "1.0", optional = true }
proc-macro2 = { version = "1.0.17", optional = true }
lyon_path = { version = "1.0" }
lyon_extra = "1.0.1"
thiserror = "1"
by_address = { workspace = true }
itertools = { workspace = true }
once_cell = "1"
url = "2.2.1"
linked_hash_set = "0.1.4"

# for processing and embedding the rendered image (texture)
image = { workspace = true, optional = true, features = ["default"] }
resvg = { workspace = true, optional = true }
# font embedding
fontdue = { workspace = true, optional = true, features = ["parallel"] }
fdsm = { version = "0.6.0", optional = true, features = ["ttf-parser"]}
ttf-parser-fdsm = { package = "ttf-parser", version = "0.24.1", optional = true }
image-fdsm = { package = "image", version = "0.25", optional = true, default-features = false }
nalgebra = { version = "0.33.0", optional = true }
rayon = { workspace = true, optional = true }
# translations
polib = { version = "0.2", optional = true }

[dev-dependencies]
i-slint-parser-test-macro = { path = "./parser-test-macro" }

regex = "1.3.7"
spin_on = { workspace = true }
rayon = { workspace = true }
