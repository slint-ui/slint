# Copyright Â© SixtyFPS GmbH <info@sixtyfps.io>
# SPDX-License-Identifier: (GPL-3.0-only OR LicenseRef-SixtyFPS-commercial)

[package]
name = "sixtyfps-interpreter"
version = "0.2.0"
authors = ["SixtyFPS <info@sixtyfps.io>"]
edition = "2021"
license = "(GPL-3.0-only OR LicenseRef-SixtyFPS-commercial)"
description = "Interpreter library for SixtyFPS"
repository = "https://github.com/sixtyfpsui/sixtyfps"
homepage = "https://sixtyfps.io"
categories = ["gui", "rendering::engine"]
keywords = ["gui", "toolkit", "graphics", "design", "ui"]

[lib]
path = "lib.rs"

[features]

default = ["std", "backend-gl", "x11", "backend-qt", "compat-0-2-0"]

## Mandatory feature:
## This feature is required to keep the compatibility with SixtyFPS 0.2.0
## Newer patch version may put current functionality behind a new feature
## that would be enabled by default only if this feature was added
compat-0-2-0 = []

## enable the [`print_diagnostics`] function to show diagnostic in the console output
display-diagnostics = ["sixtyfps-compilerlib/display-diagnostics"]

# (internal) export C++ FFI functions
ffi = ["spin_on", "sixtyfps-corelib/ffi"]

## Enable use of the Rust standard library.
std = ["sixtyfps-corelib/std"]

#! ### Backends

## The Qt backend feature uses Qt for the windowing system integration and rendering.
## This backend is required to use the `native` style.
## It requires Qt 5.15 or later to be installed. If Qt is not installed, the
## backend will not be operational
backend-qt = ["sixtyfps-rendering-backend-selector/sixtyfps-rendering-backend-qt", "std"]

## The GL backend uses the `winit` crate for the windowing system integration,
## and the `femtovg` crate for the rendering.
## On unix, at least one of `x11` or `wayland` features must be enabled.
backend-gl = ["sixtyfps-rendering-backend-selector/sixtyfps-rendering-backend-gl", "std"]
## Same as the GL backend, with the `x11` feature of `winit` enabled
x11 = ["sixtyfps-rendering-backend-selector/x11", "backend-gl"]
## Same as the GL backend, with the `wayland` feature of `winit` enabled
wayland = ["sixtyfps-rendering-backend-selector/wayland", "backend-gl"]

[dependencies]
sixtyfps-compilerlib = { version = "=0.2.0", path = "../compiler" }
sixtyfps-corelib = { version = "=0.2.0", path = "../core", features = ["rtti"] }
sixtyfps-rendering-backend-selector = { version = "=0.2.0", path = "../../internal/backends/selector" }

vtable = { version = "0.1.1", path="../../helper_crates/vtable" }

derive_more = "0.99.5"
generativity = "1"
lyon_path = { version = "0.17.3" }
once_cell = "1.5"
thiserror = "1"
document-features = { version = "0.1.0", path = "../../helper_crates/document-features" }

[dependencies.spin_on]
version = "0.1"
optional = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
sixtyfps-rendering-backend-gl = { version = "=0.2.0", path = "../../internal/backends/gl" }

[dev-dependencies]
sixtyfps-rendering-backend-testing = { path = "../../internal/backends/testing" }

spin_on = "0.1"

[package.metadata.docs.rs]
features = ["display-diagnostics"]
