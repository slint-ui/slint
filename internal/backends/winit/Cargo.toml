# Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial

[package]
name = "i-slint-backend-winit"
version = "0.2.6"
authors = ["Slint Developers <info@slint-ui.com>"]
edition = "2021"
license = "GPL-3.0-only OR LicenseRef-Slint-commercial"
description = "OpenGL rendering backend for Slint"
repository = "https://github.com/slint-ui/slint"
homepage = "https://slint-ui.com"

[lib]
path = "lib.rs"

# Note, these features need to be kept in sync (along with their defaults) in
# the C++ crate's CMakeLists.txt
[features]
wayland = ["winit/wayland", "glutin/wayland", "copypasta/wayland"]
x11 = ["winit/x11", "glutin/x11", "copypasta/x11"]
renderer-femtovg = ["femtovg", "fontdb", "libc", "servo-fontconfig", "winapi", "dwrote", "imgref", "unicode-script", "ttf-parser", "rgb"]
renderer-skia = ["skia-safe", "glow", "metal", "objc", "core-graphics-types", "foreign-types", "wio", "winapi/d3d12", "winapi/dxgi", "winapi/dxgi1_2", "winapi/dxgi1_3", "winapi/dxgi1_4", "winapi/d3d12sdklayers", "winapi/synchapi"]
rtti = ["i-slint-core/rtti"]
default = []

renderer-skia-opengl = ["skia-safe/gl", "renderer-skia"]

[dependencies]
i-slint-core = { version = "=0.2.6", path = "../../../internal/core" }
i-slint-core-macros = { version = "=0.2.6", path = "../../../internal/core-macros" }
i-slint-common = { version = "=0.2.6", path = "../../../internal/common" }

const-field-offset = { version = "0.1", path = "../../../helper_crates/const-field-offset" }
vtable = { version = "0.1.6", path = "../../../helper_crates/vtable" }

cfg-if = "1"
copypasta = { version = "0.8.1", default-features = false }
derive_more = "0.99.5"
lyon_path = "1.0"
once_cell = "1.5"
pin-weak = "1"
scoped-tls-hkt = "0.1"
winit = { version = "0.26", default-features = false }
dark-light = "0.2.2"

# For the FemtoVG renderer
femtovg = { version = "0.3.5", optional = true }
fontdb = { version = "0.9.0", optional = true, default-features = false }
ttf-parser = { version = "0.15.0", optional = true } # Use the same version was femtovg's rustybuzz, to avoid duplicate crates
unicode-script = { version = "0.5.4", optional = true } # Use the same version was femtovg's rustybuzz, to avoid duplicate crates
imgref = { version = "1.6.1", optional = true }
rgb = { version = "0.8.27", optional = true }

# For the Skia renderer
skia-safe = { version = "0.53.0", optional = true, features = ["textlayout"] }
glow = { version = "0.11", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { version = "0.3", features=["console", "WebGlContextAttributes", "CanvasRenderingContext2d", "HtmlInputElement", "HtmlCanvasElement", "Window", "Document", "CssStyleDeclaration", "Event", "KeyboardEvent", "InputEvent", "CompositionEvent"] }
wasm-bindgen = { version = "0.2" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
fontdb = { version = "0.9.0", optional = true, features = ["memmap", "fontconfig"] }
glutin = { version = "0.28", default-features = false }

# For the FemtoVG renderer
[target.'cfg(target_family = "windows")'.dependencies]
dwrote = { version = "0.11.0", optional = true }
winapi = { version = "0.3", optional = true, features = ["dwrite"] }
skia-safe = { version = "0.53.0", optional = true, features = ["d3d"] }
wio = { version = "0.2.2", optional = true }

[target.'cfg(not(any(target_family = "windows", target_os = "macos", target_os = "ios", target_arch = "wasm32")))'.dependencies]
libc = { version = "0.2", optional = true }
# Require font-config from the system on Linux. Issue #88 indicates that the copy provided by servo-fontconfig may be incompatible
# with distros at times.
servo-fontconfig = { version = "0.5", optional = true, features = [ "force_system_lib" ] }

[target.'cfg(target_os = "macos")'.dependencies]
# For GL rendering
cocoa = { version = "0.24.0" }
core-foundation = { version = "0.9.1" }
core-text = { version = "19.1.0" }
# For Metal rendering with Skia
metal = { version = "0.24.0", optional = true }
objc = { version = "0.2.7", optional = true }
core-graphics-types = { version = "0.1.1", optional = true }
skia-safe = { version = "0.53.0", optional = true, features = ["metal"] }
foreign-types = { version = "0.3.2", optional = true }

[target.'cfg(not(any(target_os = "macos", target_family = "windows")))'.dependencies]
skia-safe = { version = "0.53.0", optional = true, features = ["gl"] }
