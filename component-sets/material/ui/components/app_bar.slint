// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { IconButton } from "./icon_button.slint";
import { MaterialText } from "./material_text.slint";
import { Typography, TextStyle } from "../styling/typography.slint";
import { MaterialPalette } from "../styling/material_palette.slint";
import { MaterialStyleMetrics } from "../styling/material_style_metrics.slint";
import { IconButtonItem } from "./bottom_app_bar.slint";

component BaseAppBar {
    in property <string> title;
    in property <IconButtonItem> leading_icon;
    in property <bool> container_background;
    in property <[IconButtonItem]> trailing_icons;
    in property <TextHorizontalAlignment> horizontal_alignment;
    in property <length> spacing;
    in property <length> vertical_spacing;
    in property <bool> two_rows;
    in property <TextStyle> text_style;
    in property <length> text_padding;

    callback leading_clicked();
    callback traling_clicked(index: int);

    min_width: layout.min_width;
    min_height: layout.min_height;

    Rectangle {
        background: root.container_background ? MaterialPalette.surface_container :  MaterialPalette.surface;

        layout := VerticalLayout {
            padding_top: root.padding_top;
            padding_bottom: root.padding_bottom;
            min_width: top_layout.min_width;
            spacing: root.vertical_spacing;

            top_layout := HorizontalLayout {
                padding_left: root.spacing;
                padding_right: root.padding_right;
                spacing: MaterialStyleMetrics.spacing_6;

                if root.leading_icon.icon.width > 0 && root.leading_icon.icon.height > 0 : VerticalLayout {
                    alignment: center;

                    IconButton {
                        icon: root.leading_icon.icon;
                        enabled: root.leading_icon.enabled;
                        tooltip: root.leading_icon.tooltip;

                        clicked => {
                            root.leading_clicked();
                        }
                    }
                }

                if !root.two_rows : MaterialText {
                    horizontal_stretch: 1;
                    text: root.title;
                    vertical_alignment: center;
                    horizontal_alignment: root.horizontal_alignment;
                    color: MaterialPalette.on_surface;
                    overflow: elide;
                    style: root.text_style;
                }

                // spacer
                if root.two_rows : Rectangle {
                    horizontal_stretch: 1;
                }

                if root.trailing_icons.length > 0 : VerticalLayout {
                    alignment: center;

                    HorizontalLayout {
                        spacing: top_layout.spacing;

                        for item[index] in root.trailing_icons : IconButton {
                            icon: item.icon;
                            enabled: item.enabled;
                            tooltip: item.tooltip;

                            clicked => {
                                root.traling_clicked(index);
                            }
                        }
                    }
                }
            }

            if root.two_rows && root.title != "" : HorizontalLayout {
                padding_left: root.text_padding;
                padding_right: self.padding_left;

                 MaterialText {
                    text: root.title;
                    horizontal_alignment: root.horizontal_alignment;
                    color: MaterialPalette.on_surface;
                    overflow: elide;
                    style: root.text_style;
                }
            }
        }
    }
}

export component AppBar {
    in property <string> title;
    in property <IconButtonItem> leading_icon;
    in property <IconButtonItem> trailing_icon;
    in property <bool> container_background;

    callback leading_clicked();
    callback traling_clicked();

    min_height: max(MaterialStyleMetrics.size_64, base.min_height);

    HorizontalLayout {
        base := BaseAppBar {
            title: root.title;
            horizontal_alignment: center;
            leading_icon: root.leading_icon;
            trailing_icons: [root.trailing_icon];
            container_background: root.container_background;
            padding_left: MaterialStyleMetrics.padding_4;
            padding_right: self.padding_left;
            padding_top: MaterialStyleMetrics.padding_8;
            padding_bottom: self.padding_top;
            spacing: MaterialStyleMetrics.spacing_6;
            text_style: Typography.title_large;

            leading_clicked => {
                root.leading_clicked();
            }

            traling_clicked(index) => {
                root.traling_clicked();
            }
        }
    }
}

export component SmallAppBar {
    in property <string> title;
    in property <IconButtonItem> leading_icon;
    in property <[IconButtonItem]> trailing_icons;
    in property <bool> container_background;

    callback leading_clicked();
    callback traling_clicked(index: int);

    min_height: max(MaterialStyleMetrics.size_64, base.min_height);

    HorizontalLayout {
        base := BaseAppBar {
            title: root.title;
            horizontal_alignment: left;
            leading_icon: root.leading_icon;
            trailing_icons: root.trailing_icons;
            container_background: root.container_background;
            padding_left: MaterialStyleMetrics.padding_4;
            padding_right: self.padding_left;
            padding_top: MaterialStyleMetrics.padding_8;
            padding_bottom: self.padding_top;
            spacing: MaterialStyleMetrics.spacing_4;
            text_style: Typography.title_large;

            leading_clicked => {
                root.leading_clicked();
            }

            traling_clicked(index) => {
                root.traling_clicked(index);
            }
        }
    }
}

export component MediumAppBar {
    in property <string> title;
    in property <IconButtonItem> leading_icon;
    in property <[IconButtonItem]> trailing_icons;
    in property <bool> container_background;

    callback leading_clicked();
    callback traling_clicked(index: int);

    min_height: max(MaterialStyleMetrics.size_64, base.min_height);

    HorizontalLayout {
        base := BaseAppBar {
            title: root.title;
            horizontal_alignment: left;
            leading_icon: root.leading_icon;
            trailing_icons: root.trailing_icons;
            container_background: root.container_background;
            padding_left: MaterialStyleMetrics.padding_4;
            padding_right: self.padding_left;
            padding_top: MaterialStyleMetrics.padding_8;
            padding_bottom: MaterialStyleMetrics.padding_24;
            vertical_spacing: MaterialStyleMetrics.spacing_4;
            spacing: MaterialStyleMetrics.spacing_4;
            two_rows: true;
            text_style: Typography.headline_small;
            text_padding: MaterialStyleMetrics.padding_16;

            leading_clicked => {
                root.leading_clicked();
            }

            traling_clicked(index) => {
                root.traling_clicked(index);
            }
        }
    }
}

export component LargeAppBar {
    in property <string> title;
    in property <IconButtonItem> leading_icon;
    in property <[IconButtonItem]> trailing_icons;
    in property <bool> container_background;

    callback leading_clicked();
    callback traling_clicked(index: int);

    min_height: max(MaterialStyleMetrics.size_64, base.min_height);

    HorizontalLayout {
        base := BaseAppBar {
            title: root.title;
            horizontal_alignment: left;
            leading_icon: root.leading_icon;
            trailing_icons: root.trailing_icons;
            container_background: root.container_background;
            padding_left: MaterialStyleMetrics.padding_4;
            padding_right: self.padding_left;
            padding_top: MaterialStyleMetrics.padding_8;
            padding_bottom: MaterialStyleMetrics.padding_28;
            vertical_spacing: MaterialStyleMetrics.spacing_40;
            spacing: MaterialStyleMetrics.spacing_4;
            two_rows: true;
            text_style: Typography.headline_medium;
            text_padding: MaterialStyleMetrics.padding_16;

            leading_clicked => {
                root.leading_clicked();
            }

            traling_clicked(index) => {
                root.traling_clicked(index);
            }
        }
    }
}
