# Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-1.0 OR LicenseRef-Slint-commercial

[package]
name = "slint-lsp"
version = "1.0.3"
authors = ["Slint Developers <info@slint-ui.com>"]
edition = "2021"
license = "GPL-3.0-only OR LicenseRef-Slint-Royalty-free-1.0 OR LicenseRef-Slint-commercial"
description = "A language server protocol implementation for Slint"
repository = "https://github.com/slint-ui/slint"
homepage = "https://slint-ui.com"
categories = ["gui", "development-tools"]
keywords = ["lsp"]
rust-version.workspace = true

[package.metadata.bundle]
name = "Slint Live Preview"
icon = ["../../logo/slint-logo-small-light-128x128.png"]

[[bin]]
name = "slint-lsp"
path = "main.rs"

[lib]
# lib is there only for the web
crate-type = ["cdylib"]
path = "wasm_main.rs"
# On windows building this package creates slint-lsp.exe and slint-lsp.dll.
# To avoid that both end up trying to create slint-lsp.pdb for their debug
# symbols, rename the lib.
name = "slint_lsp_wasm"

[features]
backend-qt = ["slint-interpreter/backend-qt", "preview"]
eventloop-qt = ["backend-qt"]
renderer-winit-qt = ["backend-qt"]

backend-winit = ["slint-interpreter/backend-winit", "preview"]
backend-winit-x11 = ["slint-interpreter/backend-winit-x11", "preview"]
backend-winit-wayland = ["slint-interpreter/backend-winit-wayland", "preview"]

renderer-winit-femtovg = ["slint-interpreter/renderer-winit-femtovg", "preview"]
renderer-winit-skia = ["slint-interpreter/renderer-winit-skia", "preview"]
renderer-winit-skia-opengl = ["slint-interpreter/renderer-winit-skia-opengl", "preview"]
renderer-winit-skia-vulkan = ["slint-interpreter/renderer-winit-skia-vulkan", "preview"]

# Compat
backend-gl-all = ["backend-winit", "renderer-winit-femtovg"]
backend-gl-wayland = ["backend-winit-wayland", "renderer-winit-femtovg"]
backend-gl-x11 = ["backend-winit-x11", "renderer-winit-femtovg"]

## Enable the built-in preview, that will popup in a native window
preview = ["slint-interpreter", "dep:i-slint-core", "dep:i-slint-backend-selector", "dep:image", "preview-lense", "preview-api"]
## Enable the "Show Preview" lenses and action on components.
## When this feature is enabled without the "preview" feature, the lenses do nothing, but the client can still interpret the command
## to show the actual preview
preview-lense = []
## Open a notification channel so that the LSP can communicate with the preview (when the preview is handled by the client)
preview-api = []

default = ["backend-qt", "backend-winit", "renderer-winit-femtovg", "preview"]

[dependencies]
i-slint-compiler = { version = "=1.0.3", path = "../../internal/compiler"}
dunce = "1.0.1"
euclid = "0.22"
lsp-types = { version = "0.94.0", features = ["proposed"] }
serde = "1.0.118"
serde_json = "1.0.60"
rowan = "0.15.5"


# for the preview
i-slint-core = { version = "=1.0.3", path = "../../internal/core", optional = true }
slint-interpreter = { version = "=1.0.3", path = "../../internal/interpreter", default-features = false, features = ["compat-1-0", "highlight"], optional = true  }
i-slint-backend-selector = { version = "=1.0.3", path="../../internal/backends/selector", optional = true }
# Enable image-rs' default features to make all image formats available for the preview
image = { version = "0.24.0", optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
clap = { version = "4.0", features = ["derive", "wrap_help"] }
crossbeam-channel = "0.5"  # must match the version used by lsp-server
lsp-server = "0.7"
once_cell = "1.9.0"

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2.80"
wasm-bindgen-futures = "0.4.30"
serde-wasm-bindgen = "0.5.0"
js-sys = { version = "0.3.57" }
console_error_panic_hook = "0.1.5"

[dev-dependencies]
spin_on = "0.1"

# [package.metadata.wasm-pack.profile.release]
# wasm-opt = false
