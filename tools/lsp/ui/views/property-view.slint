// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

import { Palette, ScrollView }  from "std-widgets.slint";

import { ExpandableGroup } from "../components/expandable-group.slint";
import { ViewHeader } from "../components/widgets/basics.slint";
import { Api, ElementInformation, PropertyGroup, PropertyInformation } from "../api.slint";
import { EditorSpaceSettings, EditorSizeSettings, ConsoleStyles, Icons } from "../components/styling.slint";

import { PropertyInformationWidget } from "../components/property-widgets.slint";

export component PropertyView inherits VerticalLayout {

    property <ElementInformation> element-information <=> Api.current-element;
    property <[PropertyGroup]> properties <=> Api.properties;
    in-out property <bool> properties-visible: false;

    property <length> key-width: self.width / 2.5;
    property <bool> element-loaded: root.properties.length > 0;
    in-out property <bool> enabled <=> sv.enabled;
    visible: root.properties-visible;
    ViewHeader {
    header-text: @tr("Properties");
    hide-parent() => {
        root.properties-visible = false;
    }
    edited(text) => {
        // Api.library-search(text);
    }

    }
    sv := ScrollView {
        vertical-scrollbar-policy: ScrollBarPolicy.always-on;
        horizontal-scrollbar-policy: ScrollBarPolicy.always-off;

        content-layer := VerticalLayout {

            if !root.element-loaded: Text {
                text: @tr("Select an Element");
                horizontal-alignment: center;
                vertical-alignment: center;
                vertical-stretch: 1;
            }
            if root.element-loaded: groups := VerticalLayout {
                alignment: start;
                spacing: EditorSpaceSettings.default-spacing;
                padding-top: EditorSpaceSettings.default-padding;
                for group in root.properties: VerticalLayout {

                    eg := ExpandableGroup {
                        property <[PropertyInformation]> properties: group.properties;

                        enabled: sv.enabled;

                        text: group.group-name;
                        panel-width: root.width;

                        VerticalLayout {
                            spacing: EditorSpaceSettings.property-spacing;
                            padding: EditorSpaceSettings.default-padding;

                            for property in eg.properties: PropertyInformationWidget {
                                enabled: sv.enabled;
                                element-information <=> root.element-information;
                                property-information: property;
                            }
                        }
                    }

                    VerticalLayout {

                        Rectangle {
                            height: EditorSpaceSettings.default-padding;
                        }

                        Rectangle {
                            height: 1px;
                            background: Palette.border;
                            width: 100%;
                        }
                    }
                }
            }
        }
    }
}
