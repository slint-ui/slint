// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

import { SimpleColumn } from "../../layout-helpers.slint";
import { Api, BrushKind, PaletteEntry } from "../../../api.slint";
import { EditorSizeSettings, EditorPalette } from "../../styling.slint";
import { ScrollView } from "std-widgets.slint";
import { PickerData } from "../../../windowglobal.slint";

component PaletteIcon {
    width: 16px;
    height: self.width;
    in property <brush> brush;
    in property <string> name;
    in property <BrushKind> brush-kind: BrushKind.solid;
    callback clicked <=> ta.clicked;

    Rectangle {
        background <=> brush;
        border-radius: 5px;
        border-width: 1px;
        border-color: #ffffff.with-alpha(0.2);
    }

    ta := TouchArea { }
}

export component PalettePicker  {
    height: 70px;

    property <int> rows: 9;

    in property <[PaletteEntry]> palette-entries;

    ScrollView {
        y: EditorSizeSettings.small-margin;
        width: 100%;
        height: 100%;
        viewport-height: (Api.palettes.length / rows).floor() * 24px;

        for i[index] in root.palette-entries : PaletteIcon {
            x: EditorSizeSettings.standard-margin + (index.mod(rows) * 24px);
            y: (index / rows).floor() * 24px;
            name: i.name;
            brush: i.value.value-brush;
            brush-kind: i.value.brush-kind;

            clicked => {
                PickerData.hue = self.brush.to-hsv().hue;
                PickerData.saturation = self.brush.to-hsv().saturation;
                PickerData.value = self.brush.to-hsv().value;
                PickerData.alpha = self.brush.to-hsv().alpha * 100;
                PickerData.current-brush-kind = i.value.brush-kind;
            }
        }
    }
}
