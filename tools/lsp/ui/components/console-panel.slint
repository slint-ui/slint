// Copyright Â© SixtyFPS GmbH info@slint.dev
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

import { Palette, ScrollView, ListView } from "std-widgets.slint";
import { Api, LogMessageLevel } from "../api.slint";
import { RecentColorPicker } from "widgets/floating-brush-sections/palettes.slint";
import { SimpleColumn } from "layout-helpers.slint";
import { EditorSizeSettings, Icons } from "styling.slint";

global ConsoleStyles {
    property <bool> light: Palette.color-scheme == ColorScheme.light;
    out property <color> header-background: light ? #eaeaea : #2f3138;
    out property <color> divider-line: light ? #e0e0e0 : #454a54;
    out property <color> log-background: light ? #ffffff : #14181f;
    out property <color> text-color: light ? #525252 : #cccccc;
    out property <length> header-height: 27px;
    out property <length> full-height: 100px;
    out property <color> slint-blue: #0088ff;
}

export component ConsolePanel {
    property <bool> panel-expanded: false;
    height: panel-expanded ? ConsoleStyles.full-height : ConsoleStyles.header-height;

    SimpleColumn {
        Rectangle {
            height: 27px;
            background: ConsoleStyles.header-background;
            Rectangle {
                y: parent.height - self.height;
                width: 100%;
                height: 1px;
                background: ConsoleStyles.divider-line;
            }

            label := Text {
                x: 10px;
                horizontal-alignment: left;
                color: ConsoleStyles.text-color;
                font-family: "Inter";
                font-size: 12px;
                text: "Console";
            }

            Rectangle {
                x: 0;
                y: parent.height - self.height;
                width: label.width + label.x * 2;
                height: 2px;
                background: ConsoleStyles.slint-blue;
                visible: panel-expanded;
            }

            Image {
                x: parent.width - self.width - 10px;
                y: 5px;
                width: 16px;
                height: 16px;
                source: Icons.chevron-down;
                colorize: ConsoleStyles.text-color;
                opacity: chevron-ta.has-hover ? 1.0 : 0.5;
                rotation-angle: panel-expanded ? 0deg : 180deg;
            }
            Rectangle {
                x: parent.width - self.width;
                width: 36px;
                Rectangle {
                    x: 0;
                    width: 1px;
                    height: 13px;
                    background: ConsoleStyles.text-color;
                    opacity: 0.3;
                }
                chevron-ta := TouchArea {
                    mouse-cursor: MouseCursor.pointer;
                    clicked => {
                        panel-expanded = !panel-expanded;
                    }
                }
            }
        }

        if panel-expanded: Rectangle {
            height: ConsoleStyles.full-height - ConsoleStyles.header-height;
            background: ConsoleStyles.log-background;
            ListView {
                for lm[index] in Api.log-output: Rectangle {
                    height: message.height + 6px;
                    message := Text {
                        x: 10px;
                        width: parent.width - 60px;
                        text: lm.message;
                        color: ConsoleStyles.text-color;
                        font-family: "Source Code Pro";
                        font-size: 11px;
                        horizontal-alignment: left;
                        font-weight: 200;
                        wrap: TextWrap.word-wrap;
                    }

                    if !lm.file_url.is-empty: Rectangle {
                        width: 40px;
                        height: 14px;
                        x: parent.width - self.width - EditorSizeSettings.standard-margin;
                        file-link := Text {
                            text: "\{lm.line}:\{lm.column}";
                        }
                        Rectangle {
                            y: parent.height - self.height;
                            width: file-link.width;
                            height: 1px;
                            background: ConsoleStyles.text-color;
                            opacity: ta.has-hover ? 1.0 : 0.5;
                        }
                        ta := TouchArea {
                            mouse-cursor: MouseCursor.pointer;
                            clicked => {
                                Api.show-document(lm.file-url, lm.line, lm.column);
                            }
                        }
                    }
                    Rectangle {
                        y: parent.height - self.height;
                        height: 1px;
                        background: ConsoleStyles.text-color;
                        opacity: 0.2;
                    }
                }
            }
        }
    }
}
