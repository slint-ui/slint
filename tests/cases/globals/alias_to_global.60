/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2021 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2021 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */

import { StyleMetrics } from "sixtyfps_widgets.60";

global Glop := {
    property <int> hello: 42;
    property <int> second: 88;
}

Widget := Rectangle {
    property second <=> Glop.second;
}

TestCase := Rectangle {
    // This is meant to test an alias to a native global.
    // Unfortunately, this is only a native global with the Qt backend and not with the Test backend
    property <length> alias_to_native <=> StyleMetrics.text_cursor_width;
    property <int> alias_to_global <=> Glop.hello;
    property <bool> test: alias_to_native == StyleMetrics.text_cursor_width && alias_to_global == 42 && indirect == 88;
    property <int> indirect <=> widget.second;
    property <int> direct: Glop.second;

    widget := Widget { }
}

/*
```rust
let instance = TestCase::new();
assert!(instance.get_test());
assert_eq!(instance.get_alias_to_global(), 42);
instance.set_alias_to_global(123);
assert_eq!(instance.get_alias_to_global(), 123);
assert_eq!(instance.get_indirect(), 88);
instance.set_indirect(99);
assert_eq!(instance.get_direct(), 99);

```

```cpp
auto handle = TestCase::create();
const TestCase &instance = *handle;
assert(instance.get_test());
```

```js
let instance = new sixtyfps.TestCase({});
assert(instance.test);
assert.equal(instance.alias_to_global, 42);
instance.alias_to_global = 123;
assert.equal(instance.alias_to_global, 123);
assert.equal(instance.indirect, 88);
instance.indirect = 99;
assert.equal(instance.direct, 99);
```

*/
