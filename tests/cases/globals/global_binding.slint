// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

global Glob := {
    property <int> a_alias <=> a;
    property <int> a: 3;
    property <int> b: a + 3;

}

TestCase := Rectangle {
    callback set_a(int);
    set_a(a) => { Glob.a_alias = a; }
    property <int> value1: Glob.b;
    property <bool> test: value1 == 3+3;
}

/*
```rust
let instance = TestCase::new().unwrap();
assert_eq!(instance.get_value1(), 3+3);
instance.invoke_set_a(4);
assert_eq!(instance.get_value1(), 4+3);
```

```cpp
auto handle = TestCase::create();
const TestCase &instance = *handle;
assert_eq(instance.get_value1(), 3+3);
instance.invoke_set_a(4);
assert_eq(instance.get_value1(), 4+3);
```

```js
let instance = new slint.TestCase({});
assert.equal(instance.value1, 3+3);
instance.set_a(4);
assert.equal(instance.value1, 4+3);
```

*/
