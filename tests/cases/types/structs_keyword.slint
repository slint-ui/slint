// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

// Right now, this test is only testing rust and C++ keyword, but it should be expanded to JS keywords

export struct mod := {
    loop: string,
}

match := Rectangle {
    property<mod> move: {loop : "mod" };
    property<bool> test: move.loop == "mod";
}


// // testing C++ keywords
export struct struct {
    not: image
}

export struct dynamic_cast {
    delete: image
}

export struct operator {
    dynamic-cast: image
}

export struct static_assert {}
export struct unsigned {} 
export struct namespace {} 

export component char {
    property <static_assert> protected;
}

export global void{ 
    in-out property<unsigned> atomic-commit;
    in-out property<namespace> enum;  
 }

export global char16_t{ 
    in-out property<dynamic_cast> atomic_commit;
    in-out property<struct> return;  
 }



/*
```rust
let instance = r#match::new().unwrap();
assert_eq!(instance.get_move(), r#mod{ r#loop: "mod".into() });
```
*/
