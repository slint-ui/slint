// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-1.1 OR LicenseRef-Slint-commercial


import { SpinBox } from "std-widgets.slint";
export component TestCase inherits Window {
    width: 100px;
    height: 100px;
    box := SpinBox {}
    forward-focus: box;
    out property <bool> spinbox-focused <=> box.has_focus;
    callback edited <=> box.edited;
}

/*


```rust
use slint::platform::Key;
use std::cell::RefCell;
use std::rc::Rc;

let instance = TestCase::new().unwrap();
slint_testing::send_mouse_click(&instance, 5., 5.);
assert!(instance.get_spinbox_focused());

let edits = Rc::new(RefCell::new(Vec::new()));

instance.on_edited({
    let edits = edits.clone();
    move |val| {
    edits.borrow_mut().push(val);
}});

slint_testing::send_keyboard_char(&instance, '4', true);
slint_testing::send_keyboard_char(&instance, Key::Return.into(), true);

assert_eq!(edits.borrow().clone(), vec![40]);

```

*/
