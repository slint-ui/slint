 // Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

import { TimePicker, Time, Button } from "std-widgets.slint";
export { Time }

export component TestCase inherits Window {
    width: 600px;
    height: 600px;

    time-picker := TimePicker {
        x: 0;
        y: 0;
    }

    in property <Time> time <=> time-picker.time;
}

/*

```rust
use i_slint_backend_testing::mock_elapsed_time;

let instance = TestCase::new().unwrap();

instance.set_time(Time{ hour: 8, minute: 45});

mock_elapsed_time(500);

let mut hour_search = slint_testing::ElementHandle::find_by_accessible_label(&instance, "hour");
let hour = hour_search.next().unwrap();
assert_eq!(hour.accessible_value().unwrap(), "8");

let mut minute_search = slint_testing::ElementHandle::find_by_accessible_label(&instance, "minute");
let minute = minute_search.next().unwrap();
assert_eq!(minute.accessible_value().unwrap(), "45");

// hour and minute selection
instance.set_time(Time{ hour: 0, minute: 0});

let mut hour_selection_search = slint_testing::ElementHandle::find_by_accessible_label(&instance, "6 Hours or minutes of 12");
let hour_selection = hour_selection_search.next().unwrap();
hour_selection.invoke_accessible_action_default();

mock_elapsed_time(500);
assert_eq!(hour.accessible_value().unwrap(), "6");

let mut minute_selection_search = slint_testing::ElementHandle::find_by_accessible_label(&instance, "25 Hours or minutes of 60");
let minute_selection = minute_selection_search.next().unwrap();
minute_selection.invoke_accessible_action_default();

*/
