// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

 TestCase := Rectangle {
    property<float> t1: abs(42.3);
    property<float> t2: abs(-42.3);
    property<int> t3: abs(42.3);
    property<int> t4: abs(-42.3);

    out property <bool> test: abs(-45.5px) == 45.5px && abs(78.5deg) == abs(78.5deg) && abs(-1.2s) == 1200ms;
}
/*
```cpp
auto handle = TestCase::create();
const TestCase &instance = *handle;
assert(std::abs(instance.get_t1() - 42.3) < 0.0001);
assert(std::abs(instance.get_t2() - 42.3) < 0.0001);
assert_eq(instance.get_t3(), 42);
assert_eq(instance.get_t4(), 42);
assert(instance.get_test());
```

```rust
let instance = TestCase::new().unwrap();
assert_eq!(instance.get_t1(), 42.3);
assert_eq!(instance.get_t2(), 42.3);
assert_eq!(instance.get_t3(), 42);
assert_eq!(instance.get_t4(), 42);
assert!(instance.get_test());
```

```js
var instance = new slint.TestCase({});
assert(Math.abs(instance.t1 - 42.3) < 0.0001);
assert(Math.abs(instance.t2 - 42.3) < 0.0001);
assert.equal(instance.t3, 42);
assert.equal(instance.t4, 42);
assert(instance.test);
```
*/
