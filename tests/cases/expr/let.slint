export component TestCase inherits Rectangle {
    public function test_simple() -> int {
        let a = 1;

        return a;
    }

    public function test_type_annotation() -> int {
        let a: int = 1;

        return a;
    }

    public function test_type_annotation_conversion() -> int {
        let a: int = 1.0;

        return a;
    }

    out property <bool> test: test_simple() == 1 && test_type_annotation() == 1 && test_type_annotation_conversion() == 1;
}

/*
```rust
let instance = TestCase::new().unwrap();
assert_eq!(instance.invoke_test_simple(), 1);
assert_eq!(instance.invoke_test_type_annotation(), 1);
assert_eq!(instance.invoke_test_type_annotation_conversion(), 1);
```

```cpp
auto handle = TestCase::create();
const TestCase &instance = *handle;
assert_eq(instance.invoke_test_simple(), 1);
assert_eq(instance.invoke_test_type_annotation(), 1);
assert_eq(instance.invoke_test_type_annotation_conversion(), 1);
```
*/