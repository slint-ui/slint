// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

 TestCase := Rectangle {
    property<float> t1: cos(0);
    property<float> t2: cos(180deg);
    property<float> t3: cos(60deg);
    property<float> t4: cos(90deg);
}
/*
```cpp
auto handle = TestCase::create();
const TestCase &instance = *handle;
assert(std::abs(instance.get_t1() - 1.0) < 0.0001);
assert(std::abs(instance.get_t2() + 1.0) < 0.0001);
assert(std::abs(instance.get_t3() - 0.5) < 0.0001);
assert(std::abs(instance.get_t4()) < 0.0001);
```

```rust
let instance = TestCase::new().unwrap();
assert!((instance.get_t1() - 1.0).abs() < 0.0001);
assert!((instance.get_t2() + 1.0).abs() < 0.0001);
assert!((instance.get_t3() - 0.5).abs() < 0.0001);
assert!((instance.get_t4()).abs() < 0.0001);
```

```js
var instance = new slint.TestCase({});
assert(Math.abs(instance.t1 - 1) < Number.EPSILON);
assert(Math.abs(instance.t2 - -1) < Number.EPSILON);
assert(Math.abs(instance.t3 - 0.5) < Number.EPSILON);
assert(Math.abs(instance.t4) < Number.EPSILON);
```
*/
