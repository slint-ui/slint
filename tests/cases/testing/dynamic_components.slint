// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-1.2 OR LicenseRef-Slint-commercial

export component TestCase {
    in-out property <bool> condition: true;
    if condition: Text {
        accessible-role: text;
        accessible-label: "testlabel";
        text: "Ok";
    }
}

/*
```rust
let instance = TestCase::new().unwrap();
let mut label_search = slint_testing::ElementHandle::find_by_accessible_label(&instance, "testlabel");
let label = label_search.next().unwrap();
assert!(label.is_valid());
instance.set_condition(false);
// Trigger re-evaluation of the item tree traversal and thus re-evaluation of the repeater
slint_testing::send_mouse_click(&instance, 5., 5.);
assert!(!label.is_valid());
```

```cpp
auto handle = TestCase::create();
const TestCase &instance = *handle;

auto label_search = slint::testing::ElementHandle::find_by_accessible_label(handle, "testlabel");
assert_eq(label_search.size(), 1);
auto label = label_search[0];

assert(label.is_valid());
instance.set_condition(false);
// Trigger re-evaluation of the item tree traversal and thus re-evaluation of the repeater
slint_testing::send_mouse_click(&instance, 5., 5.);
assert(!label.is_valid());
```
*/
