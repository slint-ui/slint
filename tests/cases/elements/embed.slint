// Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial

import { Button } from "std-widgets.slint";

export component TestCase inherits Rectangle {
    outside := Button { text: "Outside button"; }

    out property<bool> outside-focus <=> outside.has-focus;
}

/*
```cpp
// ComponentFactory not supported yet!

auto handle = TestCase::create();
const TestCase &instance = *handle;

assert(!instance.get_outside_focus()); // Nothing has focus be default
slint_testing::send_keyboard_string_sequence(&instance, "\t");
assert(instance.get_outside_focus()); // The outside button is the only thing
                                      // accepting focus at this point.

```

```rust
let _factory = slint::ComponentFactory::new(|| {
     let mut compiler = slint_interpreter::ComponentCompiler::new();
     let e = spin_on::spin_on(compiler.build_from_source(
        r#"import { Button } from "std-widgets.slint";

export component E1 inherits Rectangle {
    background: Colors.red;

    Button {
        text: "red";
    }
}"#.into(),
        std::path::PathBuf::from("embedded.slint"),
     )).unwrap();
     e.create().ok()
});

let instance = TestCase::new().unwrap();
assert!(!instance.get_outside_focus()); // Nothing has focus be default
slint_testing::send_keyboard_string_sequence(&instance, "\t");
assert!(instance.get_outside_focus()); // The outside button is the only thing
                                       // accepting focus at this point.
```

```js
var _instance = new slint.TestCase();
```
*/
