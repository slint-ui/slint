/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2021 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2021 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */
TestCase := Rectangle {
    property <int> touch1;
    property <int> touch2;
    property <int> touch3;

    TouchArea {
        x: 100phx;
        y: 100phx;
        width: 10phx;
        height: 10phx;
        clicked => { touch1+=1; }
        TouchArea {
            y: 2phx;
            height: 2phx;
            x: 3phx;
            width: 4phx;
            clicked => { touch3+=1; }
        }
    }
    TouchArea {
        x: 100phx;
        y: 100phx;
        width: 5phx;
        height: 5phx;
        clicked => { touch2+=1; }
        pointer-event(e) => {
            if (e.kind == PointerEventKind.cancel || e.button == PointerEventButton.right) {}
        }
    }
}

/*
```cpp
auto handle = TestCase::create();
const TestCase &instance = *handle;

// does not click on anything
sixtyfps::testing::send_mouse_click(&instance, 5., 5.);
assert_eq(instance.get_touch1(), 0);
assert_eq(instance.get_touch2(), 0);
assert_eq(instance.get_touch3(), 0);

// click on second one
sixtyfps::testing::send_mouse_click(&instance, 101., 101.);
assert_eq(instance.get_touch1(), 0);
assert_eq(instance.get_touch2(), 1);
assert_eq(instance.get_touch3(), 0);

// click on first one only
sixtyfps::testing::send_mouse_click(&instance, 108., 108.);
assert_eq(instance.get_touch1(), 1);
assert_eq(instance.get_touch2(), 1);
assert_eq(instance.get_touch3(), 0);

// click on the third
sixtyfps::testing::send_mouse_click(&instance, 106., 103.);
assert_eq(instance.get_touch1(), 1);
assert_eq(instance.get_touch2(), 1);
assert_eq(instance.get_touch3(), 1);

```


```rust
let instance = TestCase::new();
// does not click on anything
sixtyfps::testing::send_mouse_click(&instance, 5., 5.);
assert_eq!(instance.get_touch1(), 0);
assert_eq!(instance.get_touch2(), 0);
assert_eq!(instance.get_touch3(), 0);

// click on second one
sixtyfps::testing::send_mouse_click(&instance, 101., 101.);
assert_eq!(instance.get_touch1(), 0);
assert_eq!(instance.get_touch2(), 1);
assert_eq!(instance.get_touch3(), 0);

// click on first one only
sixtyfps::testing::send_mouse_click(&instance, 108., 108.);
assert_eq!(instance.get_touch1(), 1);
assert_eq!(instance.get_touch2(), 1);
assert_eq!(instance.get_touch3(), 0);

// click on the third
sixtyfps::testing::send_mouse_click(&instance, 106., 103.);
assert_eq!(instance.get_touch1(), 1);
assert_eq!(instance.get_touch2(), 1);
assert_eq!(instance.get_touch3(), 1);

```

```js
var instance = new sixtyfps.TestCase();
// does not click on anything
instance.send_mouse_click(5., 5.);
assert.equal(instance.touch1, 0);
assert.equal(instance.touch2, 0);
assert.equal(instance.touch3, 0);

// click on second one
instance.send_mouse_click(101., 101.);
assert.equal(instance.touch1, 0);
assert.equal(instance.touch2, 1);
assert.equal(instance.touch3, 0);

// click on first one only
instance.send_mouse_click(108., 108.);
assert.equal(instance.touch1, 1);
assert.equal(instance.touch2, 1);
assert.equal(instance.touch3, 0);

// click on the third
instance.send_mouse_click(106., 103.);
assert.equal(instance.touch1, 1);
assert.equal(instance.touch2, 1);
assert.equal(instance.touch3, 1);
```
*/
