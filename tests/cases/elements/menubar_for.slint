
// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

import { AboutSlint, Button } from "std-widgets.slint";
export component TestCase inherits Window {

    in-out property <string> app_title: "Application";

    MenuBar {
        MenuItem {
            title: "File";
            MenuItem {
                title: "New";
                activated => { debug("New"); }
            }
            MenuItem {
                title: "Open";
                activated => { debug("Open"); }
            }
            MenuItem {
                title: "Open Recent";
                for num in 45 : MenuItem {
                    title: "Recent " + num;
                    activated => { debug("Recent 1", num); }
                }
            }
            MenuItem {
                title: "Save";
                activated => { debug("Save"); }
            }
            if true: MenuItem {
                title: "Exit " + app_title;
                activated => {
                    app_title = "Exited";
                }
            }
        }
        MenuItem {
            title: "Edit";
            MenuItem {
                title: "Copy";
                activated => { debug("Copy"); }
            }
            if true: MenuItem {
                title: "Paste";
                activated => { debug("Paste"); }
            }
        }
    }
    vl := VerticalLayout {
        AboutSlint {}
        Button { text: "Hello"; }
    }

    out property <bool> check-geometry: vl.x == 0 && vl.y == 0 && vl.width == root.width && vl.height == root.height;

    out property <bool> test: check-geometry;
}

/*
```rust
let instance = TestCase::new().unwrap();
assert!(instance.get_test());
```

```cpp
auto handle = TestCase::create();
const TestCase &instance = *handle;
assert(instance.get_test());
```
*/
