// Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial


TestCase := Window {
  width: 500phx;
  height: 500phx;

  Flickable {
    x: 0phx;
    width: 250phx;
    viewport-height: 800phx;

    t1 := TouchArea {
      height: 50phx;
    }
  }

  Flickable {
    x: 250phx;
    width: 250phx;
    viewport-width: 800phx;

    t2 := TouchArea {
      width: 50phx;
    }
  }

  property<bool> t1-has-hover: t1.has-hover;
  property<bool> t2-has-hover: t2.has-hover;
}

/*
```rust
// Test that mouse exit events are dispatched while scrolling
use slint::{PointerEvent, euclid::point2, euclid::vec2};
let instance = TestCase::new();
// Vertical
assert_eq!(instance.get_t1_has_hover(), false);
instance.window().dispatch_pointer_event(PointerEvent::Moved { position: point2(25.0, 25.0) });
assert_eq!(instance.get_t1_has_hover(), true);
instance.window().dispatch_pointer_event(PointerEvent::Wheel { position: point2(25.0, 25.0), delta: vec2(0.0, -30.0) });
assert_eq!(instance.get_t1_has_hover(), false);
// Horizontal
assert_eq!(instance.get_t2_has_hover(), false);
instance.window().dispatch_pointer_event(PointerEvent::Moved { position: point2(275.0, 25.0) });
assert_eq!(instance.get_t2_has_hover(), true);
instance.window().dispatch_pointer_event(PointerEvent::Wheel { position: point2(275.0, 25.0), delta: vec2(-30.0, 0.0) });
assert_eq!(instance.get_t2_has_hover(), false);
```
*/
