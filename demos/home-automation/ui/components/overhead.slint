// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT
import { Palette, Measurements, Animation } from "../common.slint";
import { FancySlider } from "general/fancySlider.slint";
import { AppState } from "../appState.slint";
import { HaText } from "general/haText.slint";
import { InnerShadowRectangle } from "general/innerShadowRectangle.slint";
import { DropShadowToggle} from "general/toggle.slint";
import { Control } from "control.slint";

export component Overhead inherits Control {
    show-label: false;
    full-screen: false;
    tile-shadow-blur: 0px;

    in property <length> tilePadding: (root.height > Measurements.small-height-tile) ? 36px : 18px;
    tile := InnerShadowRectangle {
        width: 100%;
        height: 100%;
        clip: true;
        inner-color: Palette.overhead-background.mix(Palette.overhead-shadow,(slider.value));
        inner-shadow-color: Palette.overhead-shadow;
        inner-shadow-blur: tile.height / 5;

        TouchArea {
            clicked => {
                slider.toggle();
            }
        }

        VerticalLayout {
            alignment: space-between;
            padding: tilePadding;
            width: 100%;
            height: 100%;
            HorizontalLayout {
                spacing: 10px;
                alignment: space-between;
                VerticalLayout {
                    alignment: start;
                    HaText {
                        text: root.name;
                        font-size: 20pt;
                        font-weight: 400;
                        color: Palette.overhead-foreground;
                    }
                }
            }

            slider := FancySlider {
                width: (root.height < Measurements.medium-height-tile) ? root.width - switch.width - 36px : root.width * 0.8;
                value: 0.0;
                icon: @image-url("../images/brightness.svg");
            }
        }

        switch := DropShadowToggle {
            y: root.height < Measurements.medium-height-tile ? root.height - self.height - tilePadding : tilePadding * 2.5;
            x: root.height < Measurements.medium-height-tile ? root.width - self.width : root.x + (tilePadding / 2);
            labelOff: "";
            labelOn: "";
            scale: 33%;
            toggleOpacity: 0.2;
            active: slider.value > 0;
            touchEnabled: false;
            control-color: self.active ? Palette.overhead-background : Palette.overhead-shadow;
            inner-shadow-color: self.active ? Palette.overhead-background : Palette.overhead-foreground;
            inner-color-inactive: Palette.slider-background;
            inner-color-active: Palette.slider-foreground;
        }
    }
}
