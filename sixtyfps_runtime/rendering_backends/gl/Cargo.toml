[package]
name = "sixtyfps-rendering-backend-gl"
version = "0.1.6"
authors = ["SixtyFPS <info@sixtyfps.io>"]
edition = "2018"
license = "(GPL-3.0-only OR LicenseRef-SixtyFPS-commercial)"
description = "OpenGL rendering backend for SixtyFPS"
repository = "https://github.com/sixtyfpsui/sixtyfps"
homepage = "https://sixtyfps.io"

[lib]
path = "lib.rs"

# Note, these features need to be kept in sync (along with their defaults) in
# the C++ crate's CMakeLists.txt
[features]
x11 = ["winit/x11", "glutin/x11", "copypasta/x11"]
wayland = ["winit/wayland", "glutin/wayland", "copypasta/wayland"]
svg = ["resvg", "usvg", "tiny-skia"]
default = ["svg"]

[dependencies]
sixtyfps-corelib = { version = "=0.1.6", path = "../../corelib" }
sixtyfps-common = { version = "=0.1.6", path = "../../common" }
const-field-offset = { version = "0.1", path = "../../../helper_crates/const-field-offset" }
image = { version = "0.23.14", default-features = false, features = [ "png", "jpeg" ] }
rgb = "0.8.27"
imgref = "1.6.1"
vtable = { version = "0.1", path = "../../../helper_crates/vtable" }
by_address = "1.0.4"
femtovg = { version = "0.2.8" }
euclid = "0.22.1"
pin-weak = "1"
scoped-tls-hkt = "0.1"
smallvec = "1.7"
once_cell = "1.5"
lyon_path = "0.17.3"
copypasta = { version = "0.7.0", default-features = false }
fontdb = { version = "0.7.0", default-features = false }
resvg = { version= "0.19", optional = true, default-features = false }
usvg = { version= "0.19", optional = true, default-features = false, features = ["text"] }
tiny-skia = { version= "0.6", optional = true, default-features = false }
derive_more = "0.99.5"
# Use the same version was femtovg's rustybuzz, to avoid duplicate crates
ttf-parser = "0.12.0"
# Use the same version was femtovg's rustybuzz, to avoid duplicate crates
unicode-script = "0.5.3"
cfg-if = "1"
winit = { version = "0.26", default-features = false }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web_sys = { version = "0.3", package = "web-sys", features=["console", "WebGlContextAttributes"] }
wasm-bindgen = { version = "0.2" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
glutin = { version = "0.28", default-features = false }
fontdb = { version = "0.7.0", features = ["memmap"] }
usvg = { version= "0.19", optional = true, default-features = false, features = ["text", "memmap-fonts"] }

[target.'cfg(target_family = "windows")'.dependencies]
font-kit = { version = "0.10", features = [] }

[target.'cfg(not(any(target_family = "windows", target_os = "macos", target_os = "ios", target_arch = "wasm32")))'.dependencies]
# Require font-config from the system on Linux. Issue #88 indicates that the copy provided by servo-fontconfig may be incompatible
# with distros at times.
servo-fontconfig = { version = "0.5", features = [ "force_system_lib" ] }
libc = { version = "0.2" }

[target.'cfg(target_os = "macos")'.dependencies]
cocoa = { version = "0.24.0" }
core-text = { version = "19.1.0" }
core-foundation = { version = "0.9.1" }

