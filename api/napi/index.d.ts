/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum DiagnosticLevel {
  Error = 0,
  Warning = 1
}
export function run(code: string): void
export type JsComponentCompiler = ComponentCompiler
/**
 * ComponentCompiler is the entry point to the Slint interpreter that can be used
 * to load .slint files or compile them on-the-fly from a string.
 */
export class ComponentCompiler {
  /** Returns a new ComponentCompiler. */
  constructor()
  /** Sets the include paths used for looking up `.slint` imports to the specified vector of paths. */
  set includePaths(includePaths: Array<string>)
  /** Returns the include paths the component compiler is currently configured with. */
  get includePaths(): Array<string>
  set style(style: string)
  get style(): string | null
  setFileLoader(fileLoaderFallback: (arg0: string) => string | null): void
  get diagnostics(): Array<JsDiagnostic>
  buildFromPath(path: string): JsComponentDefinition | null
  buildFromSource(sourceCode: string, path: string): JsComponentDefinition | null
}
export type JsComponentDefinition = ComponentDefinition
export class ComponentDefinition {
  constructor()
  get name(): string
  create(): JsComponentInstance | null
}
export class JsComponentInstance {
  constructor()
  run(): void
}
export type JsDiagnostic = Diagnostic
export class Diagnostic { }
