// Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
// SPDX-License-Identifier: MIT

import { LineEdit, Button, Slider, StandardListView, VerticalBox } from "std-widgets.slint";

struct Circle  { x: length, y: length, d: length }

export component MainWindow inherits Window {
    preferred-width: 500px;
    preferred-height: 400px;

    in property <[Circle]> model;

    private property<int> clicked-idx: -1;
    private property<Circle> selected-circle;
    callback background_clicked(length,length);

    in property<bool> undoable: false;
    in property<bool> redoable: false;
    callback undo_clicked();
    callback redo_clicked();

    callback circle_resized(int, length);

    VerticalBox {
        HorizontalLayout {
            alignment: center;
            spacing: 12px;
            Button {
                text: "Undo";
                enabled <=> root.undoable;
                clicked => { root.undo-clicked() }
            }
            Button {
                text: "Redo";
                enabled <=> root.redoable;
                clicked => { root.redo-clicked() }
            }
        }
        Rectangle {
            background: white;
            border-color: black;
            border-width: 2px;
            clip: true;
            TouchArea {
                width: 100%;
                height: 100%;
                clicked => {
                    root.background_clicked(self.pressed_x, self.pressed_y);
                }
            }

            for circle[idx] in root.model : Rectangle {
                background: root.clicked-idx == idx ? gray : white;
                border-color: black;
                border-width: 2px;
                border-radius: self.width / 2;
                height: self.width;
                width: circle.d;
                x: circle.x - self.width/2;
                y: circle.y - self.height/2;
                TouchArea {
                    height: 100%;
                    width: 100%;
                    clicked => {
                        root.selected-circle = circle;
                        root.clicked-idx = idx;
                    }
                }
            }

        }
    }

    if (root.clicked-idx != -1) : TouchArea {
        height: 100%;
        width: 100%;
        clicked => { root.clicked-idx = -1; }
    }
    if (root.clicked-idx != -1) : Rectangle {
        background: lightgray;
        height: 30%;
        width: 70%;
        x: (parent.width - self.width) / 2;
        y: parent.height - self.height - parent.height * 5%;
        TouchArea {
            height: 100%;
            width: 100%;
        }

        VerticalBox {
            Text {
                text: "Adjust diameter of circle at (" + root.selected-circle.x / 1px + ", " +  root.selected-circle.y / 1px + ").";
                wrap: word-wrap;
            }
            Slider {
                minimum: 4;
                maximum: 100;
                value: root.selected-circle.d / 1px;
                changed(diameter) => {
                    root.circle_resized(root.clicked-idx, diameter *1px);
                }
            }
        }
    }
}
