// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { Date, Time, LineEdit, TimePickerPopup, DatePickerPopup, VerticalBox, Button } from "std-widgets.slint";
import { IconButton } from "../widgets/icon_button.slint";
import { TextButton } from "../widgets/text_button.slint";
import { Icons, FontSettings, TodoPalette, SpaceSettings } from "../widgets/styling.slint";

export global CreateTaskAdapter {
    in property <string> title;
    in-out property <Date> due-date: { year: 2024, month: 12, day: 24 };
    in-out property <Time> due-time: { hour: 12, minute: 45, second: 0 };

    callback initialize();
    callback create(/* title */ string, /* due-date */ Date, /* due-time */ Time);
    callback back();
    pure callback date-string(Date) -> string;
    pure callback time-string(Time) -> string;
    pure callback current-date() -> Date;
    pure callback current-time() -> Time;

    // dummy implementation for live preview
    date-string(due-date) => {
        "Sat, Jun 1, 2024"
    }

    // dummy implementation for live preview
    time-string(due-time) => {
        "09:00"
    }
}

export component CreateTaskView {
    VerticalBox {
        HorizontalLayout {
            IconButton {
                icon: Icons.close;

                clicked => {
                    CreateTaskAdapter.back();
                }
            }

            // spacer
            Rectangle { }

            Button {
                text: @tr("Create");
                enabled: title-input.text != "";
                primary: true;

                clicked => {
                    root.create();
                }
            }
        }

        VerticalLayout {
            spacing: SpaceSettings.default-spacing;

            title-label := Text {
                text: @tr("Task name");
                color: TodoPalette.foreground;
                font-size: FontSettings.body-strong.font-size;
                font-weight: FontSettings.body-strong.font-weight;
                horizontal-alignment: left;
                overflow: elide;
            }

            title-input := LineEdit {
                placeholder-text: @tr("Describe your task");
                accessible-label: title-label.text;
                text: CreateTaskAdapter.title;
            }
        }

        Text {
            text: @tr("Due date");
            color: TodoPalette.foreground;
            font-size: FontSettings.body-strong.font-size;
            font-weight: FontSettings.body-strong.font-weight;
            horizontal-alignment: left;
            overflow: elide;
        }

        HorizontalLayout {
            spacing: SpaceSettings.default-spacing;

            TextButton {
                text: CreateTaskAdapter.date-string(CreateTaskAdapter.due-date);

                clicked => {
                    date-picker.show();
                }
            }

            TextButton {
                text: CreateTaskAdapter.time-string(CreateTaskAdapter.due-time);
                horizontal-stretch: 0;

                clicked => {
                    time-picker.show();
                }
            }
        }

        Rectangle { }
    }

    date-picker := DatePickerPopup {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;

        accepted(date) => {
            CreateTaskAdapter.due-date = date;
        }
    }

    time-picker := TimePickerPopup {
        x: (root.width - self.width) / 2;
        y: (root.height - self.height) / 2;

        accepted(time) => {
            CreateTaskAdapter.due-time = time;
        }
    }

    function create() {
        CreateTaskAdapter.back();
        CreateTaskAdapter.create(title-input.text, CreateTaskAdapter.due-date, CreateTaskAdapter.due-time);
    }

    init => {
        CreateTaskAdapter.initialize();
    }
}
