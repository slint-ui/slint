// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: MIT

import { SpriteSheet } from "SpriteSheet.slint";
import { ComboBox } from "std-widgets.slint";

enum TravelDirection { LEFT, RIGHT }

export component AppWindow inherits Window {
    preferred-width: 1024px;
    preferred-height: 720px;

    property <duration> bounceDuration: 1000ms;
    property <TravelDirection> travel-direction: TravelDirection.RIGHT;

    cb := ComboBox {
        x: 10px;
        y: 10px;
        model: ["Boing Ball", "Static"];
        current-value: "Boing Ball";
    }

    if cb.current-value == "Static": SpriteSheet {
        source: @image-url("images/sprite.png");
        framesWide: 5;
        framesHigh: 5;
        totalFrames: 21;
        playing: true;
        duration: 700ms;
    }

    if cb.current-value == "Boing Ball":  ball := SpriteSheet {

        property <bool> headLeft: true;
        source: @image-url("images/sprite.png");
        framesWide: 5;
        framesHigh: 5;
        totalFrames: 21;
        x: 0px;
        y: (-400px * abs(sin(360deg * animation-tick() / 3s))) + parent.height - ball.height;
        // Animate the ball frames in the direction it's travelling
        frame: travel-direction == TravelDirection.LEFT ? self.totalFrames * ( animation-tick() / 400ms) : self.totalFrames * -( animation-tick() / 400ms);
        animate x { duration: 3s; }

        function updateX(){
            if ball.x > root.width - ball.width {
                travel-direction = TravelDirection.LEFT;
                ball.x = 0;
            }
            if ball.x <= 0 {
                travel-direction = TravelDirection.RIGHT;
                ball.x = root.width;
            }
        }

        changed x => { updateX() }

        // Update X on start or the ball will be stuck at 0 as no 'changed x' happens
        init => { updateX() }
    }
}
