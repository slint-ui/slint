/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2021 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2021 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */

import { DemoPalette, PrinterQueueItem, Page } from "common.60";
import { HomePage } from "./home_page.60";
import { InkLevel, InkPage } from "./ink_page.60";
import { SettingsPage } from "./settings_page.60";

import "./fonts/NotoSans-Regular.ttf";
import "./fonts/NotoSans-Bold.ttf";

SideBarIcon := Rectangle {
    property <bool> active;
    callback activate;

    GridLayout {
        padding: 0px;
        @children
    }

    TouchArea {
        clicked => { root.activate(); }
    }
}

MainWindow := Window {
    callback quit();
    callback start-job(string);
    callback cancel-job(int);
    callback pause-job(int);

    property <[PrinterQueueItem]> printer-queue: [
        { status: "PRINTING", progress: 63, title: "210106-FinalPresentation.pdf", owner: "simon.hausmann@sixtyfps.io", pages: 6, size: "143kb", submission-date: "11:41 25/01/21" },
        { status: "WAITING...", title: "Adressliste.docx", owner: "simon.hausmann@sixtyfps.io", pages: 6, size: "143kb", submission-date: "11:41 25/01/21" },
        { status: "WAITING...", title: "210106-FinalPresentation.pdf", owner: "simon.hausmann@sixtyfps.io", pages: 6, size: "143kb", submission-date: "11:41 25/01/21" },
    ];

    width: 772px;
    height: 504px;
    title: "SixtyFPS printer demo";
    background: DemoPalette.main-background;
    default-font-family: "Noto Sans";
    default-font-size: DemoPalette.base-font-size;

    /// Note that this property is overwriten in the .cpp and .rs code.
    /// The data is only in this file so it looks good in the viewer
    property <[InkLevel]> ink-levels: [
                {color: #0ff, level: 60%},
                {color: #ff0, level: 80%},
                {color: #f0f, level: 70%},
                {color: #000, level: 30%},
            ];

    property<int> active-page: 0;

    HorizontalLayout {
        padding: 10px;
        padding-left: 67px;

        main-view := Rectangle {
            height: 100%;
            border-radius: 30px;
            background: DemoPalette.page-background-color;

            Rectangle {
                clip: true;
                x: main-view.border-radius / 2;
                y: main-view.border-radius / 2;
                width: main-view.width - main-view.border-radius;
                height: main-view.height - main-view.border-radius;

                home-page := HomePage {
                    y: active-page == 0 ? 0 : active-page < 0 ? - height - 1px : parent.height + 1px;
                    animate y { duration: 125ms; easing: ease; }
                    printer-queue: root.printer-queue;
                    start-job(title) => { root.start-job(title); }
                    cancel-job(title) => { root.cancel-job(title); }
                    pause-job(title) => { root.pause-job(title); }
                }
                SettingsPage {
                    y: active-page == 1 ? 0 : active-page < 1 ? - height - 1px : parent.height + 1px;
                    animate y { duration: 125ms; easing: ease; }
                }
                InkPage {
                    y: active-page == 2 ? 0 : active-page < 2 ? - height - 1px : parent.height + 1px;
                    animate y { duration: 125ms; easing: ease; }
                    ink-levels <=> root.ink-levels;
                    page-visible: active-page == 2;
                }
            }
        }
    }

    sidebar := Rectangle {
        width: 57px;
        x: 10px;

        callback icon-y(int) -> length;
        icon-y(index) => {
            return 100px // top padding
                + index * 72px;
        }

        Image {
            source: @image-url("images/page_selection.svg");
            y: sidebar.icon-y(root.active-page) - self.width / 2;
            animate y {
                duration: 125ms;
            }
            width: main-view.x - sidebar.x + 1px;
            height: 1.77 * self.width;
            colorize: DemoPalette.page-background-color;
        }

        for page-icon[idx] in [
            @image-url("images/home.svg"),
            @image-url("images/settings.svg"),
            @image-url("images/ink.svg"),
        ] : SideBarIcon {
            y: sidebar.icon-y(idx);
            x: 16px;
            height: 35px;
            width: 30px;

            icon := Image {
                colorize: (root.active-page == idx) ? DemoPalette.active-page-icon-color : DemoPalette.inactive-page-icon-color;
                animate colorize {
                    duration: 125ms;
                }
                source: page-icon;
                image-fit: contain;
                width: 100%;
                height: 100%;
            }

            activate => {
                root.active-page = idx;
            }
        }

        Rectangle {
            y: sidebar.icon-y(3) + 17px;
            x: 12px;
            background: #6284FF;
            height: 2px;
            width: 37px;
        }

        SideBarIcon {
            y: sidebar.icon-y(4);
            x: 16px;
            height: 35px;
            width: 30px;

            Image {
                colorize: DemoPalette.night-mode ? #F1FF98 : DemoPalette.inactive-page-icon-color;
                source: DemoPalette.night-mode ? @image-url("images/moon_full.svg") : @image-url("images/moon.svg");
                image-fit: contain;
                width: 100%;
                height: 100%;
            }

            activate => {
                DemoPalette.night-mode = !DemoPalette.night-mode;
            }
        }

    }
}
