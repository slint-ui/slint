# Copyright Â© SixtyFPS GmbH <info@slint.dev>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

# cSpell: ignore debuginfo rustflags swatinem sccache

---
name: Setup Rust support
description: Set up Slint development environment

inputs:
    toolchain:
        description: "Rust toolchain to use (default: stable)"
        required: false
        default: stable
    target:
        description: "Rust target to use"
        required: false
        default: ""
    components:
        description: "Rust components to install"
        required: false
        default: ""
    key:
        description: "Extra cache keying information"
        required: false
        default: ""
    cache:
        description: "Enable Rust caching (default: true)"
        required: false
        default: "true"
    sccache:
        description: "Enable sccache with Cloudflare R2 (default: false)"
        required: false
        default: "false"
    SCCACHE_R2_BUCKET:
        description: "Cloudflare R2 bucket name for sccache"
        required: false
        default: ""
    SCCACHE_R2_ENDPOINT:
        description: "Cloudflare R2 endpoint URL"
        required: false
        default: ""
    SCCACHE_R2_ACCESS_KEY:
        description: "Cloudflare R2 access key ID"
        required: false
        default: ""
    SCCACHE_R2_SECRET_KEY:
        description: "Cloudflare R2 secret access key"
        required: false
        default: ""

runs:
    using: composite
    steps:
        - name: Disable debug info to avoid running out of disk space on Windows
          if: runner.os == 'Windows'
          run: |
              echo "RUSTFLAGS=-C debuginfo=0" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          shell: powershell
        # Skia source builds end up with long paths, exceeding the 260 character limit. Enable this git for windows
        # option to use newer Windows API (https://github.com/git-for-windows/git/blob/bc3743def76f487b6dbc18b1b2645ab081c14980/Documentation/config/core.txt#L679)
        - name: Enable long path support for git checkouts
          if: runner.os == 'Windows'
          run: |
              git config --system core.longpaths true
          shell: powershell
        - name: Move cargo home close to the target/$profile directory, so that relative paths from build to cargo source are without drive letter
          if: runner.os == 'Windows'
          run: |
              echo "CARGO_HOME=${{ runner.workspace }}\cargo" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          shell: powershell
        - name: Install Rust ${{ inputs.toolchain }}
          uses: dtolnay/rust-toolchain@stable
          with:
              toolchain: ${{ inputs.toolchain }}
              components: ${{ inputs.components }}
              target: ${{ inputs.target }}
        - name: Configure sccache environment for Cloudflare R2
          if: inputs.sccache == 'true'
          shell: bash
          run: |
            echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
            echo "SCCACHE_BUCKET=${{ inputs.SCCACHE_R2_BUCKET }}" >> $GITHUB_ENV
            echo "SCCACHE_ENDPOINT=${{ inputs.SCCACHE_R2_ENDPOINT }}" >> $GITHUB_ENV
            echo "SCCACHE_REGION=auto" >> $GITHUB_ENV
            echo "SCCACHE_REQUEST_TIMEOUT=30" >> $GITHUB_ENV
            echo "SCCACHE_IGNORE_SERVER_IO_ERROR=1" >> $GITHUB_ENV
            echo "AWS_ACCESS_KEY_ID=${{ inputs.SCCACHE_R2_ACCESS_KEY }}" >> $GITHUB_ENV
            echo "AWS_SECRET_ACCESS_KEY=${{ inputs.SCCACHE_R2_SECRET_KEY }}" >> $GITHUB_ENV
        - name: Run sccache-cache
          if: inputs.sccache == 'true'
          uses: mozilla-actions/sccache-action@v0.0.9
        - uses: Swatinem/rust-cache@v2
          if: inputs.cache == 'true'
          with:
              key: ${{ inputs.key }}-1
              save-if: ${{ github.ref == 'refs/heads/master' }}
