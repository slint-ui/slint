# Copyright Â© SixtyFPS GmbH <info@slint.dev>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-1.1 OR LicenseRef-Slint-commercial

name: Publish npm package to npm registry

on:
  workflow_dispatch:
    inputs:
      private:
        type: boolean
        default: true
        required: false
        description: "Private build? True means artifacts are only built. False means the package will be published to the NPM registry"
      release:
        type: boolean
        default: false
        required: false
        description: "Release? Enable options for building binaries for a release (i.e. apply a nightly tag, nightly version)"

  schedule:
    - cron: '0 5 * * *'

jobs:
  determine_version:
    runs-on: ubuntu-22.04
    outputs:
      PKG_VERSION: ${{ steps.mkversion.outputs.PKG_VERSION }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/install-linux-dependencies
    - uses: ./.github/actions/setup-rust
    # Setup .npmrc file to publish to npm
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Determine version
      id: mkversion
      env:
        RELEASE_INPUT: ${{ github.event.inputs.release }}
      working-directory: api/node
      run: |
         version=`npm pkg get version | jq -r`
         if [ "$RELEASE_INPUT" != "true" ]; then
             nightly_version_suffix=`git log -1 --format=%cd --date="format:%Y%-m%-d%H"`
             version="$version-nightly.$nightly_version_suffix"
         fi
         echo $version
         echo "PKG_VERSION=$version" >> $GITHUB_ENV

  build_linux_package:
    runs-on: ubuntu-22.04
    needs: determine_version
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-linux-dependencies
      - uses: ./.github/actions/setup-rust
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Set version
        env:
          RELEASE_INPUT: ${{ github.event.inputs.release }}
          PKG_VERSION: ${{ needs.determine_version.outputs.PKG_VERSION }}
        working-directory: api/node
        run: |
          if [ "$RELEASE_INPUT" != "true" ]; then
              npm version $version
          fi    
      - name: Build binary
        working-directory: api/node      
        run: |
            npm install --ignore-scripts
            npm run build
      - name: Create package
        working-directory: api/node      
        run: |
          npx napi create-npm-dir -t . -c ./binaries.json
          move index.linux-x64-gnu.node npm/linux-x64-gnu/
          npm pack ./npm/linux-x64-gnu/
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: binaries-x86_64-unknown-linux-gnu
          path: "api/node/*.tgz"
    
  build_and_publish_npm_package:
    runs-on: ubuntu-22.04
    needs: [determine_version, build_linux_package]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/install-linux-dependencies
    - uses: ./.github/actions/setup-rust
    # Setup .npmrc file to publish to npm
    - uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Set version
      env:
        RELEASE_INPUT: ${{ github.event.inputs.release }}
        PKG_VERSION: ${{ needs.determine_version.outputs.PKG_VERSION }}
      working-directory: api/node
      run: |
         if [ "$RELEASE_INPUT" != "true" ]; then
             npm version $version
         fi
    - name: Select git revision
      if: github.event.inputs.release != 'true'
      run: |
        echo "PKG_EXTRA_ARGS=--sha1=$GITHUB_SHA" >> $GITHUB_ENV
        echo "PUBLISH_TAG=--tag nightly" >> $GITHUB_ENV
    - name: Compile index.js and index.d.ts
      working-directory: api/node
      run: |
        npm install
        npm run build
        npm run compile
    - name: Prepare binary packages
      working-directory: api/node
      run: |
        npx napi create-npm-dir -t . -c ./binaries.json
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: binaries-x86_64-unknown-linux-gnu
        path: api/node/
    - name: Add binary dependencies
      working-directory: api/node
      env:
        PKG_VERSION: ${{ needs.determine_version.outputs.PKG_VERSION }}
      run: |
          npm install --no-save *.tgz
          npm install --save-optional --save-exact @slint-ui/slint-ui-binary-linux-x64-gnu@PKG_VERSION
    - name: Build package
      run: |
          cargo xtask node_package $PKG_EXTRA_ARGS
    - name: "Upload npm package Artifact"
      uses: actions/upload-artifact@v3
      env:
        PKG_VERSION: ${{ needs.determine_version.outputs.PKG_VERSION }}
      with:
          name: slint-ui-node-package
          path: |
              api/node/slint-ui-${{ env.PKG_VERSION }}.tgz
    - name: Smoke test package to see if it builds at least
      run: |
          mkdir /tmp/nodetest
          cd /tmp/nodetest
          npm init -y
          npm install --verbose $GITHUB_WORKSPACE/api/node/slint-ui-$PKG_VERSION.tgz
    - name: Build and publish packages
      if: ${{ github.event.inputs.private != 'true' && (github.ref == 'refs/heads/master' || github.event.inputs.release == 'true') }}
      run: |        
        npm publish $PUBLISH_TAG api/node/*.tgz
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
