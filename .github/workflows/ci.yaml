# Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial

name: CI

on:
  push:
    branches: [master, "0.3.5"]
  pull_request:
    branches: [master, "0.3.5"]
  workflow_dispatch:

jobs:
  build_and_test:
    env:
      QT_QPA_PLATFORM: offscreen
      RUSTFLAGS: -D warnings
      CARGO_PROFILE_DEV_DEBUG: 0
      CARGO_INCREMENTAL: false
      RUST_BACKTRACE: 1
      DYLD_FRAMEWORK_PATH: /Users/runner/work/slint/Qt/5.15.2/clang_64/lib
    strategy:
      matrix:
        os: [macos-11]
        rust_version: [stable]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/install-linux-dependencies
      # Python 3.11 breaks the neon-sys build
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Qt
        if: runner.os != 'Windows'
        uses: jurplel/install-qt-action@v3
        with:
          version: "5.15.2"
          setup-python: false
      - name: Install ffmpeg and alsa (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install clang libavcodec-dev libavformat-dev libavutil-dev libavfilter-dev libavdevice-dev libasound2-dev pkg-config
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v1
      - name: Set default style
        if: matrix.os != 'windows-2022'
        run: |
          echo "SLINT_STYLE=native" >> $GITHUB_ENV
      - name: Set default style
        if: matrix.os == 'windows-2022'
        run: |
          echo "SLINT_STYLE=fluent" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "SLINT_NO_QT=1" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - uses: ./.github/actions/setup-rust
        with:
          toolchain: ${{ matrix.rust_version }}
          key: x-v2
      - name: Run tests
        run: |
          echo $DYLD_FRAMEWORK_PATH
          ls $DYLD_FRAMEWORK_PATH
          ls $Qt5_DIR
          DYLD_FRAMEWORK_PATH=$Qt5_DIR/lib cargo test --verbose --all-features --workspace ${{ matrix.extra_args }} --exclude slint-node --exclude test-driver-nodejs --exclude test-driver-cpp --exclude mcu-board-support --exclude printerdemo_mcu --exclude uefi-demo --exclude ffmpeg
        env:
          SLINT_CREATE_SCREENSHOTS: 1
      - name: Archive screenshots after failed tests
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: screenshots-${{matrix.os}}
          path: |
            tests/screenshots/references
