# Copyright Â© SixtyFPS GmbH <info@slint-ui.com>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial

name: Build the C++ binary package

on:
  workflow_dispatch:
  workflow_call:

jobs:
  cmake_package:
    env:
      DYLD_FRAMEWORK_PATH: /Users/runner/work/slint/Qt/6.2.1/clang_64/lib
      QT_QPA_PLATFORM: offscreen
      CARGO_INCREMENTAL: false
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-11, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/install-linux-dependencies
    - name: Install Qt (Ubuntu)
      uses: jurplel/install-qt-action@v3
      if: matrix.os == 'ubuntu-20.04'
      with:
        version: 5.15.2
    - name: Install Qt (cached)
      if: matrix.os != 'ubuntu-20.04'
      uses: jurplel/install-qt-action@v3
      with:
        version: 6.2.1
    - uses: ./.github/actions/setup-rust
    - uses: actions-rs/install@v0.1
      with:
        crate: cargo-about
    - name: Prepare licenses (with Qt)
      if: matrix.os == 'windows-2022' || matrix.os == 'macOS-11'
      run: bash -x ./scripts/prepare_binary_package.sh . --with-qt
    - name: Prepare licenses (without Qt)
      if: matrix.os != 'windows-2022' && matrix.os != 'macOS-11'
      run: bash -x ./scripts/prepare_binary_package.sh .
    - uses: ilammy/msvc-dev-cmd@v1
    - name: Select MSVC (windows)
      run: |
        echo "CC=cl.exe" >> $GITHUB_ENV
        echo "CXX=cl.exe" >> $GITHUB_ENV
      if: matrix.os == 'windows-2022'
    - name: C++ Build
      uses: lukka/run-cmake@v3.4
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: CMakeLists.txt
        cmakeAppendedArgs: '-DCMAKE_BUILD_TYPE=RelWithDebInfo -DSLINT_PACKAGE_BUNDLE_QT=ON'
        buildDirectory: ${{ runner.workspace }}/cppbuild
        buildWithCMakeArgs: '--config Release'
    - name: cpack
      working-directory: ${{ runner.workspace }}/cppbuild
      run: cmake --build . --config Release --target package
    - name: "Upload C++ packages"
      uses: actions/upload-artifact@v3
      with:
          name: cpp_bin
          path: ${{ runner.workspace }}/cppbuild/Slint-cpp-*
