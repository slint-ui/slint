# Copyright Â© SixtyFPS GmbH <info@slint.dev>
# SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

# This docker file builds the Rust binaries of our demos and packages them into a Torizon container

ARG TOOLCHAIN_ARCH=arm64
ARG IMAGE_ARCH=linux/arm64
ARG BASE_VERSION=4
ARG BASE_NAME=wayland-base
ARG BUILD_HOME_AUTOMATION_SW_RENDERER=false

FROM torizon/cross-toolchain-$TOOLCHAIN_ARCH:${BASE_VERSION} AS build
ARG TOOLCHAIN_ARCH
ARG RUST_TOOLCHAIN_ARCH=aarch64-unknown-linux-gnu
ARG BUILD_HOME_AUTOMATION_SW_RENDERER

ARG WEATHER_API_KEY
ENV WEATHER_API=$WEATHER_API_KEY

# Install Rust
ENV RUSTUP_HOME=/rust
ENV CARGO_HOME=/cargo
ENV PATH=/cargo/bin:/rust/bin:$PATH

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
RUN rustup target add $RUST_TOOLCHAIN_ARCH

ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
ENV CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc

# Install Slint build dependencies for linuxkms backend
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes --allow-change-held-packages pkg-config libfontconfig1-dev:$TOOLCHAIN_ARCH libxkbcommon-dev:$TOOLCHAIN_ARCH libinput-dev:$TOOLCHAIN_ARCH libudev-dev:$TOOLCHAIN_ARCH libgbm-dev:$TOOLCHAIN_ARCH libdrm2:$TOOLCHAIN_ARCH libdrm2- libdrm-amdgpu1- python3 clang libstdc++-11-dev:$TOOLCHAIN_ARCH ninja-build && \
    rm -rf /var/lib/apt/lists/*

# Don't require font-config when the compiler runs
ENV RUST_FONTCONFIG_DLOPEN=on
ENV PKG_CONFIG_ALLOW_CROSS=1

# Build Demos
COPY . /slint
WORKDIR /slint
RUN mkdir demos_compiled \
    && cargo build --release --target $RUST_TOOLCHAIN_ARCH --features slint/renderer-skia,slint/backend-linuxkms-noseat \
        -p printerdemo -p slide_puzzle -p gallery -p opengl_underlay -p carousel -p todo -p energy-monitor -p weather-demo \
    && for demo in printerdemo slide_puzzle gallery opengl_underlay carousel todo energy-monitor weather-demo; do \
        cp target/$RUST_TOOLCHAIN_ARCH/release/$demo ./demos_compiled/; \
    done \
    && if [ "$BUILD_HOME_AUTOMATION_SW_RENDERER" = "true" ]; then \
        cargo build --release --target $RUST_TOOLCHAIN_ARCH --features slint/renderer-skia,slint/backend-linuxkms-noseat,home-automation/sw-renderer \
            -p home-automation \
        && cp target/$RUST_TOOLCHAIN_ARCH/release/home-automation ./demos_compiled/home-automation; \
    else \
        cargo build --release --target $RUST_TOOLCHAIN_ARCH --features slint/renderer-skia,slint/backend-linuxkms-noseat \
            -p home-automation \
        && cp target/$RUST_TOOLCHAIN_ARCH/release/home-automation ./demos_compiled/home-automation; \
    fi

# Create container for target
FROM --platform=${IMAGE_ARCH} torizon/${BASE_NAME}:${BASE_VERSION} AS deploy
ARG BUILD_HOME_AUTOMATION_SW_RENDERER

LABEL org.opencontainers.image.source=https://github.com/slint-ui/slint
LABEL org.opencontainers.image.description="Container image providing Slint demos for use on Torizon. Run with docker run  --user=torizon -v /run/udev:/run/udev -v /dev:/dev -v /tmp:/tmp --device-cgroup-rule='c 199:* rmw' --device-cgroup-rule='c 226:* rmw' --device-cgroup-rule='c 13:* rmw' --device-cgroup-rule='c 4:* rmw'. Available demos: printerdemo slide_puzzle gallery opengl_underlay carousel todo"

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install libfontconfig1 libxkbcommon0 libinput10 fonts-noto-core fonts-noto-cjk fonts-noto-cjk-extra fonts-noto-color-emoji fonts-noto-ui-core fonts-noto-ui-extra \
    && if [ "$BUILD_HOME_AUTOMATION_SW_RENDERER" = "true" ]; then \
        echo "Removing Mesa OpenGL packages for software renderer build..." \
        && DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y mesa-utils libegl1 libglx-mesa0 libgl1-mesa-dri libglapi-mesa libegl-mesa0 \
        && apt-get autoremove -y \
        && DEBIAN_FRONTEND=noninteractive apt-get install -y libgbm1; \
    fi \
    && rm -rf /var/lib/apt/lists/*

COPY --from=build /slint/demos_compiled/* /usr/bin/

ENV SLINT_FULLSCREEN=1
ENV SLINT_BACKEND=linuxkms
CMD /usr/bin/energy-monitor
