================================================================================
box_alignment
================================================================================

MyWid := Rectangle {
    min-width: 20phx;
    min-height: 20phx;
    horizontal-stretch:0;
    vertical-stretch:0;
}


TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    VerticalLayout {
        alignment: end;
        padding: 0phx;
        spacing: 5phx;
        ls := HorizontalLayout {
            padding: 0phx;
            spacing: 2phx;
            alignment: start;
            rs1 := MyWid { background: blue; }
            rs2 := MyWid { background: red; }
            rs3 := MyWid { background: yellow; }
        }
        lb := HorizontalLayout {
            padding: 0phx;
            spacing: 2phx;
            alignment: space-between;
            rb1 := MyWid { background: green; }
            rb2 := MyWid { background: black; }
            rb3 := MyWid { background: orange; }
        }
        la := HorizontalLayout {
            padding: 0phx;
            spacing: 2phx;
            alignment: space-around;
            ra1 := MyWid { background: pink; }
            ra2 := MyWid { background: lightblue; }
            ra3 := MyWid { background: gray; }
        }
        lc := HorizontalLayout {
            padding: 0phx;
            spacing: 2phx;
            alignment: center;
            rc1 := MyWid { background: violet; }
            rc2 := MyWid { background: lightgreen; }
            rc3 := MyWid { background: purple; }
        }
    }

    // check the vertical layout
    property <bool> v1: ls.y == height - (4*20phx + 15phx) && rs1.y == 0 && rs1.y == rs2.y && rs1.y == rs3.y;
    property <bool> v2: lb.y == height - (3*20phx + 10phx) && rb1.y == 0 && rb1.y == rb2.y && rb1.y == rb3.y;
    property <bool> v3: la.y == height - (2*20phx + 5phx) && ra1.y == 0 && ra1.y == ra2.y && ra1.y == ra3.y;
    property <bool> v4: lc.y == height - (1*20phx + 0phx) && rc1.y == 0 && rc1.y == rc2.y && rc1.y == rc3.y;

    // check the horizontal layout
    property <bool> s1: rs1.x == 0phx && rs2.x == 22phx && rs3.x == 44phx;
    property <bool> c1: rc1.x == (width - 64phx)/2 && rc2.x == (width - rc2.width)/2 && rc3.x == (width + 64phx)/2 - ra3.width;
    property <bool> b1: rb1.x == 0phx && rb2.x == (width - rb2.width)/2 && rb3.x == width - rb3.width;

    property <bool> test: v1 && v2 && v3 && v4 && s1 && c1 && b1;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))))))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (language_constant)))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier)))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier)))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier)))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier)))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier)))))))))))
        (comment)
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (function_identifier))
          (property_expr
            (add_binary_expression
              (var_identifier)
              (add_prec_operator)
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (expression_body_paren
                      (add_binary_expression
                        (mult_binary_expression
                          (value
                            (number
                              (int_number)))
                          (mult_prec_operator)
                          (value
                            (number
                              (int_number))))
                        (ERROR
                          (UNEXPECTED 'x'))
                        (add_prec_operator)
                        (value
                          (number
                            (int_number))))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (mult_prec_operator)
                    (var_identifier
                      (ERROR
                        (int_number))
                      (post_identifier)))
                  (ERROR
                    (int_number))
                  (mult_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)
                    (ERROR
                      (UNEXPECTED 's')
                      (int_number))
                    (post_identifier)))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)
                  (ERROR
                    (UNEXPECTED 's')
                    (int_number))
                  (post_identifier))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (function_identifier))
          (property_expr
            (add_binary_expression
              (var_identifier)
              (add_prec_operator)
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (expression_body_paren
                      (add_binary_expression
                        (mult_binary_expression
                          (value
                            (number
                              (int_number)))
                          (mult_prec_operator)
                          (value
                            (number
                              (int_number))))
                        (ERROR
                          (UNEXPECTED 'x'))
                        (add_prec_operator)
                        (value
                          (number
                            (int_number))))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (mult_prec_operator)
                    (var_identifier
                      (ERROR
                        (int_number))
                      (post_identifier)))
                  (ERROR
                    (int_number))
                  (mult_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)
                    (ERROR
                      (UNEXPECTED 'b')
                      (int_number))
                    (post_identifier)))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)
                  (ERROR
                    (UNEXPECTED 'b')
                    (int_number))
                  (post_identifier))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (function_identifier))
          (property_expr
            (add_binary_expression
              (var_identifier)
              (add_prec_operator)
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (expression_body_paren
                      (add_binary_expression
                        (mult_binary_expression
                          (value
                            (number
                              (int_number)))
                          (mult_prec_operator)
                          (value
                            (number
                              (int_number))))
                        (ERROR
                          (UNEXPECTED 'x'))
                        (add_prec_operator)
                        (value
                          (number
                            (int_number))))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (mult_prec_operator)
                    (var_identifier
                      (ERROR
                        (int_number))
                      (post_identifier)))
                  (ERROR
                    (int_number))
                  (mult_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)
                    (ERROR
                      (UNEXPECTED 'a')
                      (int_number))
                    (post_identifier)))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)
                  (ERROR
                    (UNEXPECTED 'a')
                    (int_number))
                  (post_identifier))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (function_identifier))
          (property_expr
            (add_binary_expression
              (var_identifier)
              (add_prec_operator)
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (expression_body_paren
                      (add_binary_expression
                        (mult_binary_expression
                          (value
                            (number
                              (int_number)))
                          (mult_prec_operator)
                          (value
                            (number
                              (int_number))))
                        (ERROR
                          (UNEXPECTED 'x'))
                        (add_prec_operator)
                        (value
                          (number
                            (int_number))))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (mult_prec_operator)
                    (var_identifier
                      (ERROR
                        (int_number))
                      (post_identifier)))
                  (ERROR
                    (int_number))
                  (mult_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)
                    (ERROR
                      (UNEXPECTED 'c')
                      (int_number))
                    (post_identifier)))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)
                  (ERROR
                    (UNEXPECTED 'c')
                    (int_number))
                  (post_identifier))))))
        (comment)
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (expression_body_paren
                (add_binary_expression
                  (var_identifier)
                  (add_prec_operator)
                  (value
                    (number
                      (int_number))))
                (ERROR
                  (UNEXPECTED 'x')))
              (mult_prec_operator)
              (value
                (number
                  (int_number))))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (expression_body_paren
                (add_binary_expression
                  (var_identifier)
                  (add_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier))))
              (mult_prec_operator)
              (value
                (number
                  (int_number))))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (add_binary_expression
              (mult_binary_expression
                (expression_body_paren
                  (add_binary_expression
                    (var_identifier)
                    (add_prec_operator)
                    (value
                      (number
                        (int_number))))
                  (ERROR
                    (UNEXPECTED 'x')))
                (mult_prec_operator)
                (value
                  (number
                    (int_number))))
              (add_prec_operator)
              (var_identifier
                (ERROR
                  (int_number))
                (post_identifier)))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (expression_body_paren
                (add_binary_expression
                  (var_identifier)
                  (add_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier))))
              (mult_prec_operator)
              (value
                (number
                  (int_number))))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (add_binary_expression
              (var_identifier)
              (add_prec_operator)
              (var_identifier
                (ERROR
                  (int_number))
                (post_identifier)))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (ERROR)
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (mult_binary_expression
                        (value
                          (number
                            (int_number)))
                        (mult_prec_operator)
                        (ERROR)
                        (value
                          (number
                            (int_number))))
                      (mult_prec_operator)
                      (ERROR)
                      (value
                        (number
                          (int_number))))
                    (mult_prec_operator)
                    (ERROR)
                    (value
                      (number
                        (int_number))))
                  (mult_prec_operator)
                  (ERROR)
                  (value
                    (number
                      (int_number))))
                (mult_prec_operator)
                (ERROR)
                (value
                  (number
                    (int_number))))
              (mult_prec_operator)
              (ERROR)
              (value
                (number
                  (int_number))))))))))

================================================================================
box_preferred_size
================================================================================

TestCase := Rectangle {
    background: green;
    width: 300phx;
    height: 50phx;

    HorizontalLayout {
        padding: 0px;
        fake-image := Rectangle {
            background: blue;
            preferred-width: 25phx;
            // Don't apply the preferred height for the horizontal layout.
            preferred-height: 500phx;
            horizontal-stretch: 0;
            vertical-stretch: 0;
        }
        Rectangle {
            background: green;
            // implicit: horizontal-stretch: 1
        }
    }

    property <bool> fake-image-width-ok: fake-image.width == 25phx;
    property <bool> fake-image-height-ok: fake-image.height == 50phx;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (language_constant)))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (comment)
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))
                  (comment))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))))))

================================================================================
default_fill
================================================================================

SubSub := Rectangle {
    width: 30phx;
}

Sub := SubSub {}

TestCase := Rectangle {
    width: 300phx;
    height: 200phx;

    elem1 := Rectangle {
        elem2 := TouchArea {}
    }
    elem3 := Rectangle {
        height: 50%;
    }

    elem4 := Sub { }

    property <bool> elem1_ok: elem1.width == 300phx && elem1.height == 200phx;
    property <bool> elem2_ok: elem2.width == 300phx && elem2.height == 200phx;
    property <bool> elem3_ok: elem3.width == 300phx && elem3.height == 200phx / 2;
    property <bool> elem4_ok: elem4.width == 30phx && elem4.height == 200phx;

    property<bool> test: elem1_ok && elem2_ok && elem3_ok && elem4_ok;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x'))))))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body)))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type)))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body)))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (value
                (number
                  (int_number))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier)
                  (ERROR
                    (int_number)
                    (UNEXPECTED '_'))
                  (mult_prec_operator)
                  (var_identifier))
                (ERROR
                  (int_number)
                  (UNEXPECTED '_'))
                (mult_prec_operator)
                (var_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED '_'))
              (mult_prec_operator)
              (var_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED '_')))))))

================================================================================
flickable_in_layout
================================================================================

export TestCase := Window {
    VerticalLayout {
        padding: 7px;
        Flickable {
            v:= VerticalLayout {
                padding: 0;
                spacing: 0;
                for i in 6: Text {
                    height: 100px;
                    width: 100px;
                    text: "Test";
                }
            }
        }
    }

    property <bool> test: root.min_width == 7px*2 && root.min_height == 7px*2 && root.preferred_width == 114px && root.preferred_height == 14px + 600px;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (visibility_modifier)
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (ERROR
                        (variable_set_equal
                          (var_identifier)
                          (assignment_prec_operator)
                          (value
                            (number
                              (int_number))))
                        (variable_set_equal
                          (var_identifier)
                          (assignment_prec_operator)
                          (value
                            (number
                              (int_number))))
                        (var_identifier)
                        (int_number)
                        (UNEXPECTED 'T'))
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (string
                              (string_fragment)))))))))))))))
  (ERROR
    (user_type_identifier)
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED '_')
    (int_number)
    (int_number)
    (UNEXPECTED 'i')
    (UNEXPECTED '_')
    (int_number)
    (int_number)
    (UNEXPECTED 'e')
    (UNEXPECTED '_')
    (int_number)
    (UNEXPECTED 'e')
    (UNEXPECTED '_')
    (int_number)
    (int_number)))

================================================================================
grid
================================================================================

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    layout := GridLayout {
        spacing: 0phx;
        padding: 0phx;
        Row {
            rect1 := Rectangle {
                background: red;
                rowspan: 1;
            }
            rect2 := Rectangle {
                background: blue;
            }
        }

        Row {
            rect3 := Rectangle {
                background: green;
            }
        }
    }

    property <bool> rect1_pos_ok: rect1.x == 0phx && rect1.y == 0phx && rect1.width == 150phx && rect1.height == 150phx;
    property <bool> rect2_pos_ok: rect2.x == 150phx && rect2.y == 0phx && rect2.width == 150phx && rect2.height == 150phx;
    property <bool> rect3_pos_ok: rect3.x == 0phx && rect3.y == 150phx && rect3.width == 150phx && rect3.height == 150phx;
    property <length> layout_width: layout.width;
}

/*




// FIXME! interpreter test


*/
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier)))))))
  (comment))

================================================================================
grid2
================================================================================

TestCase := Window {
    width: 200phx;
    height: 500phx;

    layout := GridLayout {
        spacing: 0phx;
        padding: 0phx;
        Row { }
        Row {
            rect1 := Rectangle { background: red; }
            rect2 := Rectangle { background: orange; }
        }
        rect3 := Rectangle { background: blue; }
        rect4 := Rectangle { background: yellow; }
        Row {
            rect5 := Rectangle { background: green; }
            rect6 := Rectangle { background: pink; }
        }
        Row { }
        rect7 := Rectangle { background: gray; }
        rect8 := Rectangle { background: cyan; }
        Row { }
        rect9 := Rectangle { background: magenta; }
        rect10 := Rectangle { background: purple; }
    }

    // there should be 5 rows
    property <bool> size_ok:
        rect1.width == 100phx && rect1.height == 100phx &&
        rect2.width == 100phx && rect2.height == 100phx &&
        rect3.width == 100phx && rect3.height == 100phx &&
        rect4.width == 100phx && rect4.height == 100phx &&
        rect5.width == 100phx && rect5.height == 100phx &&
        rect6.width == 100phx && rect6.height == 100phx &&
        rect7.width == 100phx && rect7.height == 100phx &&
        rect8.width == 100phx && rect8.height == 100phx &&
        rect9.width == 100phx && rect9.height == 100phx &&
        rect10.width == 100phx && rect10.height == 100phx;
    property <bool> x_ok:
        rect1.x == 0phx && rect2.x == 100phx &&
        rect3.x == 0phx && rect4.x == 100phx &&
        rect5.x == 0phx && rect6.x == 100phx &&
        rect7.x == 0phx && rect8.x == 100phx &&
        rect9.x == 0phx && rect10.x == 100phx;

    property <bool> y_ok:
        rect1.y == 0phx && rect2.y == 0phx &&
        rect3.y == 100phx && rect4.y == 100phx &&
        rect5.y == 200phx && rect6.y == 200phx &&
        rect7.y == 300phx && rect8.y == 300phx &&
        rect9.y == 400phx && rect9.y == 400phx;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body)))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))))))))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body)))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier)))))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier)))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body)))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier)))))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))))))))
        (comment)
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (mult_binary_expression
                        (mult_binary_expression
                          (mult_binary_expression
                            (mult_binary_expression
                              (mult_binary_expression
                                (mult_binary_expression
                                  (mult_binary_expression
                                    (mult_binary_expression
                                      (mult_binary_expression
                                        (mult_binary_expression
                                          (mult_binary_expression
                                            (mult_binary_expression
                                              (mult_binary_expression
                                                (mult_binary_expression
                                                  (var_identifier
                                                    (ERROR
                                                      (int_number))
                                                    (post_identifier))
                                                  (ERROR
                                                    (int_number)
                                                    (UNEXPECTED 'x'))
                                                  (mult_prec_operator)
                                                  (var_identifier
                                                    (ERROR
                                                      (int_number))
                                                    (post_identifier)))
                                                (ERROR
                                                  (int_number)
                                                  (UNEXPECTED 'x'))
                                                (mult_prec_operator)
                                                (var_identifier
                                                  (ERROR
                                                    (int_number))
                                                  (post_identifier)))
                                              (ERROR
                                                (int_number)
                                                (UNEXPECTED 'x'))
                                              (mult_prec_operator)
                                              (var_identifier
                                                (ERROR
                                                  (int_number))
                                                (post_identifier)))
                                            (ERROR
                                              (int_number)
                                              (UNEXPECTED 'x'))
                                            (mult_prec_operator)
                                            (var_identifier
                                              (ERROR
                                                (int_number))
                                              (post_identifier)))
                                          (ERROR
                                            (int_number)
                                            (UNEXPECTED 'x'))
                                          (mult_prec_operator)
                                          (var_identifier
                                            (ERROR
                                              (int_number))
                                            (post_identifier)))
                                        (ERROR
                                          (int_number)
                                          (UNEXPECTED 'x'))
                                        (mult_prec_operator)
                                        (var_identifier
                                          (ERROR
                                            (int_number))
                                          (post_identifier)))
                                      (ERROR
                                        (int_number)
                                        (UNEXPECTED 'x'))
                                      (mult_prec_operator)
                                      (var_identifier
                                        (ERROR
                                          (int_number))
                                        (post_identifier)))
                                    (ERROR
                                      (int_number)
                                      (UNEXPECTED 'x'))
                                    (mult_prec_operator)
                                    (var_identifier
                                      (ERROR
                                        (int_number))
                                      (post_identifier)))
                                  (ERROR
                                    (int_number)
                                    (UNEXPECTED 'x'))
                                  (mult_prec_operator)
                                  (var_identifier
                                    (ERROR
                                      (int_number))
                                    (post_identifier)))
                                (ERROR
                                  (int_number)
                                  (UNEXPECTED 'x'))
                                (mult_prec_operator)
                                (var_identifier
                                  (ERROR
                                    (int_number))
                                  (post_identifier)))
                              (ERROR
                                (int_number)
                                (UNEXPECTED 'x'))
                              (mult_prec_operator)
                              (var_identifier
                                (ERROR
                                  (int_number))
                                (post_identifier)))
                            (ERROR
                              (int_number)
                              (UNEXPECTED 'x'))
                            (mult_prec_operator)
                            (var_identifier
                              (ERROR
                                (int_number))
                              (post_identifier)))
                          (ERROR
                            (int_number)
                            (UNEXPECTED 'x'))
                          (mult_prec_operator)
                          (var_identifier
                            (ERROR
                              (int_number))
                            (post_identifier)))
                        (ERROR
                          (int_number)
                          (UNEXPECTED 'x'))
                        (mult_prec_operator)
                        (var_identifier
                          (ERROR
                            (int_number))
                          (post_identifier)))
                      (ERROR
                        (int_number)
                        (UNEXPECTED 'x'))
                      (mult_prec_operator)
                      (var_identifier
                        (ERROR
                          (int_number))
                        (post_identifier)))
                    (ERROR
                      (int_number)
                      (UNEXPECTED 'x'))
                    (mult_prec_operator)
                    (var_identifier
                      (ERROR
                        (int_number))
                      (post_identifier)))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (ERROR
                  (int_number))
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (mult_binary_expression
                        (mult_binary_expression
                          (mult_binary_expression
                            (mult_binary_expression
                              (var_identifier
                                (ERROR
                                  (int_number))
                                (post_identifier))
                              (ERROR
                                (int_number)
                                (UNEXPECTED 'x'))
                              (mult_prec_operator)
                              (var_identifier
                                (ERROR
                                  (int_number))
                                (post_identifier)))
                            (ERROR
                              (int_number)
                              (UNEXPECTED 'x'))
                            (mult_prec_operator)
                            (var_identifier
                              (ERROR
                                (int_number))
                              (post_identifier)))
                          (ERROR
                            (int_number)
                            (UNEXPECTED 'x'))
                          (mult_prec_operator)
                          (var_identifier
                            (ERROR
                              (int_number))
                            (post_identifier)))
                        (ERROR
                          (int_number)
                          (UNEXPECTED 'x'))
                        (mult_prec_operator)
                        (var_identifier
                          (ERROR
                            (int_number))
                          (post_identifier)))
                      (ERROR
                        (int_number)
                        (UNEXPECTED 'x'))
                      (mult_prec_operator)
                      (var_identifier
                        (ERROR
                          (int_number))
                        (post_identifier)))
                    (ERROR
                      (int_number)
                      (UNEXPECTED 'x'))
                    (mult_prec_operator)
                    (var_identifier
                      (ERROR
                        (int_number))
                      (post_identifier)))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (ERROR
                  (int_number))
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (mult_binary_expression
                        (mult_binary_expression
                          (mult_binary_expression
                            (mult_binary_expression
                              (var_identifier
                                (ERROR
                                  (int_number))
                                (post_identifier))
                              (ERROR
                                (int_number)
                                (UNEXPECTED 'x'))
                              (mult_prec_operator)
                              (var_identifier
                                (ERROR
                                  (int_number))
                                (post_identifier)))
                            (ERROR
                              (int_number)
                              (UNEXPECTED 'x'))
                            (mult_prec_operator)
                            (var_identifier
                              (ERROR
                                (int_number))
                              (post_identifier)))
                          (ERROR
                            (int_number)
                            (UNEXPECTED 'x'))
                          (mult_prec_operator)
                          (var_identifier
                            (ERROR
                              (int_number))
                            (post_identifier)))
                        (ERROR
                          (int_number)
                          (UNEXPECTED 'x'))
                        (mult_prec_operator)
                        (var_identifier
                          (ERROR
                            (int_number))
                          (post_identifier)))
                      (ERROR
                        (int_number)
                        (UNEXPECTED 'x'))
                      (mult_prec_operator)
                      (var_identifier
                        (ERROR
                          (int_number))
                        (post_identifier)))
                    (ERROR
                      (int_number)
                      (UNEXPECTED 'x'))
                    (mult_prec_operator)
                    (var_identifier
                      (ERROR
                        (int_number))
                      (post_identifier)))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (ERROR
                  (int_number))
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))))))

================================================================================
grid_min_max
================================================================================

// Test the maximum and minimum size within a grid layout

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    GridLayout {
        padding: 0phx;
        spacing: 1phx;
        Row {
            rect1 := Rectangle {
                background: red;
                min_width: 50phx;
                min_height: 20phx;
                max_height: 20phx;

            }
            rect2 := Rectangle {
                background: blue;
            }
        }

        Row {
            rect3 := Rectangle {
                background: green;
                max_width: 60phx;
            }
            rect4 := Rectangle {
                background: red;
            }
            rect5 := Rectangle {
                background: black;
                max_width: 100phx;
            }
        }
    }

    property <bool> rect1_pos_ok: rect1.x == 0phx && rect1.y == 0phx && rect1.width == 60phx && rect1.height == 20phx;
    property <bool> rect2_pos_ok: rect2.x == 61phx && rect2.y == 0phx && rect2.width == 138phx && rect2.height == 20phx;
    property <bool> rect3_pos_ok: rect3.x == 0phx && rect3.y == 21phx && rect3.width == 60phx && rect3.height == 279phx;
}

/*




// FIXME:: interpreter test


*/
--------------------------------------------------------------------------------

(source_file
  (comment)
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x'))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x'))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x'))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x'))))))
  (comment))

================================================================================
grid_padding
================================================================================

TestCase := Rectangle {
    width: 600phx;
    height: 300phx;

    Rectangle {
        width: 300phx;
        height: 300phx;
        border_color: black;
        border_width: 2px;
        GridLayout {
            padding_top: 10phx;
            padding_left: 20phx;
            padding_right: 30phx;
            padding_bottom: 40phx;
            Row {
                rect1 := Rectangle {
                    background: red;
                }
            }
        }
    }

    Rectangle {
        width: 300phx;
        height: 300phx;
        x: 300phx;
        border_color: black;
        border_width: 2px;

        GridLayout {
            spacing: 1000phx;
            padding: 25phx;
            padding_left: 20phx;
            padding_right: 30phx;
            Row {
                rect2 := Rectangle {
                    background: blue;
                }
            }
        }
    }

    property <bool> rect1_pos_ok: rect1.x == 20phx && rect1.y == 10phx && rect1.width == 250phx && rect1.height == 250phx;
    property <bool> rect2_pos_ok: rect2.x == 20phx && rect2.y == 25phx && rect2.width == 250phx && rect2.height == 250phx;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (language_constant)))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant)))))))))))))))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (language_constant)))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant)))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))))))

================================================================================
grid_preferred_size
================================================================================

TestCase := Rectangle {
    background: green;
    width: 300phx;
    height: 50phx;

    GridLayout {
        padding: 0px;
        spacing: 0px;
        fake-image := Rectangle {
            background: blue;
            preferred-width: 25phx;
            // Don't apply the preferred height for the horizontal layout.
            preferred-height: 500phx;
            horizontal-stretch: 0;
            vertical-stretch: 0;
        }
        Rectangle {
            background: green;
            // implicit: horizontal-stretch: 1
        }
        Rectangle {
            row: 1;
            background: red;
            // implicit: horizontal-stretch: 1
        }
    }

    property <bool> fake-image-width-ok: fake-image.width == 25phx;
    property <bool> fake-image-height-ok: fake-image.height == 50phx;

    property <bool> test: fake-image-width-ok && fake-image-height-ok;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (language_constant)))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (comment)
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))
                  (comment)))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))
                  (comment))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier)
              (mult_prec_operator)
              (var_identifier))))))))

================================================================================
grid_span
================================================================================

TestCase := Window {
    width: 400phx;
    height: 400phx;

    GridLayout {
        spacing: 10phx;
        padding: 50phx;

        rr := Rectangle {
            background: red;
            row: 0; col: 0;
            colspan: 2;
            max_width: 30phx;
        }
        rb := Rectangle {
            background: blue;
            row: 2; col: 1;
            colspan: 2;
            max_width: 40phx;
        }
        rg := Rectangle {
            background: green;
            row: 3; col: 1;
            horizontal_stretch: 0;
            preferred_width: 20phx;
        }
        ry := Rectangle {
            background: yellow;
            min_height: 200phx;
            col: 3;
            row: 0;
            rowspan: 2;
            horizontal_stretch: 0;
            vertical_stretch: 0;
        }
    }

    property <bool> test: {
        rr.x == 50phx && rr.y == 50phx && rr.width == 30phx && rr.height == (200phx - 10phx) / 2 &&
        rb.width == 40phx && rg.width == 20phx && rg.height == (400phx - 200phx - 100phx - 20phx) / 2
    }

}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x'))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x'))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x'))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))))))))))
      (ERROR
        (builtin_type_identifier)
        (var_identifier)
        (ERROR
          (UNEXPECTED 'r')
          (UNEXPECTED 'x')
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x'))
          (mult_prec_operator)
          (function_identifier)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x'))
          (mult_prec_operator)
          (function_identifier)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x'))
          (mult_prec_operator)
          (function_identifier)
          (mult_binary_expression
            (expression_body_paren
              (add_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (add_prec_operator)
                (value
                  (number
                    (int_number))))
              (ERROR
                (UNEXPECTED 'x')))
            (mult_prec_operator)
            (value
              (number
                (int_number))))
          (mult_prec_operator)
          (function_identifier)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x'))
          (mult_prec_operator)
          (function_identifier)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x'))
          (mult_prec_operator)
          (function_identifier))
        (property_expr
          (mult_binary_expression
            (expression_body_paren
              (add_binary_expression
                (add_binary_expression
                  (add_binary_expression
                    (value
                      (number
                        (int_number)))
                    (ERROR
                      (UNEXPECTED 'x'))
                    (add_prec_operator)
                    (value
                      (number
                        (int_number))))
                  (ERROR
                    (UNEXPECTED 'x'))
                  (add_prec_operator)
                  (value
                    (number
                      (int_number))))
                (ERROR
                  (UNEXPECTED 'x'))
                (add_prec_operator)
                (value
                  (number
                    (int_number))))
              (ERROR
                (UNEXPECTED 'x')))
            (mult_prec_operator)
            (value
              (number
                (int_number)))))))))

================================================================================
height_for_width
================================================================================

//include_path: ../../../examples/printerdemo/ui/images/
TestCase := Rectangle {
    width: 500phx;
    height: 2000phx;

    VerticalLayout {
        padding: 0px;
        spacing: 0px;
        top_image := Image {
            source: @image-url("cat.jpg");
        }
        HorizontalLayout {
            padding: 0px;
            spacing: 0px;
            Rectangle {
                background: yellow;
                width: 300phx;
            }
            second_image := Image {
                source: @image-url("cat.jpg");
            }
        }
        Rectangle {
            background: pink;
            GridLayout {
                spacing: 0;
                padding: 0;
                Row {
                    Rectangle { }
                }
                Row {
                    hfw_rect := Rectangle {
                        background: orange;
                        height: width / 2;
                    }
                    Rectangle { }
                }
            }
        }
        Image { }
    }

    property <length> top_image_height: top_image.height;
    property <length> second_image_height: second_image.height;
    property <length> second_image_width: second_image.width;
    property <bool> hfw_rect_ok: hfw_rect.width == 250phx && hfw_rect.height == 125phx;
    property <bool> test: top_image_height == 750phx && second_image_width == 200phx && second_image_height == 300phx && hfw_rect_ok;
}

--------------------------------------------------------------------------------

(source_file
  (comment)
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (function_call
                        (function_identifier)
                        (call_signature
                          (formal_parameters
                            (formal_parameter
                              (string
                                (string_fragment))))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x'))))))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (function_call
                              (function_identifier)
                              (call_signature
                                (formal_parameters
                                  (formal_parameter
                                    (string
                                      (string_fragment)))))))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number))))
                          (component_definition
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (component_definition
                                  (user_type_identifier)
                                  (field_declaration_list
                                    (field_declaration_list_body))))))
                          (component_definition
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (component_definition
                                  (user_type_identifier)
                                  (user_type_identifier)
                                  (field_declaration_list
                                    (field_declaration_list_body
                                      (variable_set_equal
                                        (var_identifier)
                                        (assignment_prec_operator)
                                        (var_identifier))
                                      (variable_set_equal
                                        (var_identifier)
                                        (assignment_prec_operator)
                                        (mult_binary_expression
                                          (var_identifier)
                                          (mult_prec_operator)
                                          (value
                                            (number
                                              (int_number))))))))
                                (component_definition
                                  (user_type_identifier)
                                  (field_declaration_list
                                    (field_declaration_list_body))))))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (ERROR)
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (value
                    (number
                      (int_number)))
                  (ERROR
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (ERROR)
                  (value
                    (number
                      (int_number))))
                (ERROR
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (ERROR)
                (value
                  (number
                    (int_number))))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier))))))))

================================================================================
horizontal_sizes
================================================================================

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    VerticalLayout {
        spacing: 0phx;
        padding: 0phx;
        HorizontalLayout {
            spacing: 0phx;
            padding: 0phx;
            blue-rect := Rectangle {
                background: blue;
                height: 100phx;
                min-width: 100phx;
                horizontal-stretch: 0;
            }
            red-rect := Rectangle {
                width: 50px;
                background: red;
                min-height: 50phx;
            }
            green-rect := Rectangle {
                background: green;
                max-width: 20phx;
                horizontal-stretch: 2;
            }
            orange-rect := Rectangle {
                background: orange;
                width: 10phx;
                horizontal-stretch: 8;
            }
            yellow-rect := Rectangle {
                background: yellow;
                max-width: 200phx;
                horizontal-stretch: 1;
            }
            pink-rect := Rectangle {
                background: pink;
                horizontal-stretch: 2;
                max-height: 9000phx;
            }


        }
        black-rect := Rectangle {
            background: black;
        }
    }

    property <bool> blue_rect_ok: blue-rect.x == 0phx && blue-rect.y == 0phx && blue-rect.width == 100phx && blue-rect.height == 100phx;
    property <bool> red_rect_ok: red-rect.x == 100phx && red-rect.y == 0phx && red-rect.width == 50phx && red-rect.height == 100phx;
    property <bool> green_rect_ok: green-rect.x == 150phx && green-rect.y == 0phx && green-rect.width == 20phx && green-rect.height == 100phx;
    property <bool> orange_rect_ok: orange-rect.x == 170phx && orange-rect.y == 0phx && orange-rect.width == 10phx && orange-rect.height == 100phx;
    property <bool> yellow_rect_ok: yellow-rect.x == 180phx && yellow-rect.y == 0phx && yellow-rect.width == 120phx/3 && yellow-rect.height == 100phx;
    property <bool> pink_rect_ok: pink-rect.x == 180phx + yellow-rect.width && pink-rect.y == 0phx && pink-rect.width == 120phx*2/3 && pink-rect.height == 100phx;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))))))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x'))))))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))))))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))))))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))))))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (var_identifier
                      (post_identifier))
                    (ERROR
                      (int_number)
                      (UNEXPECTED 'x'))
                    (mult_prec_operator)
                    (var_identifier
                      (post_identifier)))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (value
                  (number
                    (int_number))))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (add_binary_expression
              (var_identifier
                (post_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (add_prec_operator)
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (mult_binary_expression
                        (var_identifier
                          (post_identifier))
                        (mult_prec_operator)
                        (var_identifier
                          (post_identifier)))
                      (ERROR
                        (int_number)
                        (UNEXPECTED 'x'))
                      (mult_prec_operator)
                      (var_identifier
                        (post_identifier)))
                    (ERROR
                      (int_number)
                      (UNEXPECTED 'x'))
                    (mult_prec_operator)
                    (value
                      (number
                        (int_number))))
                  (mult_prec_operator)
                  (value
                    (number
                      (int_number))))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))))))

================================================================================
issue_407_for_layout_in_flickable
================================================================================

export Testcase := Window {
    preferred-width: 640px;
    preferred-height: 480px;
    f := Flickable {
        for blah in 1: HorizontalLayout {
            Rectangle { height: 55px; }
        }
    }

    VerticalLayout {
        r := Rectangle {
            for blah in 1: HorizontalLayout {
                Rectangle { height: 44px; }
            }
        }
    }

    // FIXME(#407)
    //property <bool> test: f.preferred-height == 55px && f.viewport-height == 55px && r.preferred-height == 44px;
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (visibility_modifier)
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (ERROR
            (var_identifier)
            (int_number)
            (UNEXPECTED 'H'))
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type)))))))))))))
  (component_definition
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (ERROR
            (var_identifier)
            (int_number)
            (UNEXPECTED 'H'))
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type)))))))))))))
  (ERROR
    (comment)
    (comment)))

================================================================================
issue_553_materialized_init
================================================================================

// Test the propagation of maximum and minimum size through nested grid layouts

TestCase := Rectangle {
    min-width: 500px;
    max-width: min-width;

    property xxx <=> preferred-height;
    HorizontalLayout {
        Rectangle { height: 88px; }
    }

    property <bool> test: min-width == 500px && max-width == 500px && xxx == 88px;
}

--------------------------------------------------------------------------------

(source_file
  (comment)
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (ERROR
      (variable_set_equal
        (var_identifier)
        (assignment_prec_operator)
        (value
          (value_with_units
            (number
              (int_number))
            (unit_type))))
      (variable_set_equal
        (var_identifier)
        (assignment_prec_operator)
        (var_identifier))
      (UNEXPECTED 'x')
      (UNEXPECTED 'e')
      (UNEXPECTED 'h')
      (UNEXPECTED 'H'))
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))))))))
  (ERROR
    (user_type_identifier)
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED 'i')
    (int_number)
    (UNEXPECTED 'a')
    (UNEXPECTED 'i')
    (int_number)
    (UNEXPECTED 'x')
    (int_number)))

================================================================================
nested_boxes
================================================================================

RectRed := Rectangle {
    background: red;
    min_width: 200phx;
    horizontal-stretch: 0;
    HorizontalLayout {
        spacing: 10px;
        padding: 0phx;
        rect_green := Rectangle {
            background: green;
            max_width: 50phx;
            max_height: 50phx;
        }
        rect_pink := Rectangle {
            background: pink;
        }
    }

    property <bool> rect_green_ok:
        rect_green.x == 0phx &&
        rect_green.y == 0phx &&
        rect_green.width == 50phx &&
        rect_green.height == 50phx;
    property <bool> rect_pink_ok:
        rect_pink.x == 60phx &&
        rect_pink.y == 0phx &&
        rect_pink.width == 140phx &&
        rect_pink.height == 50phx;
}

RedBlue := HorizontalLayout {
    spacing: 0phx;
    padding: 0phx;

    rect_red := RectRed {}
    rect_blue := Rectangle {
        horizontal-stretch: 1;
        background: blue;
    }

    property rect_green_ok <=> rect_red.rect_green_ok;
    property rect_pink_ok <=> rect_red.rect_pink_ok;

    property <bool> rect_blue_ok:
        rect_blue.x == 200phx &&
        rect_blue.y == 0phx &&
        rect_blue.width == 100phx &&
        rect_blue.height == 50phx;
    property <bool> rect_red_ok:
        rect_red.x == 0phx &&
        rect_red.y == 0phx &&
        rect_red.width == 200phx &&
        rect_red.height == 50phx;
}

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    VerticalLayout {
        spacing: 0phx;
        padding: 0phx;

        rect_orange := Rectangle {
            background: orange;
            max_height: 10phx;
        }
        hl_redblue := RedBlue {}
        rect_yellow := Rectangle {
            background: yellow;
            HorizontalLayout {
                padding-top: 2phx;
                padding-bottom: 4phx;
                spacing: 2phx;
                padding-left: 8phx;
                padding-right: 10phx;
                vl1 := VerticalLayout {
                    spacing: 5phx;
                    padding-top: 5phx;
                    padding-bottom: 0phx;
                    padding-left: 0phx;
                    padding-right: 0phx;
                    rect_black1 := Rectangle {
                        background: black;
                    }
                    rect_white1 := Rectangle {
                        background: white;
                    }
                }
                vl2 := VerticalLayout {
                    spacing: 5phx;
                    padding-bottom: 5phx;
                    padding-top: 0phx;
                    padding-left: 0phx;
                    padding-right: 0phx;
                    rect_black2 := Rectangle {
                        background: black;
                    }
                    rect_white2 := Rectangle {
                        background: white;
                    }
                }
            }
        }

        // This item should be empty
        VerticalLayout {
            if (false) : Rectangle { background: #858; }
        }
    }

    property <bool> rect_orange_ok:
        rect_orange.x == 0phx &&
        rect_orange.y == 0phx &&
        rect_orange.width == 300phx &&
        rect_orange.height == 10phx;
    property <bool> rect_blue_ok:
        hl_redblue.y == 10phx && hl-redblue.rect-blue-ok;
    property <bool> rect_red_ok:
        hl_redblue.y == 10phx && hl-redblue.rect-red-ok;
    property <bool> rect_yellow_ok:
        rect_yellow.x == 0phx &&
        rect_yellow.y == 60phx &&
        rect_yellow.width == 300phx &&
        rect_yellow.height == 240phx;
    property <bool> rect_black1_ok:
        rect_black1.x + vl1.x == 8phx &&
        rect_black1.y + vl1.y == 1phx * (2 + 5) &&
        rect_black1.width == 1phx * (300 - 18 - 2)/2 &&
        rect_black1.height == 1phx * (240 - 6 - 10)/2 ;
    property <bool> rect_black2_ok:
        rect_black2.x + vl2.x == 300phx - 1phx * (300 - 20) / 2 - 10phx &&
        rect_black2.y + vl2.y == 2phx &&
        rect_black2.width == 1phx * (300 - 18 - 2)/2 &&
        rect_black2.height == 1phx * (240 - 6 - 10)/2 ;

    property rect_green_ok <=> hl_redblue.rect_green_ok;
    property rect_pink_ok <=> hl_redblue.rect_pink_ok;

    property <bool> test: rect_orange_ok && rect_blue_ok && rect_red_ok && rect_green_ok && rect_pink_ok && rect_yellow_ok && rect_black1_ok && rect_black2_ok;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (language_constant)))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number))))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x'))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x'))))))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body)))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (language_constant))))))
        (ERROR
          (UNEXPECTED 'c')
          (UNEXPECTED '_')
          (UNEXPECTED 'c')
          (UNEXPECTED 'c')
          (UNEXPECTED '_')
          (UNEXPECTED 'c')
          (UNEXPECTED 'k')
          (UNEXPECTED 'c')
          (UNEXPECTED 'c')
          (UNEXPECTED 'k'))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x'))))))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x'))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body)))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (component_definition
                                  (user_type_identifier)
                                  (ERROR
                                    (int_number))
                                  (user_type_identifier)
                                  (field_declaration_list
                                    (field_declaration_list_body
                                      (variable_set_equal
                                        (var_identifier)
                                        (assignment_prec_operator)
                                        (value
                                          (language_constant))))))
                                (component_definition
                                  (user_type_identifier)
                                  (ERROR
                                    (int_number))
                                  (user_type_identifier)
                                  (field_declaration_list
                                    (field_declaration_list_body
                                      (variable_set_equal
                                        (var_identifier)
                                        (assignment_prec_operator)
                                        (var_identifier))))))))
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (component_definition
                                  (user_type_identifier)
                                  (ERROR
                                    (int_number))
                                  (user_type_identifier)
                                  (field_declaration_list
                                    (field_declaration_list_body
                                      (variable_set_equal
                                        (var_identifier)
                                        (assignment_prec_operator)
                                        (value
                                          (language_constant))))))
                                (component_definition
                                  (user_type_identifier)
                                  (ERROR
                                    (int_number))
                                  (user_type_identifier)
                                  (field_declaration_list
                                    (field_declaration_list_body
                                      (variable_set_equal
                                        (var_identifier)
                                        (assignment_prec_operator)
                                        (var_identifier))))))))))))))
              (comment)
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (if_statement_definition
                      (expression_body_paren
                        (value
                          (language_constant)))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (variable_set_equal
                              (var_identifier)
                              (assignment_prec_operator)
                              (value
                                (color)))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier)))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier)))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number)
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier))))
          (ERROR
            (int_number)
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (var_identifier
              (ERROR
                (int_number))
              (post_identifier))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (ERROR
                  (int_number))
                (post_identifier)))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (expression_body_paren
                (add_binary_expression
                  (value
                    (number
                      (int_number)))
                  (add_prec_operator)
                  (value
                    (number
                      (int_number))))))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (mult_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (expression_body_paren
                  (add_binary_expression
                    (add_binary_expression
                      (value
                        (number
                          (int_number)))
                      (add_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (add_prec_operator)
                    (value
                      (number
                        (int_number))))))
              (mult_prec_operator)
              (value
                (number
                  (int_number))))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (expression_body_paren
                  (add_binary_expression
                    (add_binary_expression
                      (value
                        (number
                          (int_number)))
                      (add_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (add_prec_operator)
                    (value
                      (number
                        (int_number))))))
              (mult_prec_operator)
              (value
                (number
                  (int_number))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (var_identifier
              (ERROR
                (int_number))
              (post_identifier))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (add_binary_expression
              (add_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (add_prec_operator)
                (mult_binary_expression
                  (mult_binary_expression
                    (value
                      (number
                        (int_number)))
                    (ERROR
                      (UNEXPECTED 'x'))
                    (mult_prec_operator)
                    (expression_body_paren
                      (add_binary_expression
                        (value
                          (number
                            (int_number)))
                        (add_prec_operator)
                        (value
                          (number
                            (int_number))))))
                  (mult_prec_operator)
                  (value
                    (number
                      (int_number)))))
              (add_prec_operator)
              (mult_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier))))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (mult_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (expression_body_paren
                  (add_binary_expression
                    (add_binary_expression
                      (value
                        (number
                          (int_number)))
                      (add_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (add_prec_operator)
                    (value
                      (number
                        (int_number))))))
              (mult_prec_operator)
              (value
                (number
                  (int_number))))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (expression_body_paren
                  (add_binary_expression
                    (add_binary_expression
                      (value
                        (number
                          (int_number)))
                      (add_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (add_prec_operator)
                    (value
                      (number
                        (int_number))))))
              (mult_prec_operator)
              (value
                (number
                  (int_number))))))
        (ERROR
          (UNEXPECTED 'c')
          (UNEXPECTED '_')
          (UNEXPECTED 'h')
          (UNEXPECTED 'c')
          (UNEXPECTED '_')
          (UNEXPECTED 'c')
          (UNEXPECTED 'k')
          (UNEXPECTED 'h')
          (UNEXPECTED 'c')
          (UNEXPECTED 'k'))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (mult_binary_expression
                        (mult_binary_expression
                          (var_identifier)
                          (mult_prec_operator)
                          (var_identifier))
                        (mult_prec_operator)
                        (var_identifier))
                      (mult_prec_operator)
                      (var_identifier))
                    (mult_prec_operator)
                    (var_identifier))
                  (mult_prec_operator)
                  (var_identifier))
                (mult_prec_operator)
                (var_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED '_'))
              (mult_prec_operator)
              (var_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED '_')))))))

================================================================================
nested_grid
================================================================================

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    GridLayout {
        spacing: 0phx;
        padding: 0phx;

        Row {
            rect1 := Rectangle { background: red; horizontal-stretch: 2;}
        }

        Row {
            rect2 := Rectangle { background: green; horizontal-stretch: 2; }
            ig := GridLayout {
                spacing: 4phx;
                padding: 0phx;
                rect3 := Rectangle { background: black; }
                rect4 := Rectangle { background: blue; }
                rect5 := Rectangle { background: red; row: 1; }
                rect6 := Rectangle { background: green; }
            }
        }
    }

    property <bool> rect1_pos_ok: rect1.x == 0phx && rect1.y == 0phx && rect1.width == 148phx && rect1.height == 148phx;
    property <bool> rect2_pos_ok: rect2.x == 0phx && rect2.y == 148phx && rect2.width == 148phx && rect2.height == 152phx;
    property <bool> rect3_pos_ok: ig.x + rect3.x == 148phx && ig.y + rect3.y == 148phx && rect3.width == 74phx && rect3.height == 74phx;
    property <bool> rect4_pos_ok: ig.x + rect4.x == 226phx && ig.y + rect4.y == 148phx && rect4.width == 74phx && rect4.height == 74phx;
    property <bool> rect5_pos_ok: ig.x + rect5.x == 148phx && ig.y + rect5.y == 226phx && rect5.width == 74phx && rect5.height == 74phx;
    property <bool> rect6_pos_ok: ig.x + rect6.x == 226phx && ig.y + rect6.y == 226phx && rect6.width == 74phx && rect6.height == 74phx;

    property <bool> test: rect1_pos_ok && rect2_pos_ok && rect3_pos_ok && rect4_pos_ok && rect5_pos_ok && rect6_pos_ok;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number))))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))))))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant))))))
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant))))))
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant)))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))))))
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant)))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (var_identifier
              (post_identifier))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier)))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (var_identifier
              (post_identifier))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier)))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (var_identifier
              (post_identifier))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier)))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (var_identifier
              (post_identifier))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (var_identifier
                (post_identifier)))
            (add_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (var_identifier)
                      (ERROR
                        (int_number)
                        (UNEXPECTED '_'))
                      (mult_prec_operator)
                      (var_identifier))
                    (ERROR
                      (int_number)
                      (UNEXPECTED '_'))
                    (mult_prec_operator)
                    (var_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED '_'))
                  (mult_prec_operator)
                  (var_identifier))
                (ERROR
                  (int_number)
                  (UNEXPECTED '_'))
                (mult_prec_operator)
                (var_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED '_'))
              (mult_prec_operator)
              (var_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED '_')))))))

================================================================================
nested_grid_2
================================================================================

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    GridLayout {
        padding: 0phx;
        spacing: 0phx;

        Row {
            Rectangle {
                background: orange;
            }
        }
        Row {
            rect1 := Rectangle {
                background: red;
                GridLayout {
                    padding: 0phx;
                    spacing: 10px;
                    Row {
                        rect2 := Rectangle {
                            background: green;
                            max_width: 50phx;
                            max_height: 50phx;
                        }
                        rect3 := Rectangle {
                            background: black;
                        }
                    }
                }
            }
            rect4 := Rectangle {
                background: blue;
            }
        }
    }

    property <bool> rect1_pos_ok: rect1.x == 0phx && rect1.y == 250phx && rect1.width == 155phx && rect1.height == 50phx;
    property <bool> rect2_pos_ok: rect2.x == 0phx && rect2.y == 0phx && rect2.width == 50phx && rect2.height == 50phx;
    property <bool> rect3_pos_ok: rect3.x == 60phx && rect3.y == 0phx && rect3.width == 95phx && rect3.height == 50phx;
    property <bool> rect4_pos_ok: rect4.x == 155phx && rect4.y == 250phx && rect4.width == 145phx && rect4.height == 50phx;

    property <bool> test: rect1_pos_ok && rect2_pos_ok && rect3_pos_ok && rect4_pos_ok;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (component_definition
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (value_with_units
                                      (number
                                        (int_number))
                                      (unit_type))))
                                (component_definition
                                  (user_type_identifier)
                                  (field_declaration_list
                                    (field_declaration_list_body
                                      (component_definition
                                        (user_type_identifier)
                                        (ERROR
                                          (int_number))
                                        (user_type_identifier)
                                        (field_declaration_list
                                          (field_declaration_list_body
                                            (variable_set_equal
                                              (var_identifier)
                                              (assignment_prec_operator)
                                              (value
                                                (language_constant)))
                                            (variable_set_equal
                                              (var_identifier)
                                              (assignment_prec_operator)
                                              (value
                                                (number
                                                  (int_number)))
                                              (ERROR
                                                (UNEXPECTED 'x')))
                                            (variable_set_equal
                                              (var_identifier)
                                              (assignment_prec_operator)
                                              (value
                                                (number
                                                  (int_number)))
                                              (ERROR
                                                (UNEXPECTED 'x'))))))
                                      (component_definition
                                        (user_type_identifier)
                                        (ERROR
                                          (int_number))
                                        (user_type_identifier)
                                        (field_declaration_list
                                          (field_declaration_list_body
                                            (variable_set_equal
                                              (var_identifier)
                                              (assignment_prec_operator)
                                              (value
                                                (language_constant)))))))))))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier)
                  (ERROR
                    (int_number)
                    (UNEXPECTED '_'))
                  (mult_prec_operator)
                  (var_identifier))
                (ERROR
                  (int_number)
                  (UNEXPECTED '_'))
                (mult_prec_operator)
                (var_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED '_'))
              (mult_prec_operator)
              (var_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED '_')))))))

================================================================================
nested_grid_minmax
================================================================================

// Test the propagation of maximum and minimum size through nested grid layouts

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    GridLayout {
        spacing: 0phx;
        padding: 0phx;
        Row {
            GridLayout {
                spacing: 0phx;
                padding: 0phx;
                rect1 := Rectangle {
                    background: red;
                    max_width: 50phx;
                    min_height: 20phx;
                    max_height: 20phx;
                }
                rect2 := Rectangle {
                    row: 0;
                    col: 1;
                    background: blue;
                }
            }
        }
    }

    property <bool> rect1_pos_ok: rect1.x == 0phx && rect1.y == 0phx && rect1.width == 50phx && rect1.height == 20phx;
    property <bool> rect2_pos_ok: rect2.x == 50phx && rect2.y == 0phx && rect2.width == 250phx && rect2.height == 20phx;
}

/*




// FIXME:: interpreter test


*/
--------------------------------------------------------------------------------

(source_file
  (comment)
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant)))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x')))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x'))))))
                          (component_definition
                            (user_type_identifier)
                            (ERROR
                              (int_number))
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number))))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number))))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant)))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x'))))))
  (comment))

================================================================================
opacity_in_layout
================================================================================

export TestCase := Window {
    layout1 := VerticalLayout {
        if (true) : test1 := VerticalLayout {
            Rectangle { height: 55px; }
            opacity: 1;
        }
    }
    layout2 := HorizontalLayout {
        if (true) : test2 := Rectangle {
            inner := VerticalLayout { Rectangle { width: 88px; } }
            opacity: 1;
        }
    }

    layout3 := HorizontalLayout {
        for _ in 3 : Rectangle {
            width: 10px;
            opacity: 0.5;
        }
    }

    // issue #915
    layout4 := HorizontalLayout {
        height: 100px;
        for _ in 3 : the_image := Image {
            width: 10px;
            opacity: 0.5;
            source: @image-url("../../../logo/slint-logo-square-light-128x128.png");
        }
    }

    property <length> layout1_height : layout1.min-height;
    property <length> layout2_width : layout2.max-width;
    property <length> layout3_width : layout3.preferred-width;
    property <length> layout4_width : layout4.preferred-width;
    property<bool> test: layout1_height == 55px && layout2_width == 88px && layout3_width == 30px && layout4_width == 30px;
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (visibility_modifier)
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (if_statement_definition
                (expression_body_paren
                  (value
                    (language_constant)))
                (component_definition
                  (user_type_identifier)
                  (ERROR
                    (int_number))
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (variable_set_equal
                              (var_identifier)
                              (assignment_prec_operator)
                              (value
                                (value_with_units
                                  (number
                                    (int_number))
                                  (unit_type)))))))
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (number
                            (int_number)))))))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (if_statement_definition
                (expression_body_paren
                  (value
                    (language_constant)))
                (component_definition
                  (user_type_identifier)
                  (ERROR
                    (int_number))
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (component_definition
                        (user_type_identifier)
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (component_definition
                              (user_type_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (variable_set_equal
                                    (var_identifier)
                                    (assignment_prec_operator)
                                    (value
                                      (value_with_units
                                        (number
                                          (int_number))
                                        (unit_type))))))))))
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (number
                            (int_number)))))))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (ERROR
                (var_identifier)
                (int_number)
                (UNEXPECTED 'R'))
              (component_definition
                (builtin_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (float_number))))))))))
        (comment)
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (ERROR
                (var_identifier)
                (int_number)
                (UNEXPECTED 'e'))
              (component_definition
                (builtin_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (float_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (function_call
                        (function_identifier)
                        (call_signature
                          (formal_parameters
                            (formal_parameter
                              (string
                                (string_fragment)))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_'))
          (property_expr
            (var_identifier
              (ERROR
                (int_number))
              (post_identifier))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_'))
          (property_expr
            (var_identifier
              (ERROR
                (int_number))
              (post_identifier))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_'))
          (property_expr
            (var_identifier
              (ERROR
                (int_number))
              (post_identifier))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_'))
          (property_expr
            (var_identifier
              (ERROR
                (int_number))
              (post_identifier))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (property_expr
              (var_identifier))
            (int_number)
            (UNEXPECTED '_')
            (property_expr
              (mult_binary_expression
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type)))
                (mult_prec_operator)
                (var_identifier)))
            (int_number)
            (UNEXPECTED '_')
            (property_expr
              (mult_binary_expression
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type)))
                (mult_prec_operator)
                (var_identifier)))
            (int_number)
            (UNEXPECTED '_')
            (property_expr
              (mult_binary_expression
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type)))
                (mult_prec_operator)
                (var_identifier)))
            (int_number)
            (UNEXPECTED '_'))
          (property_expr
            (value
              (value_with_units
                (number
                  (int_number))
                (unit_type)))))))))

================================================================================
override_from_parent
================================================================================

ComboBox := Rectangle {
    min-width: 60px;
}

SubComp1 := Rectangle {
    HorizontalLayout {
        ComboBox {
            width: 200px;
        }
    }
}

SubComp2 := HorizontalLayout {
    ComboBox {
        width: 200px;
    }
}

SubComp3 := HorizontalLayout {
    max-width: 500px;
    Rectangle { }
}

SubComp4 := SubComp1 {}


TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    sc1 := SubComp1 {}
    sc2 := SubComp2 {}
    // FIXME: the HorizontalLayout is required here because the sc3.max-width takes the existing binding instead of being re-materialized
    sc3 := HorizontalLayout { SubComp3 { width: 200px; } }
    sc4 := SubComp4 {}
    property<bool> test: sc1.min-width == 200px && sc2.min-width == 200px && sc3.max-width == 200px && sc4.min-width == 200px;
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type)))))))
  (component_definition
    (user_type_identifier)
    (ERROR
      (int_number))
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type)))))))))))))
  (component_definition
    (user_type_identifier)
    (ERROR
      (int_number))
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))))))))
  (component_definition
    (user_type_identifier)
    (ERROR
      (int_number))
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body))))))
  (component_definition
    (user_type_identifier)
    (ERROR
      (int_number))
    (user_type_identifier)
    (ERROR
      (int_number))
    (field_declaration_list
      (field_declaration_list_body)))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (ERROR
            (int_number))
          (field_declaration_list
            (field_declaration_list_body)))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (ERROR
            (int_number))
          (field_declaration_list
            (field_declaration_list_body)))
        (comment)
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (ERROR
            (int_number))
          (field_declaration_list
            (field_declaration_list_body)))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier))
                  (ERROR
                    (int_number))
                  (mult_prec_operator)
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)))
                (ERROR
                  (int_number))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)))
              (ERROR
                (int_number))
              (mult_prec_operator)
              (ERROR
                (ERROR
                  (int_number))
                (function_identifier))
              (value
                (value_with_units
                  (number
                    (int_number))
                  (unit_type))))))))))

================================================================================
special_default_geometry
================================================================================

// Test that the default geometry is taken from the right parent, even when some
//

export TestCase := Window {
    property <bool> condition: true;
    Rectangle {
        width: 10px;
        height: 20px;

        invisible := Rectangle {
            visible: condition;
            background: blue;
        }

        opaque := Rectangle {
            opacity: 0.5;
            background: red;
        }

        clipped := Rectangle {
            clip: condition;
            background: yellow;
        }

        shadowed := Rectangle {
            drop-shadow-color: #00000054;
            drop-shadow-blur: 8px;
            background: pink;
        }

        all := Rectangle {
            visible: condition;
            clip: condition;
            opacity: 0.2;
            drop-shadow-color: #00000054;
            drop-shadow-blur: 8px;
            background: orange;
        }
    }

    property <bool> test:
        invisible.width == 10px && invisible.height == 20px &&
        opaque.width == 10px && opaque.height == 20px &&
        clipped.width == 10px && clipped.height == 20px &&
        shadowed.width == 10px && shadowed.height == 20px &&
        all.width == 10px && all.height == 20px;
}

--------------------------------------------------------------------------------

(source_file
  (comment)
  (comment)
  (component_definition
    (visibility_modifier)
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (value
              (language_constant))))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (float_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (color))
                      (ERROR
                        (int_number)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier)))))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (float_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (color))
                      (ERROR
                        (int_number)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (mult_binary_expression
                        (mult_binary_expression
                          (mult_binary_expression
                            (mult_binary_expression
                              (var_identifier
                                (post_identifier))
                              (ERROR
                                (int_number))
                              (mult_prec_operator)
                              (var_identifier
                                (post_identifier)))
                            (ERROR
                              (int_number))
                            (mult_prec_operator)
                            (var_identifier
                              (post_identifier)))
                          (ERROR
                            (int_number))
                          (mult_prec_operator)
                          (var_identifier
                            (post_identifier)))
                        (ERROR
                          (int_number))
                        (mult_prec_operator)
                        (var_identifier
                          (post_identifier)))
                      (ERROR
                        (int_number))
                      (mult_prec_operator)
                      (var_identifier
                        (post_identifier)))
                    (ERROR
                      (int_number))
                    (mult_prec_operator)
                    (var_identifier
                      (post_identifier)))
                  (ERROR
                    (int_number))
                  (mult_prec_operator)
                  (var_identifier
                    (post_identifier)))
                (ERROR
                  (int_number))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)))
              (ERROR
                (int_number))
              (mult_prec_operator)
              (ERROR
                (function_identifier))
              (value
                (value_with_units
                  (number
                    (int_number))
                  (unit_type))))))))))

================================================================================
text_no_wrap
================================================================================

// A Text that does not use word wrap's height should not depends on the width

TestCase := Rectangle {

    VerticalLayout {
        HorizontalLayout {
            Text {
                text: "Hello World";
            }
            square := Rectangle {
                width: height;
                background: violet;
            }
        }
        Rectangle {}
    }

    property <bool> test: square.width == square.height;
}
--------------------------------------------------------------------------------

(source_file
  (comment)
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (string
                              (string_fragment))))))
                    (component_definition
                      (user_type_identifier)
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier
              (post_identifier)
              (ERROR
                (UNEXPECTED 'q'))
              (post_identifier))))))))

================================================================================
text_preferred_size
================================================================================

TestCase := Window {
    width: 400px;
    height: 640px;
    VerticalLayout {
        padding: 0px;
        alignment: center;
        text := Text {
            text: "This line needs to be broken into multiple lines of text and yet be centered.";
            font_size: 20px;
            wrap: word-wrap;
        }
    }

    property <bool> test: text.height > 0 && text.width == root.width;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (var_identifier))
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (string
                        (string_fragment)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (comparison_binary_expression
              (var_identifier
                (post_identifier))
              (comparison_operator)
              (mult_binary_expression
                (value
                  (number
                    (int_number)))
                (mult_prec_operator)
                (var_identifier
                  (post_identifier)
                  (ERROR)
                  (post_identifier))))))))))

================================================================================
window_preferred
================================================================================

TestCase := Window {
    VerticalLayout {
        padding: 10px;
        spacing: 27px;
        Rectangle {
            background: blue;
            preferred-width: 25phx;
            preferred-height: 500phx;
            horizontal-stretch: 0;
            vertical-stretch: 0;
        }
        Rectangle {
            background: green;
            // implicit: horizontal-stretch: 1
        }
    }

    property w <=> root.preferred-width;

    property <bool> test: root.preferred_height == 500phx + 20px + 27px && root.preferred_width == 25phx + 20px;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant))))
                  (comment))))))
        (ERROR
          (UNEXPECTED '))
        (callback_call
          (var_identifier
            (reference_identifier)
            (post_identifier)))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (add_binary_expression
              (add_binary_expression
                (add_binary_expression
                  (var_identifier
                    (reference_identifier)
                    (post_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED 'x'))
                  (add_prec_operator)
                  (value
                    (value_with_units
                      (number
                        (int_number))
                      (unit_type))))
                (add_prec_operator)
                (mult_binary_expression
                  (value
                    (value_with_units
                      (number
                        (int_number))
                      (unit_type)))
                  (mult_prec_operator)
                  (var_identifier
                    (reference_identifier)
                    (post_identifier))))
              (ERROR
                (int_number)
                (UNEXPECTED 'x'))
              (add_prec_operator)
              (value
                (value_with_units
                  (number
                    (int_number))
                  (unit_type))))))))))

================================================================================
box_precentages
================================================================================

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    VerticalLayout {
        spacing: 0phx;
        padding: 0phx;
        hl1 := HorizontalLayout {
            spacing: 0phx;
            padding: 0phx;
            rect1 := Rectangle {
                background: red;
                width: 10%;
            }
            rect2 := Rectangle {
                background: blue;
                height: 90px;
            }
        }

        rect3 := Rectangle {
            background: green;
            height: 15%;
            width: 100%;
        }

        hl2 := HorizontalLayout {
            spacing: 0phx;
            padding: 0phx;
            rect4 := Rectangle {
                background: cyan;
            }
            rect5 := Rectangle {
                background: yellow;
                width: 90%;
            }
        }


    }

    property <length> expected_y1: 90phx;
    property <length> expected_y2: 90phx + 300phx * 0.15;
    property <length> expected_x1: 30phx;

    property <bool> rect1_pos_ok: rect1.x == 0phx && rect1.y == 0phx && rect1.width == expected_x1 && rect1.height == expected_y1;
    property <bool> rect2_pos_ok: rect2.x == expected_x1 && rect2.y == 0phx && rect2.width == 270phx && rect2.height == expected_y1;
    property <bool> rect3_pos_ok: rect3.x == 0phx && rect3.y == expected_y1 && rect3.width == 300phx && rect3.height == 300phx * 0.15;
    property <bool> rect4_pos_ok: rect4.x == 0phx && hl2.y == expected_y2 && rect4.width == expected_x1 && rect4.height == 300phx - expected_y2;
    property <bool> rect5_pos_ok: rect5.x == expected_x1 && hl2.y == expected_y2 && rect5.width == 270phx && rect5.height == 300phx - expected_y2;

    property <bool> test: rect1_pos_ok && rect2_pos_ok && rect3_pos_ok && rect4_pos_ok && rect5_pos_ok;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type)))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))))))))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type)))))))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier)))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type)))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number))
          (property_expr
            (add_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (add_prec_operator)
              (mult_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (value
                  (number
                    (float_number)))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (ERROR)
            (value
              (number
                (int_number)))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (ERROR)
            (value
              (number
                (int_number)))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (value
                (number
                  (float_number))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (add_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (add_prec_operator)
              (ERROR)
              (value
                (number
                  (int_number))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (add_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (add_prec_operator)
              (ERROR)
              (value
                (number
                  (int_number))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (var_identifier)
                    (ERROR
                      (int_number)
                      (UNEXPECTED '_'))
                    (mult_prec_operator)
                    (var_identifier))
                  (ERROR
                    (int_number)
                    (UNEXPECTED '_'))
                  (mult_prec_operator)
                  (var_identifier))
                (ERROR
                  (int_number)
                  (UNEXPECTED '_'))
                (mult_prec_operator)
                (var_identifier))
              (ERROR
                (int_number)
                (UNEXPECTED '_'))
              (mult_prec_operator)
              (var_identifier)))
          (ERROR
            (int_number)
            (UNEXPECTED '_')))))))

================================================================================
grid_fixed_size
================================================================================

SubWithConstraints := Rectangle {
    min-height: 20px;
}

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    layout := GridLayout {
        spacing: 0phx;
        padding: 0phx;
        Row {
            rect1 := Rectangle {
                background: red;
                width: 10%;
            }
            rect2 := Rectangle {
                background: blue;
                height: 30%;
            }
        }

        Row {
            rect3 := SubWithConstraints { // min-height should be ignored because we override
                background: green;
                height: 20phx;
            }
        }

        Row {
            rect4 := Rectangle {
                background: cyan;
            }
            rect5 := Rectangle {
                background: yellow;
            }
        }


    }

    property <length> expected_y1: 300phx*0.3;
    property <length> expected_y2: 300phx*0.3 + 20phx;
    property <length> expected_x1: 30phx;

    property <bool> rect1_pos_ok: rect1.x == 0phx && rect1.y == 0phx && rect1.width == expected_x1 && rect1.height == expected_y1;
    property <bool> rect2_pos_ok: rect2.x == expected_x1 && rect2.y == 0phx && rect2.width == 270phx && rect2.height == expected_y1;
    property <bool> rect3_pos_ok: rect3.x == 0phx && rect3.y == expected_y1 && rect3.width == expected_x1 && rect3.height == 20phx;
    property <bool> rect4_pos_ok: rect4.x == 0phx && rect4.y == expected_y2 && rect4.width == expected_x1 && rect4.height == 300phx - expected_y2;
    property <bool> rect5_pos_ok: rect5.x == expected_x1 && rect5.y == expected_y2 && rect5.width == 270phx && rect5.height == 300phx - expected_y2;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type)))))))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x')))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type)))))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (comment)
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (var_identifier)))))
                    (component_definition
                      (user_type_identifier)
                      (ERROR
                        (int_number))
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number))
          (property_expr
            (mult_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (mult_prec_operator)
              (value
                (number
                  (float_number))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number))
          (property_expr
            (add_binary_expression
              (mult_binary_expression
                (value
                  (number
                    (int_number)))
                (ERROR
                  (UNEXPECTED 'x'))
                (mult_prec_operator)
                (value
                  (number
                    (float_number))))
              (add_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (ERROR)
            (value
              (number
                (int_number)))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (ERROR)
            (value
              (number
                (int_number)))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (value
              (number
                (int_number))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (add_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (add_prec_operator)
              (ERROR)
              (value
                (number
                  (int_number))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (ERROR
            (int_number)
            (UNEXPECTED '_')
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (ERROR)
            (value
              (number
                (int_number)))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier)
            (value
              (number
                (int_number)))
            (ERROR
              (UNEXPECTED 'x'))
            (mult_prec_operator)
            (ERROR
              (int_number))
            (function_identifier))
          (property_expr
            (add_binary_expression
              (value
                (number
                  (int_number)))
              (ERROR
                (UNEXPECTED 'x'))
              (add_prec_operator)
              (ERROR)
              (value
                (number
                  (int_number))))))))))

================================================================================
grid_within_for
================================================================================

// Regression test for a panic in the compiler

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;
    property<int> value: 1;

    for c[index] in [#f00, #00f, #0a0]: Rectangle {
        y: index * height;
        width: parent.width;
        height: 100phx;
        GridLayout {
            Rectangle {
                background: c;

                TouchArea {
                    width: parent.width;
                    height: parent.height;
                    clicked => {
                        value += index;
                    }
                }
            }
        }
    }
}


/*



// FIXME: JS test because layout are not computed

*/
--------------------------------------------------------------------------------

(source_file
  (comment)
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (value
              (number
                (int_number)))))
        (for_loop_definition
          (var_identifier
            (index_operator
              (var_identifier)))
          (var_identifier
            (reference_identifier
              (MISSING "parent"))
            (index_operator
              (ERROR
                (value
                  (color))
                (value
                  (color)))
              (value
                (color))))
          (component_definition
            (user_type_identifier)
            (field_declaration_list
              (field_declaration_list_body
                (variable_set_equal
                  (var_identifier)
                  (assignment_prec_operator)
                  (mult_binary_expression
                    (var_identifier)
                    (mult_prec_operator)
                    (var_identifier)))
                (variable_set_equal
                  (var_identifier)
                  (assignment_prec_operator)
                  (var_identifier
                    (reference_identifier)
                    (post_identifier)))
                (variable_set_equal
                  (var_identifier)
                  (assignment_prec_operator)
                  (value
                    (number
                      (int_number)))
                  (ERROR
                    (UNEXPECTED 'x')))
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (variable_set_equal
                              (var_identifier)
                              (assignment_prec_operator)
                              (var_identifier))
                            (component_definition
                              (user_type_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (variable_set_equal
                                    (var_identifier)
                                    (assignment_prec_operator)
                                    (var_identifier
                                      (reference_identifier)
                                      (post_identifier)))
                                  (variable_set_equal
                                    (var_identifier)
                                    (assignment_prec_operator)
                                    (var_identifier
                                      (reference_identifier)
                                      (post_identifier)))
                                  (callback_event
                                    (function_identifier)
                                    (field_declaration_list
                                      (field_declaration_list_body
                                        (variable_set_equal
                                          (var_identifier)
                                          (assignment_prec_operator)
                                          (var_identifier)))))))))))))))))))))
  (comment))

================================================================================
horizontal_for
================================================================================

export TestCase := Rectangle {
    width: 100phx;
    height: 100phx;
    property<int> value: -10;

    HorizontalLayout {

        Rectangle { background: orange; }

        for i in [
            {color: #0f0, value: 8, },
            {color: #00f, value: 9, },
            {color: #f00, value: 10, },
        ] : Rectangle {
            background: i.color;
            TouchArea {
                width: 100%;
                height: 100%;
                clicked => {
                    root.value = i.value;
                }
            }
        }

        Rectangle { background: pink; }
    }
}

// There should be 5 rectangle: so 100 devided by 5 is 20.

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (visibility_modifier)
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (unary_expression
              (unary_prec_operator)
              (value
                (number
                  (int_number))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (component_definition
              (user_type_identifier)
              (field_declaration_list
                (field_declaration_list_body
                  (variable_set_equal
                    (var_identifier)
                    (assignment_prec_operator)
                    (var_identifier)))))
            (var_identifier)
            (var_identifier)
            (assignment_prec_operator)
            (value
              (color))
            (UNEXPECTED 'v')
            (int_number)
            (var_identifier)
            (assignment_prec_operator)
            (value
              (color))
            (UNEXPECTED 'v')
            (int_number)
            (var_identifier)
            (ERROR
              (assignment_prec_operator)
              (value
                (color))
              (UNEXPECTED 'v')
              (int_number))
            (assignment_prec_operator)
            (var_identifier))
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (var_identifier
                  (post_identifier)))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (callback_event
                      (function_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier
                              (reference_identifier)
                              (post_identifier))
                            (assignment_prec_operator)
                            (var_identifier
                              (post_identifier))))))))))))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (var_identifier))))))))
  (ERROR)
  (comment))

================================================================================
issue_1057_listview_subcomponent_height
================================================================================

import { ListView  } from "std-widgets.slint";

MyListItem := Rectangle {
    callback clicked <=> ta.clicked;
    property <string> string;

    height: 100px;

    Text {
        text: string;
    }

    ta := TouchArea {  }
}

TestCase := Window {
    width: 300px;
    height: 500px;

    property <string> value;

    HorizontalLayout {
        lv := ListView {
            for string in [ "Blue", "Red", "Green", "Yellow", "Black", "White", "Magenta", "Cyan"] : my := MyListItem {
                string: string;
                clicked => { value = string; }
            }
        }
    }
    property <int> viewport-height: lv.viewport-height / 1px;
}

--------------------------------------------------------------------------------

(source_file
  (import_statement
    (user_type_identifier)
    (string
      (string_fragment)))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (callback_definition
          (function_identifier)
          (ERROR
            (UNEXPECTED 'a')
            (UNEXPECTED 'l')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (builtin_type_identifier)))))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body))))))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (for_loop_definition
                      (var_identifier)
                      (var_identifier
                        (reference_identifier
                          (MISSING "parent"))
                        (index_operator
                          (ERROR
                            (string
                              (string_fragment))
                            (string
                              (string_fragment))
                            (string
                              (string_fragment))
                            (string
                              (string_fragment))
                            (string
                              (string_fragment))
                            (string
                              (string_fragment))
                            (string
                              (string_fragment)))
                          (string
                            (string_fragment))))
                      (component_definition
                        (user_type_identifier)
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (ERROR
                              (builtin_type_identifier))
                            (component_definition
                              (builtin_type_identifier)
                              (ERROR
                                (UNEXPECTED 'l'))
                              (field_declaration_list
                                (field_declaration_list_body
                                  (variable_set_equal
                                    (var_identifier)
                                    (assignment_prec_operator)
                                    (builtin_type_identifier)))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (value_with_units
                  (number
                    (int_number))
                  (unit_type))))))))))

================================================================================
issue_140
================================================================================

HelloWorld := Window {
    HorizontalLayout {
        VerticalLayout {
            HorizontalLayout {
                height: 50%;
                Rectangle {}
            }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (component_definition
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body))))))))))))))))

================================================================================
issue_147_for_explicit_size
================================================================================

TestCase := Window {
    width: 500px;
    height: 550px;
    background: #ecedeb;

    property<[int]> xs: [1, 2, 3];

    VerticalLayout {
        padding: 0px;
        spacing: 0px;
        alignment: start;

        for x_[i] in xs: Rectangle {
            background: i == 0 ? red : i == 1 ? green : blue;
            height: 100px;
            TouchArea {
                clicked => { last_clicked = x_; }
            }
        }

        for x_[i] in xs: Rectangle {
            background: i == 0 ? red : i == 1 ? green : blue;
            min-height: 50px;
            TouchArea {
                clicked => { last_clicked = 10 + x_; }
            }
        }
    }

    property<int> last_clicked;
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (color)))
        (property_definition
          (property_type_list
            (builtin_type_identifier))
          (var_identifier)
          (property_expr
            (ERROR
              (int_number)
              (value
                (number
                  (int_number))))
            (value
              (number
                (int_number))))
          (ERROR))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (language_constant)))
              (for_loop_definition
                (var_identifier
                  (index_operator
                    (var_identifier)))
                (var_identifier)
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (ERROR)
                        (ternary_expression
                          (ternary_expression
                            (value
                              (number
                                (int_number)))
                            (value
                              (language_constant))
                            (ERROR)
                            (value
                              (number
                                (int_number))))
                          (value
                            (language_constant))
                          (value
                            (language_constant))))
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (value_with_units
                            (number
                              (int_number))
                            (unit_type))))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (callback_event
                              (function_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (variable_set_equal
                                    (var_identifier)
                                    (assignment_prec_operator)
                                    (var_identifier))))))))))))
              (for_loop_definition
                (var_identifier
                  (index_operator
                    (var_identifier)))
                (var_identifier)
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (ERROR)
                        (ternary_expression
                          (ternary_expression
                            (value
                              (number
                                (int_number)))
                            (value
                              (language_constant))
                            (ERROR)
                            (value
                              (number
                                (int_number))))
                          (value
                            (language_constant))
                          (value
                            (language_constant))))
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (value_with_units
                            (number
                              (int_number))
                            (unit_type))))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (callback_event
                              (function_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (variable_set_equal
                                    (var_identifier)
                                    (assignment_prec_operator)
                                    (add_binary_expression
                                      (value
                                        (number
                                          (int_number)))
                                      (add_prec_operator)
                                      (var_identifier))))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier))))))

================================================================================
issue_147_for_explicit_size_merge
================================================================================

TestCase := Window {
    width: 500px;
    height: 550px;
    background: #ecedeb;

    property<[int]> xs: [1, 2, 3];

    VerticalLayout {
        padding: 0px;
        spacing: 0px;
        alignment: start;

        for x_[i] in xs: Rectangle {
            background: i == 0 ? red : i == 1 ? green : blue;
            height: 100px;
            VerticalLayout {
                padding: 1px;
                TouchArea {
                    clicked => { last_clicked = x_; }
                }
            }
        }

        for x_[i] in xs: Rectangle {
            background: i == 0 ? red : i == 1 ? green : blue;
            min-height: 50px;
            HorizontalLayout {
                padding: 1px;
                TouchArea {
                    clicked => { last_clicked = 10 + x_; }
                }
            }
        }
    }

    property<int> last_clicked;
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (color)))
        (property_definition
          (property_type_list
            (builtin_type_identifier))
          (var_identifier)
          (property_expr
            (ERROR
              (int_number)
              (value
                (number
                  (int_number))))
            (value
              (number
                (int_number))))
          (ERROR))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (language_constant)))
              (for_loop_definition
                (var_identifier
                  (index_operator
                    (var_identifier)))
                (var_identifier)
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (ERROR)
                        (ternary_expression
                          (ternary_expression
                            (value
                              (number
                                (int_number)))
                            (value
                              (language_constant))
                            (ERROR)
                            (value
                              (number
                                (int_number))))
                          (value
                            (language_constant))
                          (value
                            (language_constant))))
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (value_with_units
                            (number
                              (int_number))
                            (unit_type))))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (variable_set_equal
                              (var_identifier)
                              (assignment_prec_operator)
                              (value
                                (value_with_units
                                  (number
                                    (int_number))
                                  (unit_type))))
                            (component_definition
                              (user_type_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (callback_event
                                    (function_identifier)
                                    (field_declaration_list
                                      (field_declaration_list_body
                                        (variable_set_equal
                                          (var_identifier)
                                          (assignment_prec_operator)
                                          (var_identifier)))))))))))))))
              (for_loop_definition
                (var_identifier
                  (index_operator
                    (var_identifier)))
                (var_identifier)
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (ERROR)
                        (ternary_expression
                          (ternary_expression
                            (value
                              (number
                                (int_number)))
                            (value
                              (language_constant))
                            (ERROR)
                            (value
                              (number
                                (int_number))))
                          (value
                            (language_constant))
                          (value
                            (language_constant))))
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (value_with_units
                            (number
                              (int_number))
                            (unit_type))))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (variable_set_equal
                              (var_identifier)
                              (assignment_prec_operator)
                              (value
                                (value_with_units
                                  (number
                                    (int_number))
                                  (unit_type))))
                            (component_definition
                              (user_type_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (callback_event
                                    (function_identifier)
                                    (field_declaration_list
                                      (field_declaration_list_body
                                        (variable_set_equal
                                          (var_identifier)
                                          (assignment_prec_operator)
                                          (add_binary_expression
                                            (value
                                              (number
                                                (int_number)))
                                            (add_prec_operator)
                                            (var_identifier)))))))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier))))))

================================================================================
issue_149_nested_for
================================================================================

TestCase := Window {
    width: 300phx;
    height: 300phx;

    property<[int]> xs: [1, 2, 3];
    property<[int]> ys: [10, 20, 30];

    VerticalLayout {
        padding: 0px;
        spacing: 0px;
        for x_[i] in xs: HorizontalLayout {
            padding: 0px;
            spacing: 0px;
            for y_[j] in ys: Rectangle {
                TouchArea {
                    clicked => {
                        last_clicked = x_ + y_;
                    }
                }
                Text { text: (x_ + y_);  }
            }
        }
    }

    property<int> last_clicked;
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (property_type_list
            (builtin_type_identifier))
          (var_identifier)
          (property_expr
            (ERROR
              (int_number)
              (value
                (number
                  (int_number))))
            (value
              (number
                (int_number))))
          (ERROR))
        (property_definition
          (property_type_list
            (builtin_type_identifier))
          (var_identifier)
          (property_expr
            (ERROR
              (int_number)
              (value
                (number
                  (int_number))))
            (value
              (number
                (int_number))))
          (ERROR))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (for_loop_definition
                (var_identifier
                  (index_operator
                    (var_identifier)))
                (var_identifier)
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (value_with_units
                            (number
                              (int_number))
                            (unit_type))))
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (value_with_units
                            (number
                              (int_number))
                            (unit_type))))
                      (for_loop_definition
                        (var_identifier
                          (index_operator
                            (var_identifier)))
                        (var_identifier)
                        (component_definition
                          (user_type_identifier)
                          (field_declaration_list
                            (field_declaration_list_body
                              (component_definition
                                (user_type_identifier)
                                (field_declaration_list
                                  (field_declaration_list_body
                                    (callback_event
                                      (function_identifier)
                                      (field_declaration_list
                                        (field_declaration_list_body
                                          (variable_set_equal
                                            (var_identifier)
                                            (assignment_prec_operator)
                                            (add_binary_expression
                                              (var_identifier)
                                              (add_prec_operator)
                                              (var_identifier)))))))))
                              (component_definition
                                (user_type_identifier)
                                (field_declaration_list
                                  (field_declaration_list_body
                                    (variable_set_equal
                                      (var_identifier)
                                      (assignment_prec_operator)
                                      (expression_body_paren
                                        (add_binary_expression
                                          (var_identifier)
                                          (add_prec_operator)
                                          (var_identifier))))))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier))))))

================================================================================
issue_160_box_min_max
================================================================================

export TestCase := Window {
    width:  600px;
    height: 300px;
    property<[int]> xs: [200,100,300];
    HorizontalLayout {
        spacing: 10px;
        padding: 0px;
        alignment: center;
        r1 := Rectangle { background: blue; width: 10px; }
        VerticalLayout {
            spacing: 10px;
            padding: 0px;
            alignment: start;
            Rectangle {
                height: 10px;
                width: 200px;
                background: red;
            }
            Rectangle {
                height: 10px;
                width: 100px;
                background: red;
            }
            Rectangle {
                height: 10px;
                width: 300px;
                background: red;
            }
        }
        r2 := Rectangle { background: blue; width: 10px; }
    }

    property <bool> check_ok : r2.x == r1.x + 2*10px + 300px + 10px;

    property <bool> test: check_ok;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (visibility_modifier)
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (property_definition
          (property_type_list
            (builtin_type_identifier))
          (var_identifier)
          (property_expr
            (ERROR
              (int_number)
              (value
                (number
                  (int_number))))
            (value
              (number
                (int_number))))
          (ERROR))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (var_identifier))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type)))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant))))))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (value_with_units
                                (number
                                  (int_number))
                                (unit_type))))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))))))))
              (component_definition
                (user_type_identifier)
                (ERROR
                  (int_number))
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (language_constant)))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (value_with_units
                          (number
                            (int_number))
                          (unit_type))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (add_binary_expression
              (add_binary_expression
                (add_binary_expression
                  (var_identifier
                    (ERROR
                      (int_number))
                    (post_identifier)
                    (ERROR
                      (UNEXPECTED '1')
                      (int_number))
                    (post_identifier))
                  (add_prec_operator)
                  (mult_binary_expression
                    (value
                      (number
                        (int_number)))
                    (mult_prec_operator)
                    (value
                      (value_with_units
                        (number
                          (int_number))
                        (unit_type)))))
                (add_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (add_prec_operator)
              (value
                (value_with_units
                  (number
                    (int_number))
                  (unit_type))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (var_identifier)))))))

================================================================================
issue_167_if_relayout
================================================================================

TestCase := Window {
    width:  300px;
    height: 300px;
    if (true) : Rectangle {
        background: black;
        VerticalLayout {
            Rectangle {
                background: blue;
                TouchArea { clicked => { last_clicked = 1; } }
            }
            Rectangle {
                background: red;
                TouchArea { clicked => { last_clicked = 2; } }
            }
        }
    }
    property<int> last_clicked;
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (if_statement_definition
          (expression_body_paren
            (value
              (language_constant)))
          (component_definition
            (user_type_identifier)
            (field_declaration_list
              (field_declaration_list_body
                (variable_set_equal
                  (var_identifier)
                  (assignment_prec_operator)
                  (value
                    (language_constant)))
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (variable_set_equal
                              (var_identifier)
                              (assignment_prec_operator)
                              (value
                                (language_constant)))
                            (component_definition
                              (user_type_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (callback_event
                                    (function_identifier)
                                    (field_declaration_list
                                      (field_declaration_list_body
                                        (variable_set_equal
                                          (var_identifier)
                                          (assignment_prec_operator)
                                          (value
                                            (number
                                              (int_number)))))))))))))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (variable_set_equal
                              (var_identifier)
                              (assignment_prec_operator)
                              (value
                                (language_constant)))
                            (component_definition
                              (user_type_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (callback_event
                                    (function_identifier)
                                    (field_declaration_list
                                      (field_declaration_list_body
                                        (variable_set_equal
                                          (var_identifier)
                                          (assignment_prec_operator)
                                          (value
                                            (number
                                              (int_number))))))))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier))))))

================================================================================
materialized_minmax
================================================================================

// Test the propagation of maximum and minimum size through nested grid layouts

TestCase := Rectangle {
    width: 300phx;
    height: 300phx;

    rect := Rectangle {

        layout := HorizontalLayout {
            spacing: 0phx;
            padding: 0phx;
            Rectangle {
                background: blue;
                max-height: 300phx;
                max-width: 300phx;
                min-height: 25phx;
            }
            VerticalLayout {
                spacing: 0phx;
                padding: 0phx;
                Rectangle {
                    background: red;
                    min-width: 50phx;
                }
                Rectangle {
                    background: green;
                }
            }
        }
    }

    property<int> materialized_max_width: layout.max-width / 1phx;
    property<int> materialized_max_height: layout.max-height / 1phx;
    property<int> materialized_min_width: layout.min-width / 1phx;
    property<int> materialized_min_height: layout.min-height / 1phx;

    property<int> materialized_rect_max_width: rect.max-width / 1phx;
    property<int> materialized_rect_max_height: rect.max-height / 1phx;
    property<int> materialized_rect_min_width: rect.min-width / 1phx;
    property<int> materialized_rect_min_height: rect.min-height / 1phx;

    property <bool> test:
        materialized_max_height == 300 && materialized_min_width == 50 && materialized_min_height == 25 && materialized_max_width > 100000 &&
        materialized_rect_max_height == 300 && materialized_rect_min_width == 50 && materialized_rect_min_height == 25 && materialized_rect_max_width > 100000;
}

--------------------------------------------------------------------------------

(source_file
  (comment)
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (number
                          (int_number)))
                      (ERROR
                        (UNEXPECTED 'x')))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (language_constant)))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x'))))))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (value
                              (number
                                (int_number)))
                            (ERROR
                              (UNEXPECTED 'x')))
                          (component_definition
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant)))
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))
                                  (ERROR
                                    (UNEXPECTED 'x'))))))
                          (component_definition
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (value
                                    (language_constant)))))))))))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (value
                (number
                  (int_number)))))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (ERROR)
            (comparison_binary_expression
              (comparison_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (value
                        (number
                          (int_number)))
                      (mult_prec_operator)
                      (ERROR)
                      (value
                        (number
                          (int_number))))
                    (mult_prec_operator)
                    (ERROR)
                    (value
                      (number
                        (int_number))))
                  (mult_prec_operator)
                  (var_identifier))
                (comparison_operator)
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (mult_binary_expression
                        (value
                          (number
                            (int_number)))
                        (mult_prec_operator)
                        (ERROR)
                        (value
                          (number
                            (int_number))))
                      (mult_prec_operator)
                      (ERROR)
                      (value
                        (number
                          (int_number))))
                    (mult_prec_operator)
                    (ERROR)
                    (value
                      (number
                        (int_number))))
                  (mult_prec_operator)
                  (var_identifier)))
              (comparison_operator)
              (value
                (number
                  (int_number))))))))))

================================================================================
vertical_if
================================================================================

export TestCase := Window {
    width: 100phx;
    height: 100phx;
    property<int> value: -10;
    property <bool> cond: true;

    VerticalLayout {
        padding: 0px;
        spacing: 0px;

        Rectangle {
            background: orange;
            TouchArea {
                clicked => {
                    root.value = 0;
                }
            }
        }

        if (true) : Rectangle {
            background: blue;
            TouchArea {
                clicked => {
                    root.value = 1;
                }
            }
        }
        if (cond) : Rectangle {
            background: red;
            TouchArea {
                clicked => {
                    root.value = 2;
                }
            }
        }
        if (false) : Rectangle {
            background: green;
            TouchArea {
                clicked => {
                    root.value = 3;
                }
            }
        }

        Rectangle {
            background: pink;
            TouchArea {
                clicked => {
                    root.value = 4;
                }
            }
        }
    }
}

// There should be 4 rectangle: so 100 devided by 4 is 25.
// when cond is false, there is 3, so 33.3 pixel per rectangle

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (visibility_modifier)
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (number
              (int_number)))
          (ERROR
            (UNEXPECTED 'x')))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (unary_expression
              (unary_prec_operator)
              (value
                (number
                  (int_number))))))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (value
              (language_constant))))
        (component_definition
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (callback_event
                            (function_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier
                                    (reference_identifier)
                                    (post_identifier))
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))))))))))))
              (if_statement_definition
                (expression_body_paren
                  (value
                    (language_constant)))
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (language_constant)))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (callback_event
                              (function_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (variable_set_equal
                                    (var_identifier
                                      (reference_identifier)
                                      (post_identifier))
                                    (assignment_prec_operator)
                                    (value
                                      (number
                                        (int_number))))))))))))))
              (if_statement_definition
                (expression_body_paren
                  (var_identifier))
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (language_constant)))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (callback_event
                              (function_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (variable_set_equal
                                    (var_identifier
                                      (reference_identifier)
                                      (post_identifier))
                                    (assignment_prec_operator)
                                    (value
                                      (number
                                        (int_number))))))))))))))
              (if_statement_definition
                (expression_body_paren
                  (value
                    (language_constant)))
                (component_definition
                  (user_type_identifier)
                  (field_declaration_list
                    (field_declaration_list_body
                      (variable_set_equal
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (language_constant)))
                      (component_definition
                        (user_type_identifier)
                        (field_declaration_list
                          (field_declaration_list_body
                            (callback_event
                              (function_identifier)
                              (field_declaration_list
                                (field_declaration_list_body
                                  (variable_set_equal
                                    (var_identifier
                                      (reference_identifier)
                                      (post_identifier))
                                    (assignment_prec_operator)
                                    (value
                                      (number
                                        (int_number))))))))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier))
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (callback_event
                            (function_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier
                                    (reference_identifier)
                                    (post_identifier))
                                  (assignment_prec_operator)
                                  (value
                                    (number
                                      (int_number)))))))))))))))))))
  (comment)
  (comment))

================================================================================
geometry_center_by_default
================================================================================

global G {
    public pure function is-center(pos: length, size: length, parent: length) -> bool {
        return abs(pos / 1px - (parent - size) / 2px) < 0.001;
    }
}

component Foo {
    r1 := Rectangle { width: 20px; }
    r2 := Rectangle { height: 20px; y: 20px; }
    t1 := Text { text: "Foobar"; }


    out property <bool> test:
        G.is-center(r1.x, r1.width, self.width) && r1.y == 0
        && r2.x == 0 && r2.y == 20px
        && G.is-center(t1.x, t1.width, self.width) && G.is-center(t1.y, t1.height, self.height);
}

Old := Rectangle {
    r1 := Rectangle { width: 20px; }
    r2 := Rectangle { height: 20px; y: 20px; }
    t1 := Text { text: "Foobar"; }

    out property <bool> test:
        r1.x == 0 && r1.y == 0
        && r2.x == 0 && r2.y == 20px
        && t1.x == 0 && t1.y == 0;
}

TestCase := Window {
    f := Foo {}
    o := Old {}

    property <bool> test : f.test && o.test;
}

--------------------------------------------------------------------------------

(source_file
  (ERROR
    (ERROR
      (var_identifier)
      (UNEXPECTED 'u')
      (UNEXPECTED 'e')
      (UNEXPECTED 'o')
      (UNEXPECTED 'i'))
    (var_identifier
      (reference_identifier)))
  (component_definition
    (builtin_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (var_identifier)
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator
            (MISSING ":"))
          (comparison_binary_expression
            (expression_body_paren
              (add_binary_expression
                (mult_binary_expression
                  (var_identifier)
                  (mult_prec_operator)
                  (value
                    (value_with_units
                      (number
                        (int_number))
                      (unit_type))))
                (add_prec_operator)
                (mult_binary_expression
                  (expression_body_paren
                    (add_binary_expression
                      (var_identifier
                        (reference_identifier))
                      (add_prec_operator)
                      (var_identifier)))
                  (mult_prec_operator)
                  (value
                    (value_with_units
                      (number
                        (int_number))
                      (unit_type))))))
            (comparison_operator)
            (value
              (number
                (float_number))))))))
  (ERROR
    (UNEXPECTED 'o')
    (UNEXPECTED '1')
    (int_number)
    (UNEXPECTED 'R'))
  (component_definition
    (builtin_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type)))))))
  (component_definition
    (user_type_identifier)
    (ERROR
      (int_number))
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type)))))))
  (component_definition
    (user_type_identifier)
    (ERROR
      (int_number))
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (string
            (string_fragment))))))
  (component_definition
    (user_type_identifier)
    (ERROR
      (UNEXPECTED 'e')
      (UNEXPECTED 'G')
      (UNEXPECTED 's')
      (UNEXPECTED 'e')
      (UNEXPECTED '1')
      (int_number)
      (UNEXPECTED 'x')
      (UNEXPECTED '1')
      (int_number)
      (UNEXPECTED 'i')
      (UNEXPECTED 'e')
      (UNEXPECTED 'i')
      (UNEXPECTED '1')
      (int_number)
      (UNEXPECTED ')
      (int_number)
      (UNEXPECTED '2')
      (int_number)
      (UNEXPECTED 'x')
      (int_number)
      (UNEXPECTED '2')
      (int_number)
      (UNEXPECTED ')
      (int_number)
      (UNEXPECTED 'G')
      (UNEXPECTED 's')
      (UNEXPECTED 'e')
      (UNEXPECTED '1')
      (int_number)
      (UNEXPECTED 'x')
      (UNEXPECTED '1')
      (int_number)
      (UNEXPECTED 'i')
      (UNEXPECTED 'e')
      (UNEXPECTED 'i')
      (UNEXPECTED 'G')
      (UNEXPECTED 's')
      (UNEXPECTED 'e')
      (UNEXPECTED '1')
      (int_number)
      (UNEXPECTED ',')
      (UNEXPECTED '1')
      (int_number)
      (UNEXPECTED 'h')
      (UNEXPECTED 'e')
      (UNEXPECTED 'h')
      (UNEXPECTED 'O'))
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type)))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type))))
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type)))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (string
                  (string_fragment))))))
        (var_identifier)
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (mult_binary_expression
                (mult_binary_expression
                  (mult_binary_expression
                    (mult_binary_expression
                      (var_identifier
                        (ERROR
                          (int_number))
                        (post_identifier))
                      (ERROR
                        (int_number))
                      (mult_prec_operator)
                      (var_identifier
                        (ERROR
                          (int_number))
                        (post_identifier)))
                    (ERROR
                      (int_number))
                    (mult_prec_operator)
                    (var_identifier
                      (ERROR
                        (int_number))
                      (post_identifier)))
                  (ERROR
                    (int_number))
                  (mult_prec_operator)
                  (ERROR
                    (ERROR
                      (int_number))
                    (function_identifier))
                  (value
                    (value_with_units
                      (number
                        (int_number))
                      (unit_type))))
                (mult_prec_operator)
                (var_identifier
                  (ERROR
                    (int_number))
                  (post_identifier)))
              (ERROR
                (int_number))
              (mult_prec_operator)
              (var_identifier
                (ERROR
                  (int_number))
                (post_identifier))))
          (ERROR
            (int_number))))))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body)))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body)))
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (mult_binary_expression
              (var_identifier
                (post_identifier))
              (mult_prec_operator)
              (var_identifier
                (post_identifier)))))))))

================================================================================
issue_783_constraint_from_children
================================================================================

component TestCase {
    r1 := Rectangle {}
    r2 := Rectangle {
        HorizontalLayout {
            Text { text: "foo"; }
        }
        Rectangle {}
    }
    r3 := Rectangle {
        Rectangle {}
        Text { text: "foo"; }
    }
    r4 := Rectangle {
        Rectangle {
            Text { text: "foo"; }
        }
        Rectangle {}
    }
    r5 := Rectangle {
        HorizontalLayout {
            Rectangle {
                Text { text: "foo"; }
            }
        }
    }
    r6 := Rectangle {
        Text { text: "foo"; }
        Text { text: "foo"; }
    }
    broken := Rectangle { // #407
        for ax in 5 : HorizontalLayout { Text { text: "foo"; } }
        for ay in 5 : Text { text: "foo"; }
    }
    foo := Text { text: "foo"; }
    out property <bool> test: foo.min-height > 1px && t2 && t3 && t4 && t5 && t6;
    out property <bool> t2: r2.min-height == foo.min-height && r2.preferred-width == foo.preferred-width;
    out property <bool> t3: r3.min-height == foo.min-height && r3.preferred-width == foo.preferred-width;
    out property <bool> t4: r4.min-height == foo.min-height && r4.preferred-width == foo.preferred-width;
    out property <bool> t5: r5.min-height == foo.min-height && r5.preferred-width == foo.preferred-width;
    out property <bool> t6: r6.min-height == foo.min-height && r6.preferred-width == foo.preferred-width;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (ERROR
      (UNEXPECTED 'T'))
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body)))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (string
                              (string_fragment)))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body)))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (string
                        (string_fragment)))))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (variable_set_equal
                            (var_identifier)
                            (assignment_prec_operator)
                            (string
                              (string_fragment)))))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (component_definition
                      (user_type_identifier)
                      (field_declaration_list
                        (field_declaration_list_body
                          (component_definition
                            (user_type_identifier)
                            (field_declaration_list
                              (field_declaration_list_body
                                (variable_set_equal
                                  (var_identifier)
                                  (assignment_prec_operator)
                                  (string
                                    (string_fragment)))))))))))))))
        (component_definition
          (user_type_identifier)
          (ERROR
            (int_number))
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (string
                        (string_fragment))))))
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (string
                        (string_fragment)))))))))
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (ERROR
            (comment)
            (var_identifier)
            (int_number)
            (UNEXPECTED 'H'))
          (field_declaration_list
            (field_declaration_list_body
              (component_definition
                (user_type_identifier)
                (field_declaration_list
                  (field_declaration_list_body
                    (variable_set_equal
                      (var_identifier)
                      (assignment_prec_operator)
                      (string
                        (string_fragment))))))))))
      (ERROR
        (var_identifier)
        (int_number)
        (UNEXPECTED 'T')
        (UNEXPECTED 'e')
        (UNEXPECTED 'o'))))
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (string
            (string_fragment))))))
  (ERROR
    (user_type_identifier)
    (UNEXPECTED 'e')
    (UNEXPECTED 'o')
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (int_number)
    (UNEXPECTED '2')
    (int_number)
    (UNEXPECTED '3')
    (int_number)
    (UNEXPECTED '4')
    (int_number)
    (UNEXPECTED '5')
    (int_number)
    (UNEXPECTED '6')
    (int_number)
    (UNEXPECTED '2')
    (int_number)
    (UNEXPECTED '2')
    (int_number)
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED 'o')
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED '2')
    (int_number)
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED 'o')
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED '3')
    (int_number)
    (UNEXPECTED '3')
    (int_number)
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED 'o')
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED '3')
    (int_number)
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED 'o')
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED '4')
    (int_number)
    (UNEXPECTED '4')
    (int_number)
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED 'o')
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED '4')
    (int_number)
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED 'o')
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED '5')
    (int_number)
    (UNEXPECTED '5')
    (int_number)
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED 'o')
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED '5')
    (int_number)
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED 'o')
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED '6')
    (int_number)
    (UNEXPECTED '6')
    (int_number)
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED 'o')
    (UNEXPECTED 'i')
    (UNEXPECTED 'h')
    (UNEXPECTED '6')
    (int_number)
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')
    (UNEXPECTED 'o')
    (UNEXPECTED 'e')
    (UNEXPECTED 'i')))
