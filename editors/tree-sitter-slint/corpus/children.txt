================================================================================
children_placeholder
================================================================================

Container := Rectangle {
    GridLayout {
        padding: 0phx;
        spacing: 0phx;
        Row {
            Rectangle {
                background: green;
            }
            @children
        }
    }
}

TestCase := Container {
    width: 300phx;
    height: 200phx;

    rect1 := Rectangle {
        background: black;
    }


    property <bool> rect1_pos_ok: rect1.x == 150phx;
}
--------------------------------------------------------------------------------

(document
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (component
        (type_identifier
          (user_type_identifier))
        (block
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (physical_length_value)))
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (physical_length_value)))
          (component
            (type_identifier
              (user_type_identifier))
            (block
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (assignment_expr
                    (var_identifier)
                    (assignment_prec_operator)
                    (var_identifier))))
              (children_identifier)))))))
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (physical_length_value)))
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (physical_length_value)))
      (component
        (var_identifier)
        (type_identifier
          (user_type_identifier))
        (block
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (var_identifier))))
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier)
        (comparison_binary_expression
          (var_identifier
            (post_identifier))
          (comparison_operator)
          (value
            (physical_length_value)))))))

================================================================================
children_placeholder_two_levels
================================================================================

Container := Rectangle {
    GridLayout {
        padding: 0phx;
        spacing: 0phx;
        Row {
            Rectangle {
                background: green;
            }
            @children
        }
    }
}

MegaContainer := Rectangle {
    Container {
        @children
        width: parent.width;
        height: parent.height;
    }
}

TestCase := MegaContainer {
    width: 300phx;
    height: 200phx;

    rect1 := Rectangle {
        background: black;
    }


    property <bool> rect1_pos_ok: rect1.x == 150phx;
}
--------------------------------------------------------------------------------

(document
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (component
        (type_identifier
          (user_type_identifier))
        (block
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (physical_length_value)))
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (physical_length_value)))
          (component
            (type_identifier
              (user_type_identifier))
            (block
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (assignment_expr
                    (var_identifier)
                    (assignment_prec_operator)
                    (var_identifier))))
              (children_identifier)))))))
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (component
        (type_identifier
          (user_type_identifier))
        (block
          (children_identifier)
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (var_identifier
              (reference_identifier)
              (post_identifier)))
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (var_identifier
              (reference_identifier)
              (post_identifier)))))))
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (physical_length_value)))
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (physical_length_value)))
      (component
        (var_identifier)
        (type_identifier
          (user_type_identifier))
        (block
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (var_identifier))))
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier)
        (comparison_binary_expression
          (var_identifier
            (post_identifier))
          (comparison_operator)
          (value
            (physical_length_value)))))))

================================================================================
zorder
================================================================================

TestCase := Rectangle {
    width: 100phx;
    height: 100phx;

    property <int> touch_error;
    property <int> touch1;
    property <int> value;


    HorizontalLayout {
        spacing: 0;
        padding: 0;
        Rectangle {
            background: orange;
            z: 400;
            TouchArea {
                clicked => { touch_error+=78 }
            }
        }

        Rectangle {
            background: green;
            z: 3;

            TouchArea {
                clicked => { touch_error+=1 }
            }

            for i in [
                {color: #0f0, value: 8, },
                {color: #00f, value: 9, },
                {color: #f00, value: 10, },
            ] : Rectangle {
                z: 78;
                background: i.color;
                TouchArea {
                    clicked => {
                        root.value = i.value;
                    }
                }
            }

            TouchArea {
                clicked => { touch_error+=5 }
            }

            TouchArea {
                z: 4;
                clicked => { touch_error+=8 }
            }

        }

        Rectangle {
            background: pink;
            z: -43;

            TouchArea {
                clicked => { touch_error+=1 }
            }

            TouchArea {
                clicked => { touch_error+=180 }
            }

            TouchArea {
                clicked => {
                debug("HI");
                touch1+=1
                }
            }

            TouchArea {
                z: -1;
                clicked => { touch_error+=12 }
            }
        }
    }
}

--------------------------------------------------------------------------------

(document
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (physical_length_value)))
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (physical_length_value)))
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier))
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier))
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier))
      (component
        (type_identifier
          (user_type_identifier))
        (block
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (int_value)))
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (int_value)))
          (component
            (type_identifier
              (user_type_identifier))
            (block
              (assignment_expr
                (var_identifier)
                (assignment_prec_operator)
                (var_identifier))
              (assignment_expr
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (int_value)))
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (callback_event
                    (function_identifier)
                    (block
                      (assignment_expr
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (int_value)))))))))
          (component
            (type_identifier
              (user_type_identifier))
            (block
              (assignment_expr
                (var_identifier)
                (assignment_prec_operator)
                (var_identifier))
              (assignment_expr
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (int_value)))
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (callback_event
                    (function_identifier)
                    (block
                      (assignment_expr
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (int_value)))))))
              (for_loop
                (var_identifier)
                (for_range
                  (value_list
                    (value
                      (anon_struct
                        (var_identifier)
                        (value
                          (color_value))
                        (var_identifier)
                        (value
                          (int_value))))
                    (value
                      (anon_struct
                        (var_identifier)
                        (value
                          (color_value))
                        (var_identifier)
                        (value
                          (int_value))))
                    (value
                      (anon_struct
                        (var_identifier)
                        (value
                          (color_value))
                        (var_identifier)
                        (value
                          (int_value))))))
                (component
                  (type_identifier
                    (user_type_identifier))
                  (block
                    (assignment_expr
                      (var_identifier)
                      (assignment_prec_operator)
                      (value
                        (int_value)))
                    (assignment_expr
                      (var_identifier)
                      (assignment_prec_operator)
                      (var_identifier
                        (post_identifier)))
                    (component
                      (type_identifier
                        (user_type_identifier))
                      (block
                        (callback_event
                          (function_identifier)
                          (block
                            (assignment_expr
                              (var_identifier
                                (reference_identifier)
                                (post_identifier))
                              (assignment_prec_operator)
                              (var_identifier
                                (post_identifier))))))))))
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (callback_event
                    (function_identifier)
                    (block
                      (assignment_expr
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (int_value)))))))
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (assignment_expr
                    (var_identifier)
                    (assignment_prec_operator)
                    (value
                      (int_value)))
                  (callback_event
                    (function_identifier)
                    (block
                      (assignment_expr
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (int_value)))))))))
          (component
            (type_identifier
              (user_type_identifier))
            (block
              (assignment_expr
                (var_identifier)
                (assignment_prec_operator)
                (var_identifier))
              (assignment_expr
                (var_identifier)
                (assignment_prec_operator)
                (unary_expression
                  (unary_prec_operator)
                  (value
                    (int_value))))
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (callback_event
                    (function_identifier)
                    (block
                      (assignment_expr
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (int_value)))))))
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (callback_event
                    (function_identifier)
                    (block
                      (assignment_expr
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (int_value)))))))
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (callback_event
                    (function_identifier)
                    (block
                      (function_call
                        (function_identifier)
                        (call_signature
                          (value
                            (string_value))))
                      (assignment_expr
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (int_value)))))))
              (component
                (type_identifier
                  (user_type_identifier))
                (block
                  (assignment_expr
                    (var_identifier)
                    (assignment_prec_operator)
                    (unary_expression
                      (unary_prec_operator)
                      (value
                        (int_value))))
                  (callback_event
                    (function_identifier)
                    (block
                      (assignment_expr
                        (var_identifier)
                        (assignment_prec_operator)
                        (value
                          (int_value))))))))))))))
