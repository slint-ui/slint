================================================================================
issue_1837_percent_comparison
================================================================================

Inner := Rectangle {
    property <percent> val;
    background: val < 50% ? red : blue;
}

// It seems the indirection is required
Outer := VerticalLayout {
    property <percent> val;
    Inner { val: parent.val;    } // Commenting this line does not produce a compiler error

    Rectangle { background: val < 50% ? green : yellow; }

}

export AppWindow := Window {
    width: 240px;
    height: 240px;
    Outer { val: 50%; }
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (type_identifier)
    (type_identifier)
    (block
      (block_statement
        (property
          (type_identifier)
          (var_identifier)))
      (block_statement
        (assignment
          (var_identifier)
          (assignment_prec_operator)
          (comparison_binary_expression
            (type_identifier)
            (comparison_operator)
            (ternary_expression
              (value
                (percent_value))
              (type_identifier)
              (type_identifier)))))))
  (comment)
  (component_definition
    (type_identifier)
    (type_identifier)
    (block
      (block_statement
        (property
          (type_identifier)
          (var_identifier)))
      (block_statement
        (component
          (type_identifier)
          (block
            (block_statement
              (assignment
                (var_identifier)
                (assignment_prec_operator)
                (var_identifier
                  (reference_identifier)
                  (post_identifier)))))))
      (comment)
      (block_statement
        (component
          (type_identifier)
          (block
            (block_statement
              (assignment
                (var_identifier)
                (assignment_prec_operator)
                (comparison_binary_expression
                  (type_identifier)
                  (comparison_operator)
                  (ternary_expression
                    (value
                      (percent_value))
                    (type_identifier)
                    (type_identifier))))))))))
  (component_definition
    (export_modifier)
    (type_identifier)
    (type_identifier)
    (block
      (block_statement
        (assignment
          (var_identifier)
          (assignment_prec_operator)
          (value
            (length_value))))
      (block_statement
        (assignment
          (var_identifier)
          (assignment_prec_operator)
          (value
            (length_value))))
      (block_statement
        (component
          (type_identifier)
          (block
            (block_statement
              (assignment
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (percent_value))))))))))

================================================================================
issue_1846_visibility_in_for
================================================================================

TestCase := Rectangle {
    height: 100phx;
    width: 100phx;
    property <int> clicked;
    property <bool> condition;

    if true : TouchArea {
        visible: condition;
        clicked => { root.clicked += 1; }
    }

    HorizontalLayout {
        for xx in [10] : TouchArea {
            visible: false;
            clicked => { root.clicked += xx; }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (type_identifier)
    (type_identifier)
    (ERROR
      (block_statement
        (assignment
          (var_identifier)
          (assignment_prec_operator)
          (value
            (physical_length_value))))
      (block_statement
        (assignment
          (var_identifier)
          (assignment_prec_operator)
          (value
            (physical_length_value))))
      (block_statement
        (property
          (type_identifier)
          (var_identifier)))
      (block_statement
        (property
          (type_identifier)
          (var_identifier)))
      (UNEXPECTED 'T'))
    (block
      (block_statement
        (assignment
          (var_identifier)
          (assignment_prec_operator)
          (type_identifier)))
      (block_statement
        (callback_event
          (function_identifier)
          (block
            (block_statement
              (assignment
                (var_identifier
                  (reference_identifier)
                  (post_identifier))
                (assignment_prec_operator)
                (value
                  (int_value)))))))))
  (ERROR
    (type_identifier)
    (UNEXPECTED 'x')
    (UNEXPECTED 'T')
    (UNEXPECTED 'v')
    (UNEXPECTED 'b')
    (UNEXPECTED 'l')
    (UNEXPECTED 'l')
    (UNEXPECTED 'x')))
