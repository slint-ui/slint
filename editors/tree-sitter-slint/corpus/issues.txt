================================================================================
issue_1837_percent_comparison
================================================================================

Inner := Rectangle {
    property <percent> val;
    background: val < 50% ? red : blue;
}

// It seems the indirection is required
Outer := VerticalLayout {
    property <percent> val;
    Inner { val: parent.val;    } // Commenting this line does not produce a compiler error

    Rectangle { background: val < 50% ? green : yellow; }

}

export AppWindow := Window {
    width: 240px;
    height: 240px;
    Outer { val: 50%; }
}
--------------------------------------------------------------------------------

(document
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier))
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (comparison_binary_expression
          (var_identifier)
          (comparison_operator)
          (ternary_expression
            (value
              (percent_value))
            (var_identifier)
            (var_identifier))))))
  (comment)
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier))
      (component
        (type_identifier
          (user_type_identifier))
        (block
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (var_identifier
              (reference_identifier)
              (post_identifier)))))
      (comment)
      (component
        (type_identifier
          (user_type_identifier))
        (block
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (comparison_binary_expression
              (var_identifier)
              (comparison_operator)
              (ternary_expression
                (value
                  (percent_value))
                (var_identifier)
                (var_identifier))))))))
  (export_statement)
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (length_value)))
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (length_value)))
      (component
        (type_identifier
          (user_type_identifier))
        (block
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (percent_value))))))))

================================================================================
issue_1846_visibility_in_for
================================================================================

TestCase := Rectangle {
    height: 100phx;
    width: 100phx;
    property <int> clicked;
    property <bool> condition;

    if true : TouchArea {
        visible: condition;
        clicked => { root.clicked += 1; }
    }

    HorizontalLayout {
        for xx in [10] : TouchArea {
            visible: false;
            clicked => { root.clicked += xx; }
        }
    }
}

--------------------------------------------------------------------------------

(document
  (component_definition
    (type_identifier
      (user_type_identifier))
    (type_identifier
      (user_type_identifier))
    (block
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (physical_length_value)))
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (value
          (physical_length_value)))
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier))
      (property
        (type
          (type_identifier
            (user_type_identifier)))
        (var_identifier))
      (if_statement
        (value
          (bool_value))
        (component
          (type_identifier
            (user_type_identifier))
          (block
            (assignment_expr
              (var_identifier)
              (assignment_prec_operator)
              (var_identifier))
            (callback_event
              (function_identifier)
              (block
                (assignment_expr
                  (var_identifier
                    (reference_identifier)
                    (post_identifier))
                  (assignment_prec_operator)
                  (value
                    (int_value))))))))
      (component
        (type_identifier
          (user_type_identifier))
        (block
          (for_loop
            (var_identifier)
            (for_range
              (value_list
                (value
                  (int_value))))
            (component
              (type_identifier
                (user_type_identifier))
              (block
                (assignment_expr
                  (var_identifier)
                  (assignment_prec_operator)
                  (value
                    (bool_value)))
                (callback_event
                  (function_identifier)
                  (block
                    (assignment_expr
                      (var_identifier
                        (reference_identifier)
                        (post_identifier))
                      (assignment_prec_operator)
                      (var_identifier))))))))))))
