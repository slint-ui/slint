================================================================================
issue_1837_percent_comparison
================================================================================

Inner := Rectangle {
    property <percent> val;
    background: val < 50% ? red : blue;
}

// It seems the indirection is required
Outer := VerticalLayout {
    property <percent> val;
    Inner { val: parent.val;    } // Commenting this line does not produce a compiler error

    Rectangle { background: val < 50% ? green : yellow; }

}

export AppWindow := Window {
    width: 240px;
    height: 240px;
    Outer { val: 50%; }
}
--------------------------------------------------------------------------------

(source_file
  (component_definition
    (type_identifier)
    (type_identifier)
    (block
      (block_statement
        (property
          (type
            (type_identifier))
          (var_identifier)))
      (assignment_expr
        (var_identifier)
        (assignment_prec_operator)
        (comparison_binary_expression
          (var_identifier)
          (comparison_operator)
          (ternary_expression
            (value
              (percent_value))
            (var_identifier)
            (var_identifier))))))
  (comment)
  (component_definition
    (type_identifier)
    (type_identifier)
    (block
      (block_statement
        (property
          (type
            (type_identifier))
          (var_identifier)))
      (block_statement
        (component
          (type_identifier)
          (block
            (assignment_expr
              (var_identifier)
              (assignment_prec_operator)
              (var_identifier
                (reference_identifier)
                (post_identifier))))))
      (comment)
      (block_statement
        (component
          (type_identifier)
          (block
            (assignment_expr
              (var_identifier)
              (assignment_prec_operator)
              (comparison_binary_expression
                (var_identifier)
                (comparison_operator)
                (ternary_expression
                  (value
                    (percent_value))
                  (var_identifier)
                  (var_identifier)))))))))
  (export_statement)
  (component_definition
    (type_identifier)
    (type_identifier)
    (block
      (block_statement
        (binding_block_statement
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (length_value)))))
      (block_statement
        (binding_block_statement
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (length_value)))))
      (block_statement
        (component
          (type_identifier)
          (block
            (assignment_expr
              (var_identifier)
              (assignment_prec_operator)
              (value
                (percent_value)))))))))

================================================================================
issue_1846_visibility_in_for
================================================================================

TestCase := Rectangle {
    height: 100phx;
    width: 100phx;
    property <int> clicked;
    property <bool> condition;

    if true : TouchArea {
        visible: condition;
        clicked => { root.clicked += 1; }
    }

    HorizontalLayout {
        for xx in [10] : TouchArea {
            visible: false;
            clicked => { root.clicked += xx; }
        }
    }
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (type_identifier)
    (type_identifier)
    (block
      (block_statement
        (binding_block_statement
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (physical_length_value)))))
      (block_statement
        (binding_block_statement
          (assignment_expr
            (var_identifier)
            (assignment_prec_operator)
            (value
              (physical_length_value)))))
      (block_statement
        (property
          (type
            (type_identifier))
          (var_identifier)))
      (block_statement
        (property
          (type
            (type_identifier))
          (var_identifier)))
      (block_statement
        (if_statement
          (value
            (bool_value))
          (component
            (type_identifier)
            (block
              (block_statement
                (binding_block_statement
                  (assignment_expr
                    (var_identifier)
                    (assignment_prec_operator)
                    (var_identifier))))
              (block_statement
                (binding_block_statement
                  (callback_event
                    (function_identifier)
                    (block
                      (assignment_expr
                        (var_identifier
                          (reference_identifier)
                          (post_identifier))
                        (assignment_prec_operator)
                        (value
                          (int_value)))))))))))
      (block_statement
        (component
          (type_identifier)
          (block
            (block_statement
              (for_loop
                (var_identifier)
                (for_range
                  (value_list
                    (value
                      (int_value))))
                (component
                  (type_identifier)
                  (block
                    (block_statement
                      (binding_block_statement
                        (assignment_expr
                          (var_identifier)
                          (assignment_prec_operator)
                          (value
                            (bool_value)))))
                    (block_statement
                      (binding_block_statement
                        (callback_event
                          (function_identifier)
                          (block
                            (assignment_expr
                              (var_identifier
                                (reference_identifier)
                                (post_identifier))
                              (assignment_prec_operator)
                              (var_identifier))))))))))))))))
