================================================================================
A basic window
================================================================================

AppWindow := Window {

}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    name: (user_type_identifier)
    super_type: (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body))))

================================================================================
Visibility modifier
================================================================================

export AppWindow := Window {

}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (visibility_modifier)
    name: (user_type_identifier)
    super_type: (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body))))

================================================================================
A window with a sub component
================================================================================

AppWindow := Window {
    Rectangle {

    }
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    name: (user_type_identifier)
    super_type: (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          super_type: (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body)))))))

================================================================================
Setting a property
TODO: Fix `variable_set_equal`
TODO: Rename `prev_name`
================================================================================

MyApp := Window {
    preferred-width: 200px;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    name: (user_type_identifier)
    super_type: (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          prev_name: (var_identifier)
          (assignment_prec_operator)
          (value
            (value_with_units
              (number
                (int_number))
              (unit_type))))))))

================================================================================
Property declaration
================================================================================

Example := Rectangle {
    property<int> my-property;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    name: (user_type_identifier)
    super_type: (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (property_definition
          type: (builtin_type_identifier)
          name: (var_identifier))))))

================================================================================
Two way binding
================================================================================

Example := Window {
    property<brush> rect-color <=> r.background;
}

--------------------------------------------------------------------------------

================================================================================
Relative values
================================================================================

Example := Window {
    width: parent.width * 50%;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (variable_set_equal
          (var_identifier)
          (assignment_prec_operator)
          (mult_binary_expression
            (var_identifier
              (reference_identifier)
              (post_identifier))
            (mult_prec_operator)
            (value
              (value_with_units
                (number
                  (int_number))
                (unit_type)))))))))

================================================================================
Define and set a property
================================================================================

Example := Window {
    property<int> p: 5px;
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (property_definition
          (builtin_type_identifier)
          (var_identifier)
          (property_expr
            (value
              (value_with_units
                (number
                  (int_number))
                (unit_type)))))))))

================================================================================
Named sub component
================================================================================

Example := Rectangle {
    foo := Rectangle {
        x: 42px;
    }
}

--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (component_definition
          (user_type_identifier)
          (user_type_identifier)
          (field_declaration_list
            (field_declaration_list_body
              (variable_set_equal
                (var_identifier)
                (assignment_prec_operator)
                (value
                  (value_with_units
                    (number
                      (int_number))
                    (unit_type)))))))))))

================================================================================
Conditional named component
================================================================================

Example := Window {
    if area.pressed : foo := Rectangle { background: blue; }
}


--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (if_statement_definition
          (var_identifier
            (post_identifier))
          (component_definition
            (user_type_identifier)
            (user_type_identifier)
            (field_declaration_list
              (field_declaration_list_body
                (variable_set_equal
                  (var_identifier)
                  (assignment_prec_operator)
                  (value
                    (language_constant)))))))))))

================================================================================
Conditional unnamed component
================================================================================

Example := Window {
    if !area.pressed : Rectangle { background: red; }
}


--------------------------------------------------------------------------------

(source_file
  (component_definition
    (user_type_identifier)
    (user_type_identifier)
    (field_declaration_list
      (field_declaration_list_body
        (if_statement_definition
          (unary_expression
            (unary_prec_operator)
            (var_identifier
              (post_identifier)))
          (component_definition
            (user_type_identifier)
            (field_declaration_list
              (field_declaration_list_body
                (variable_set_equal
                  (var_identifier)
                  (assignment_prec_operator)
                  (value
                    (language_constant)))))))))))
